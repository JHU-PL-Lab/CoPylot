@   0: let preamble$0 = {};
@   1: let &scope = alloc;
@   2: store &scope preamble$0;
@   3: let get_from_parent_scope = def (preamble$1) {
    @   4: let preamble$2 = "name is not defined";
    @   5: let &preamble$3 = alloc;
    @   6: store &preamble$3 preamble$2;
    @   7: let preamble$4 = "*value";
    @   8: let preamble$5 = {};
    @   9: let preamble$6 = preamble$5{preamble$4 -> &preamble$3};
    @  10: let &preamble$7 = alloc;
    @  11: store &preamble$7 preamble$6;
    @  12: raise &preamble$7;

};
@  13: let get_from_scope = def (preamble$8) {
    @  14: let preamble$9 = get &scope;
    @  15: let preamble$10 = preamble$9 haskey preamble$8;
    @  16: let &preamble$11 = if preamble$10 then {
        @  19: let &preamble$12 = preamble$9{preamble$8};
        @  20: ifresult &preamble$12;

    } else {
        @  17: let &preamble$13 = get_from_parent_scope(preamble$8);
        @  18: ifresult &preamble$13;

    };
    @  21: return &preamble$11;

};
@  22: let &preamble$15 = alloc;
@  23: let preamble$14 = 1;
@  24: store &preamble$15 preamble$14;
@  25: let preamble$16 = {};
@  26: let preamble$17 = "*value";
@  27: let preamble$18 = preamble$16{preamble$17 -> &preamble$15};
@  28: let &True = alloc;
@  29: store &True preamble$18;
@  30: let &preamble$20 = alloc;
@  31: let preamble$19 = 0;
@  32: store &preamble$20 preamble$19;
@  33: let preamble$21 = {};
@  34: let preamble$22 = "*value";
@  35: let preamble$23 = preamble$21{preamble$22 -> &preamble$20};
@  36: let &False = alloc;
@  37: store &False preamble$23;
@  38: let &preamble$25 = alloc;
@  39: let preamble$24 = None;
@  40: store &preamble$25 preamble$24;
@  41: let preamble$26 = {};
@  42: let preamble$27 = "*value";
@  43: let preamble$28 = preamble$26{preamble$27 -> &preamble$25};
@  44: let &None = alloc;
@  45: store &None preamble$28;
@  46: let &preamble$30 = alloc;
@  47: let preamble$29 = NotImplemented;
@  48: store &preamble$30 preamble$29;
@  49: let preamble$31 = {};
@  50: let preamble$32 = "*value";
@  51: let preamble$33 = preamble$31{preamble$32 -> &preamble$30};
@  52: let &NotImplemented = alloc;
@  53: store &NotImplemented preamble$33;
@  54: let preamble$54 = def (preamble$34) {
    @  55: let preamble$35 = 0;
    @  56: let &preamble$36 = preamble$34[preamble$35];
    @  57: let preamble$37 = get &preamble$36;
    @  58: let preamble$38 = "*value";
    @  59: let preamble$39 = preamble$37 haskey preamble$38;
    @  60: let &preamble$40 = if preamble$39 then {
        @  70: let &preamble$41 = preamble$37{preamble$38};
        @  71: ifresult &preamble$41;

    } else {
        @  61: let preamble$42 = "Object has no attribute *value";
        @  62: let &preamble$43 = alloc;
        @  63: store &preamble$43 preamble$42;
        @  64: let preamble$44 = "*value";
        @  65: let preamble$45 = {};
        @  66: let preamble$46 = preamble$45{preamble$44 -> &preamble$43};
        @  67: let &preamble$47 = alloc;
        @  68: store &preamble$47 preamble$46;
        @  69: raise &preamble$47;

    };
    @  72: let preamble$48 = get &preamble$40;
    @  73: let &preamble$49 = alloc;
    @  74: store &preamble$49 preamble$48;
    @  75: let preamble$50 = "*value";
    @  76: let preamble$51 = {};
    @  77: let preamble$52 = preamble$51{preamble$50 -> &preamble$49};
    @  78: let &preamble$53 = alloc;
    @  79: store &preamble$53 preamble$52;

};
@  80: let &preamble$55 = alloc;
@  81: store &preamble$55 preamble$54;
@  82: let preamble$56 = "*value";
@  83: let preamble$57 = {};
@  84: let preamble$58 = preamble$57{preamble$56 -> &preamble$55};
@  85: let &preamble$59 = alloc;
@  86: store &preamble$59 preamble$58;
@  87: let &AttributeError = &preamble$59;
@  88: let preamble$80 = def (preamble$60) {
    @  89: let preamble$61 = 0;
    @  90: let &preamble$62 = preamble$60[preamble$61];
    @  91: let preamble$63 = get &preamble$62;
    @  92: let preamble$64 = "*value";
    @  93: let preamble$65 = preamble$63 haskey preamble$64;
    @  94: let &preamble$66 = if preamble$65 then {
        @ 104: let &preamble$67 = preamble$63{preamble$64};
        @ 105: ifresult &preamble$67;

    } else {
        @  95: let preamble$68 = "Object has no attribute *value";
        @  96: let &preamble$69 = alloc;
        @  97: store &preamble$69 preamble$68;
        @  98: let preamble$70 = "*value";
        @  99: let preamble$71 = {};
        @ 100: let preamble$72 = preamble$71{preamble$70 -> &preamble$69};
        @ 101: let &preamble$73 = alloc;
        @ 102: store &preamble$73 preamble$72;
        @ 103: raise &preamble$73;

    };
    @ 106: let preamble$74 = get &preamble$66;
    @ 107: let &preamble$75 = alloc;
    @ 108: store &preamble$75 preamble$74;
    @ 109: let preamble$76 = "*value";
    @ 110: let preamble$77 = {};
    @ 111: let preamble$78 = preamble$77{preamble$76 -> &preamble$75};
    @ 112: let &preamble$79 = alloc;
    @ 113: store &preamble$79 preamble$78;

};
@ 114: let &preamble$81 = alloc;
@ 115: store &preamble$81 preamble$80;
@ 116: let preamble$82 = "*value";
@ 117: let preamble$83 = {};
@ 118: let preamble$84 = preamble$83{preamble$82 -> &preamble$81};
@ 119: let &preamble$85 = alloc;
@ 120: store &preamble$85 preamble$84;
@ 121: let &TypeError = &preamble$85;
@ 122: let preamble$106 = def (preamble$86) {
    @ 123: let preamble$87 = 0;
    @ 124: let &preamble$88 = preamble$86[preamble$87];
    @ 125: let preamble$89 = get &preamble$88;
    @ 126: let preamble$90 = "*value";
    @ 127: let preamble$91 = preamble$89 haskey preamble$90;
    @ 128: let &preamble$92 = if preamble$91 then {
        @ 138: let &preamble$93 = preamble$89{preamble$90};
        @ 139: ifresult &preamble$93;

    } else {
        @ 129: let preamble$94 = "Object has no attribute *value";
        @ 130: let &preamble$95 = alloc;
        @ 131: store &preamble$95 preamble$94;
        @ 132: let preamble$96 = "*value";
        @ 133: let preamble$97 = {};
        @ 134: let preamble$98 = preamble$97{preamble$96 -> &preamble$95};
        @ 135: let &preamble$99 = alloc;
        @ 136: store &preamble$99 preamble$98;
        @ 137: raise &preamble$99;

    };
    @ 140: let preamble$100 = get &preamble$92;
    @ 141: let &preamble$101 = alloc;
    @ 142: store &preamble$101 preamble$100;
    @ 143: let preamble$102 = "*value";
    @ 144: let preamble$103 = {};
    @ 145: let preamble$104 = preamble$103{preamble$102 -> &preamble$101};
    @ 146: let &preamble$105 = alloc;
    @ 147: store &preamble$105 preamble$104;

};
@ 148: let &preamble$107 = alloc;
@ 149: store &preamble$107 preamble$106;
@ 150: let preamble$108 = "*value";
@ 151: let preamble$109 = {};
@ 152: let preamble$110 = preamble$109{preamble$108 -> &preamble$107};
@ 153: let &preamble$111 = alloc;
@ 154: store &preamble$111 preamble$110;
@ 155: let &NameError = &preamble$111;
@ 156: let preamble$132 = def (preamble$112) {
    @ 157: let preamble$113 = 0;
    @ 158: let &preamble$114 = preamble$112[preamble$113];
    @ 159: let preamble$115 = get &preamble$114;
    @ 160: let preamble$116 = "*value";
    @ 161: let preamble$117 = preamble$115 haskey preamble$116;
    @ 162: let &preamble$118 = if preamble$117 then {
        @ 172: let &preamble$119 = preamble$115{preamble$116};
        @ 173: ifresult &preamble$119;

    } else {
        @ 163: let preamble$120 = "Object has no attribute *value";
        @ 164: let &preamble$121 = alloc;
        @ 165: store &preamble$121 preamble$120;
        @ 166: let preamble$122 = "*value";
        @ 167: let preamble$123 = {};
        @ 168: let preamble$124 = preamble$123{preamble$122 -> &preamble$121};
        @ 169: let &preamble$125 = alloc;
        @ 170: store &preamble$125 preamble$124;
        @ 171: raise &preamble$125;

    };
    @ 174: let preamble$126 = get &preamble$118;
    @ 175: let &preamble$127 = alloc;
    @ 176: store &preamble$127 preamble$126;
    @ 177: let preamble$128 = "*value";
    @ 178: let preamble$129 = {};
    @ 179: let preamble$130 = preamble$129{preamble$128 -> &preamble$127};
    @ 180: let &preamble$131 = alloc;
    @ 181: store &preamble$131 preamble$130;

};
@ 182: let &preamble$133 = alloc;
@ 183: store &preamble$133 preamble$132;
@ 184: let preamble$134 = "*value";
@ 185: let preamble$135 = {};
@ 186: let preamble$136 = preamble$135{preamble$134 -> &preamble$133};
@ 187: let &preamble$137 = alloc;
@ 188: store &preamble$137 preamble$136;
@ 189: let &StopIteration = &preamble$137;
@ 190: let preamble$263 = def (preamble$138) {
    @ 191: let preamble$139 = 0;
    @ 192: let &preamble$140 = preamble$138[preamble$139];
    @ 193: let preamble$141 = get &preamble$140;
    @ 194: let preamble$142 = "*value";
    @ 195: let preamble$143 = preamble$141 haskey preamble$142;
    @ 196: let &preamble$144 = if preamble$143 then {
        @ 206: let &preamble$145 = preamble$141{preamble$142};
        @ 207: ifresult &preamble$145;

    } else {
        @ 197: let preamble$146 = "Object has no attribute *value";
        @ 198: let &preamble$147 = alloc;
        @ 199: store &preamble$147 preamble$146;
        @ 200: let preamble$148 = "*value";
        @ 201: let preamble$149 = {};
        @ 202: let preamble$150 = preamble$149{preamble$148 -> &preamble$147};
        @ 203: let &preamble$151 = alloc;
        @ 204: store &preamble$151 preamble$150;
        @ 205: raise &preamble$151;

    };
    @ 208: let preamble$152 = get &preamble$144;
    @ 209: let preamble$259 = None;
    @ 210: let preamble$258 = preamble$259 == preamble$152;
    @ 211: let preamble$260 = if preamble$258 then {
        @ 395: let preamble$261 = False;
        @ 396: ifresult preamble$261;

    } else {
        @ 212: let preamble$255 = False;
        @ 213: let preamble$254 = preamble$255 == preamble$152;
        @ 214: let preamble$256 = if preamble$254 then {
            @ 393: let preamble$257 = False;
            @ 394: ifresult preamble$257;

        } else {
            @ 215: let preamble$251 = 0;
            @ 216: let preamble$250 = preamble$251 == preamble$152;
            @ 217: let preamble$252 = if preamble$250 then {
                @ 391: let preamble$253 = False;
                @ 392: ifresult preamble$253;

            } else {
                @ 218: let preamble$247 = "";
                @ 219: let preamble$246 = preamble$247 == preamble$152;
                @ 220: let preamble$248 = if preamble$246 then {
                    @ 389: let preamble$249 = False;
                    @ 390: ifresult preamble$249;

                } else {
                    @ 221: let preamble$243 = [];
                    @ 222: let preamble$242 = preamble$243 == preamble$152;
                    @ 223: let preamble$244 = if preamble$242 then {
                        @ 387: let preamble$245 = False;
                        @ 388: ifresult preamble$245;

                    } else {
                        @ 224: let preamble$239 = {};
                        @ 225: let preamble$238 = preamble$239 == preamble$152;
                        @ 226: let preamble$240 = if preamble$238 then {
                            @ 385: let preamble$241 = False;
                            @ 386: ifresult preamble$241;

                        } else {
                            @ 227: let preamble$153 = "__bool__";
                            @ 228: let preamble$236 = preamble$141 haskey preamble$153;
                            @ 229: let preamble$237 = if preamble$236 then {
                                @ 322: let &preamble$155 = preamble$141{preamble$153};
                                @ 323: let &preamble$156 = &preamble$155;
                                @ 324: let preamble$158 = get &preamble$156;
                                @ 325: let preamble$160 = "*value";
                                @ 326: let preamble$161 = preamble$158 haskey preamble$160;
                                @ 327: let &preamble$162 = if preamble$161 then {
                                    @ 337: let &preamble$163 = preamble$158{preamble$160};
                                    @ 338: ifresult &preamble$163;

                                } else {
                                    @ 328: let preamble$164 = "Object has no attribute *value";
                                    @ 329: let &preamble$165 = alloc;
                                    @ 330: store &preamble$165 preamble$164;
                                    @ 331: let preamble$166 = "*value";
                                    @ 332: let preamble$167 = {};
                                    @ 333: let preamble$168 = preamble$167{preamble$166 -> &preamble$165};
                                    @ 334: let &preamble$169 = alloc;
                                    @ 335: store &preamble$169 preamble$168;
                                    @ 336: raise &preamble$169;

                                };
                                @ 339: let preamble$159 = get &preamble$162;
                                @ 340: let preamble$170 = isfunc preamble$159;
                                @ 341: let preamble$171 = not preamble$170;
                                @ 342: let &preamble$157 = alloc;
                                @ 343: store &preamble$157 preamble$171;
                                @ 344: while &preamble$157 {
                                    @ 345: let preamble$172 = "__call__";
                                    @ 346: let preamble$173 = preamble$158 haskey preamble$172;
                                    @ 347: let &preamble$174 = if preamble$173 then {
                                        @ 357: let &preamble$175 = preamble$158{preamble$172};
                                        @ 358: ifresult &preamble$175;

                                    } else {
                                        @ 348: let preamble$176 = "Object is not callable";
                                        @ 349: let &preamble$177 = alloc;
                                        @ 350: store &preamble$177 preamble$176;
                                        @ 351: let preamble$178 = "*value";
                                        @ 352: let preamble$179 = {};
                                        @ 353: let preamble$180 = preamble$179{preamble$178 -> &preamble$177};
                                        @ 354: let &preamble$181 = alloc;
                                        @ 355: store &preamble$181 preamble$180;
                                        @ 356: raise &preamble$181;

                                    };
                                    @ 359: let &preamble$156 = &preamble$174;
                                    @ 360: let preamble$158 = get &preamble$156;
                                    @ 361: let preamble$160 = "*value";
                                    @ 362: let preamble$161 = preamble$158 haskey preamble$160;
                                    @ 363: let &preamble$162 = if preamble$161 then {
                                        @ 373: let &preamble$163 = preamble$158{preamble$160};
                                        @ 374: ifresult &preamble$163;

                                    } else {
                                        @ 364: let preamble$164 = "Object has no attribute *value";
                                        @ 365: let &preamble$165 = alloc;
                                        @ 366: store &preamble$165 preamble$164;
                                        @ 367: let preamble$166 = "*value";
                                        @ 368: let preamble$167 = {};
                                        @ 369: let preamble$168 = preamble$167{preamble$166 -> &preamble$165};
                                        @ 370: let &preamble$169 = alloc;
                                        @ 371: store &preamble$169 preamble$168;
                                        @ 372: raise &preamble$169;

                                    };
                                    @ 375: let preamble$159 = get &preamble$162;
                                    @ 376: let preamble$170 = isfunc preamble$159;
                                    @ 377: let preamble$171 = not preamble$170;
                                    @ 378: let &preamble$157 = alloc;
                                    @ 379: store &preamble$157 preamble$171;

                                };
                                @ 380: let preamble$183 = [&preamble$140];
                                @ 381: let &preamble$182 = preamble$159(preamble$183);
                                @ 382: let preamble$184 = get &preamble$182;
                                @ 383: ifresult preamble$184;

                            } else {
                                @ 230: let preamble$154 = "__len__";
                                @ 231: let preamble$234 = preamble$141 haskey preamble$154;
                                @ 232: let preamble$235 = if preamble$234 then {
                                    @ 235: let &preamble$185 = preamble$141{preamble$154};
                                    @ 236: let &preamble$186 = &preamble$185;
                                    @ 237: let preamble$188 = get &preamble$186;
                                    @ 238: let preamble$190 = "*value";
                                    @ 239: let preamble$191 = preamble$188 haskey preamble$190;
                                    @ 240: let &preamble$192 = if preamble$191 then {
                                        @ 250: let &preamble$193 = preamble$188{preamble$190};
                                        @ 251: ifresult &preamble$193;

                                    } else {
                                        @ 241: let preamble$194 = "Object has no attribute *value";
                                        @ 242: let &preamble$195 = alloc;
                                        @ 243: store &preamble$195 preamble$194;
                                        @ 244: let preamble$196 = "*value";
                                        @ 245: let preamble$197 = {};
                                        @ 246: let preamble$198 = preamble$197{preamble$196 -> &preamble$195};
                                        @ 247: let &preamble$199 = alloc;
                                        @ 248: store &preamble$199 preamble$198;
                                        @ 249: raise &preamble$199;

                                    };
                                    @ 252: let preamble$189 = get &preamble$192;
                                    @ 253: let preamble$200 = isfunc preamble$189;
                                    @ 254: let preamble$201 = not preamble$200;
                                    @ 255: let &preamble$187 = alloc;
                                    @ 256: store &preamble$187 preamble$201;
                                    @ 257: while &preamble$187 {
                                        @ 258: let preamble$202 = "__call__";
                                        @ 259: let preamble$203 = preamble$188 haskey preamble$202;
                                        @ 260: let &preamble$204 = if preamble$203 then {
                                            @ 270: let &preamble$205 = preamble$188{preamble$202};
                                            @ 271: ifresult &preamble$205;

                                        } else {
                                            @ 261: let preamble$206 = "Object is not callable";
                                            @ 262: let &preamble$207 = alloc;
                                            @ 263: store &preamble$207 preamble$206;
                                            @ 264: let preamble$208 = "*value";
                                            @ 265: let preamble$209 = {};
                                            @ 266: let preamble$210 = preamble$209{preamble$208 -> &preamble$207};
                                            @ 267: let &preamble$211 = alloc;
                                            @ 268: store &preamble$211 preamble$210;
                                            @ 269: raise &preamble$211;

                                        };
                                        @ 272: let &preamble$186 = &preamble$204;
                                        @ 273: let preamble$188 = get &preamble$186;
                                        @ 274: let preamble$190 = "*value";
                                        @ 275: let preamble$191 = preamble$188 haskey preamble$190;
                                        @ 276: let &preamble$192 = if preamble$191 then {
                                            @ 286: let &preamble$193 = preamble$188{preamble$190};
                                            @ 287: ifresult &preamble$193;

                                        } else {
                                            @ 277: let preamble$194 = "Object has no attribute *value";
                                            @ 278: let &preamble$195 = alloc;
                                            @ 279: store &preamble$195 preamble$194;
                                            @ 280: let preamble$196 = "*value";
                                            @ 281: let preamble$197 = {};
                                            @ 282: let preamble$198 = preamble$197{preamble$196 -> &preamble$195};
                                            @ 283: let &preamble$199 = alloc;
                                            @ 284: store &preamble$199 preamble$198;
                                            @ 285: raise &preamble$199;

                                        };
                                        @ 288: let preamble$189 = get &preamble$192;
                                        @ 289: let preamble$200 = isfunc preamble$189;
                                        @ 290: let preamble$201 = not preamble$200;
                                        @ 291: let &preamble$187 = alloc;
                                        @ 292: store &preamble$187 preamble$201;

                                    };
                                    @ 293: let preamble$213 = [&preamble$140];
                                    @ 294: let &preamble$212 = preamble$189(preamble$213);
                                    @ 295: let preamble$214 = get &preamble$212;
                                    @ 296: let preamble$215 = "*value";
                                    @ 297: let preamble$216 = preamble$214 haskey preamble$215;
                                    @ 298: let &preamble$217 = if preamble$216 then {
                                        @ 308: let &preamble$218 = preamble$214{preamble$215};
                                        @ 309: ifresult &preamble$218;

                                    } else {
                                        @ 299: let preamble$219 = "Object has no attribute *value";
                                        @ 300: let &preamble$220 = alloc;
                                        @ 301: store &preamble$220 preamble$219;
                                        @ 302: let preamble$221 = "*value";
                                        @ 303: let preamble$222 = {};
                                        @ 304: let preamble$223 = preamble$222{preamble$221 -> &preamble$220};
                                        @ 305: let &preamble$224 = alloc;
                                        @ 306: store &preamble$224 preamble$223;
                                        @ 307: raise &preamble$224;

                                    };
                                    @ 310: let preamble$225 = get &preamble$217;
                                    @ 311: let preamble$227 = isint preamble$225;
                                    @ 312: let preamble$226 = if preamble$227 then {
                                        @ 313: let preamble$230 = 0;
                                        @ 314: let preamble$229 = preamble$230 == preamble$225;
                                        @ 315: let preamble$231 = if preamble$229 then {
                                            @ 318: let preamble$232 = False;
                                            @ 319: ifresult preamble$232;

                                        } else {
                                            @ 316: let preamble$228 = True;
                                            @ 317: ifresult preamble$228;

                                        };

                                    } else {

                                    };
                                    @ 320: ifresult preamble$226;

                                } else {
                                    @ 233: let preamble$233 = True;
                                    @ 234: ifresult preamble$233;

                                };
                                @ 321: ifresult preamble$235;

                            };
                            @ 384: ifresult preamble$237;

                        };

                    };

                };

            };

        };

    };
    @ 397: ifresult preamble$260;
    @ 398: let &preamble$262 = if preamble$260 then {
        @ 400: ifresult &True;

    } else {
        @ 399: ifresult &False;

    };
    @ 401: return &preamble$262;

};
@ 402: let &preamble$264 = alloc;
@ 403: store &preamble$264 preamble$263;
@ 404: let preamble$265 = "*value";
@ 405: let preamble$266 = {};
@ 406: let preamble$267 = preamble$266{preamble$265 -> &preamble$264};
@ 407: let &preamble$268 = alloc;
@ 408: store &preamble$268 preamble$267;
@ 409: let &bool = &preamble$268;
@ 410: let &int_add = alloc;
@ 411: let preamble$304 = def (preamble$269) {
    @ 412: let preamble$270 = 0;
    @ 413: let &preamble$271 = preamble$269[preamble$270];
    @ 414: let preamble$272 = get &preamble$271;
    @ 415: let preamble$273 = "*value";
    @ 416: let preamble$274 = preamble$272 haskey preamble$273;
    @ 417: let &preamble$275 = if preamble$274 then {
        @ 427: let &preamble$276 = preamble$272{preamble$273};
        @ 428: ifresult &preamble$276;

    } else {
        @ 418: let preamble$277 = "Object has no attribute *value";
        @ 419: let &preamble$278 = alloc;
        @ 420: store &preamble$278 preamble$277;
        @ 421: let preamble$279 = "*value";
        @ 422: let preamble$280 = {};
        @ 423: let preamble$281 = preamble$280{preamble$279 -> &preamble$278};
        @ 424: let &preamble$282 = alloc;
        @ 425: store &preamble$282 preamble$281;
        @ 426: raise &preamble$282;

    };
    @ 429: let preamble$283 = get &preamble$275;
    @ 430: let preamble$284 = 1;
    @ 431: let &preamble$285 = preamble$269[preamble$284];
    @ 432: let preamble$286 = get &preamble$285;
    @ 433: let preamble$287 = "*value";
    @ 434: let preamble$288 = preamble$286 haskey preamble$287;
    @ 435: let &preamble$289 = if preamble$288 then {
        @ 445: let &preamble$290 = preamble$286{preamble$287};
        @ 446: ifresult &preamble$290;

    } else {
        @ 436: let preamble$291 = "Object has no attribute *value";
        @ 437: let &preamble$292 = alloc;
        @ 438: store &preamble$292 preamble$291;
        @ 439: let preamble$293 = "*value";
        @ 440: let preamble$294 = {};
        @ 441: let preamble$295 = preamble$294{preamble$293 -> &preamble$292};
        @ 442: let &preamble$296 = alloc;
        @ 443: store &preamble$296 preamble$295;
        @ 444: raise &preamble$296;

    };
    @ 447: let preamble$297 = get &preamble$289;
    @ 448: let preamble$298 = preamble$283 int+ preamble$297;
    @ 449: let &preamble$299 = alloc;
    @ 450: store &preamble$299 preamble$298;
    @ 451: let preamble$300 = "*value";
    @ 452: let preamble$301 = {};
    @ 453: let preamble$302 = preamble$301{preamble$300 -> &preamble$299};
    @ 454: let &preamble$303 = alloc;
    @ 455: store &preamble$303 preamble$302;
    @ 456: return &preamble$303;

};
@ 457: store &int_add preamble$304;
@ 458: let &method_call = alloc;
@ 459: let preamble$335 = def (preamble$305) {
    @ 460: let preamble$306 = 0;
    @ 461: let &preamble$307 = preamble$305[preamble$306];
    @ 462: let preamble$308 = get &preamble$307;
    @ 463: let preamble$309 = "*value";
    @ 464: let preamble$310 = preamble$308 haskey preamble$309;
    @ 465: let &preamble$311 = if preamble$310 then {
        @ 475: let &preamble$312 = preamble$308{preamble$309};
        @ 476: ifresult &preamble$312;

    } else {
        @ 466: let preamble$313 = "Object has no attribute *value";
        @ 467: let &preamble$314 = alloc;
        @ 468: store &preamble$314 preamble$313;
        @ 469: let preamble$315 = "*value";
        @ 470: let preamble$316 = {};
        @ 471: let preamble$317 = preamble$316{preamble$315 -> &preamble$314};
        @ 472: let &preamble$318 = alloc;
        @ 473: store &preamble$318 preamble$317;
        @ 474: raise &preamble$318;

    };
    @ 477: let preamble$319 = get &preamble$311;
    @ 478: let preamble$320 = "*value";
    @ 479: let preamble$321 = preamble$319 haskey preamble$320;
    @ 480: let &preamble$322 = if preamble$321 then {
        @ 490: let &preamble$323 = preamble$319{preamble$320};
        @ 491: ifresult &preamble$323;

    } else {
        @ 481: let preamble$324 = "Object has no attribute *value";
        @ 482: let &preamble$325 = alloc;
        @ 483: store &preamble$325 preamble$324;
        @ 484: let preamble$326 = "*value";
        @ 485: let preamble$327 = {};
        @ 486: let preamble$328 = preamble$327{preamble$326 -> &preamble$325};
        @ 487: let &preamble$329 = alloc;
        @ 488: store &preamble$329 preamble$328;
        @ 489: raise &preamble$329;

    };
    @ 492: let preamble$330 = get &preamble$322;
    @ 493: let preamble$331 = 1;
    @ 494: let preamble$332 = None;
    @ 495: let preamble$333 = preamble$305[preamble$331:preamble$332];
    @ 496: let &preamble$334 = preamble$330(preamble$333);
    @ 497: return &preamble$334;

};
@ 498: store &method_call preamble$335;
@ 499: let preamble$336 = "True";
@ 500: let preamble$337 = get &scope;
@ 501: let preamble$338 = preamble$337{preamble$336 -> &True};
@ 502: store &scope preamble$338;
@ 503: let preamble$339 = "False";
@ 504: let preamble$340 = get &scope;
@ 505: let preamble$341 = preamble$340{preamble$339 -> &False};
@ 506: store &scope preamble$341;
@ 507: let preamble$342 = "NotImplemented";
@ 508: let preamble$343 = get &scope;
@ 509: let preamble$344 = preamble$343{preamble$342 -> &NotImplemented};
@ 510: store &scope preamble$344;
@ 511: let preamble$345 = "*None";
@ 512: let preamble$346 = get &scope;
@ 513: let preamble$347 = preamble$346{preamble$345 -> &None};
@ 514: store &scope preamble$347;
@ 515: let preamble$348 = "bool";
@ 516: let preamble$349 = get &scope;
@ 517: let preamble$350 = preamble$349{preamble$348 -> &bool};
@ 518: store &scope preamble$350;
@ 519: let preamble$351 = "NameError";
@ 520: let preamble$352 = get &scope;
@ 521: let preamble$353 = preamble$352{preamble$351 -> &NameError};
@ 522: store &scope preamble$353;
@ 523: let preamble$354 = "TypeError";
@ 524: let preamble$355 = get &scope;
@ 525: let preamble$356 = preamble$355{preamble$354 -> &TypeError};
@ 526: store &scope preamble$356;
@ 527: let preamble$357 = "AttributeError";
@ 528: let preamble$358 = get &scope;
@ 529: let preamble$359 = preamble$358{preamble$357 -> &AttributeError};
@ 530: store &scope preamble$359;
@ 531: let preamble$360 = "ValueError";
@ 532: let preamble$361 = get &scope;
@ 533: let preamble$362 = preamble$361{preamble$360 -> &ValueError};
@ 534: store &scope preamble$362;
@ 535: let preamble$363 = "StopIteration";
@ 536: let preamble$364 = get &scope;
@ 537: let preamble$365 = preamble$364{preamble$363 -> &StopIteration};
@ 538: store &scope preamble$365;
@ 539: let lamia$0 = "list";
@ 540: let &lamia$1 = get_from_scope(lamia$0);
@ 541: let lamia$2 = get &lamia$1;
@ 542: let lamia$3 = "__getitem__";
@ 543: let lamia$4 = lamia$2 haskey lamia$3;
@ 544: let &lamia$5 = if lamia$4 then {
    @ 554: let &lamia$6 = lamia$2{lamia$3};
    @ 555: ifresult &lamia$6;

} else {
    @ 545: let lamia$7 = "Object has no attribute __getitem__";
    @ 546: let &lamia$8 = alloc;
    @ 547: store &lamia$8 lamia$7;
    @ 548: let lamia$9 = "*value";
    @ 549: let lamia$10 = {};
    @ 550: let lamia$11 = lamia$10{lamia$9 -> &lamia$8};
    @ 551: let &lamia$12 = alloc;
    @ 552: store &lamia$12 lamia$11;
    @ 553: raise &lamia$12;

};
@ 556: let lamia$13 = get &lamia$5;
@ 557: let lamia$14 = isfunc lamia$13;
@ 558: let &lamia$15 = if lamia$14 then {
    @ 560: let lamia$16 = def (lamia$17) {
        @ 561: let lamia$18 = [&lamia$1];
        @ 562: let lamia$19 = lamia$18 || lamia$17;
        @ 563: let &lamia$20 = lamia$13(lamia$19);
        @ 564: return &lamia$20;

    };
    @ 565: let &lamia$21 = alloc;
    @ 566: store &lamia$21 lamia$16;
    @ 567: let lamia$22 = "*value";
    @ 568: let lamia$23 = {};
    @ 569: let lamia$24 = lamia$23{lamia$22 -> &lamia$21};
    @ 570: let &lamia$25 = alloc;
    @ 571: store &lamia$25 lamia$24;
    @ 572: ifresult &lamia$25;

} else {
    @ 559: ifresult &lamia$5;

};
@ 573: let lamia$26 = "$norm1";
@ 574: let lamia$27 = get &scope;
@ 575: let lamia$28 = lamia$27{lamia$26 -> &lamia$15};
@ 576: store &scope lamia$28;
@ 577: let lamia$29 = "$norm2";
@ 578: let lamia$30 = get &scope;
@ 579: let lamia$31 = lamia$30{lamia$29 -> &slice};
@ 580: store &scope lamia$31;
@ 581: let lamia$32 = "$norm2";
@ 582: let &lamia$33 = get_from_scope(lamia$32);
@ 583: let lamia$34 = "*None";
@ 584: let &lamia$35 = get_from_scope(lamia$34);
@ 585: let lamia$36 = "*None";
@ 586: let &lamia$37 = get_from_scope(lamia$36);
@ 587: let lamia$38 = "*None";
@ 588: let &lamia$39 = get_from_scope(lamia$38);
@ 589: let &lamia$40 = &lamia$33;
@ 590: let lamia$42 = get &lamia$40;
@ 591: let lamia$44 = "*value";
@ 592: let lamia$45 = lamia$42 haskey lamia$44;
@ 593: let &lamia$46 = if lamia$45 then {
    @ 603: let &lamia$47 = lamia$42{lamia$44};
    @ 604: ifresult &lamia$47;

} else {
    @ 594: let lamia$48 = "Object has no attribute *value";
    @ 595: let &lamia$49 = alloc;
    @ 596: store &lamia$49 lamia$48;
    @ 597: let lamia$50 = "*value";
    @ 598: let lamia$51 = {};
    @ 599: let lamia$52 = lamia$51{lamia$50 -> &lamia$49};
    @ 600: let &lamia$53 = alloc;
    @ 601: store &lamia$53 lamia$52;
    @ 602: raise &lamia$53;

};
@ 605: let lamia$43 = get &lamia$46;
@ 606: let lamia$54 = isfunc lamia$43;
@ 607: let lamia$55 = not lamia$54;
@ 608: let &lamia$41 = alloc;
@ 609: store &lamia$41 lamia$55;
@ 610: while &lamia$41 {
    @ 611: let lamia$56 = "__call__";
    @ 612: let lamia$57 = lamia$42 haskey lamia$56;
    @ 613: let &lamia$58 = if lamia$57 then {
        @ 623: let &lamia$59 = lamia$42{lamia$56};
        @ 624: ifresult &lamia$59;

    } else {
        @ 614: let lamia$60 = "Object is not callable";
        @ 615: let &lamia$61 = alloc;
        @ 616: store &lamia$61 lamia$60;
        @ 617: let lamia$62 = "*value";
        @ 618: let lamia$63 = {};
        @ 619: let lamia$64 = lamia$63{lamia$62 -> &lamia$61};
        @ 620: let &lamia$65 = alloc;
        @ 621: store &lamia$65 lamia$64;
        @ 622: raise &lamia$65;

    };
    @ 625: let &lamia$40 = &lamia$58;
    @ 626: let lamia$42 = get &lamia$40;
    @ 627: let lamia$44 = "*value";
    @ 628: let lamia$45 = lamia$42 haskey lamia$44;
    @ 629: let &lamia$46 = if lamia$45 then {
        @ 639: let &lamia$47 = lamia$42{lamia$44};
        @ 640: ifresult &lamia$47;

    } else {
        @ 630: let lamia$48 = "Object has no attribute *value";
        @ 631: let &lamia$49 = alloc;
        @ 632: store &lamia$49 lamia$48;
        @ 633: let lamia$50 = "*value";
        @ 634: let lamia$51 = {};
        @ 635: let lamia$52 = lamia$51{lamia$50 -> &lamia$49};
        @ 636: let &lamia$53 = alloc;
        @ 637: store &lamia$53 lamia$52;
        @ 638: raise &lamia$53;

    };
    @ 641: let lamia$43 = get &lamia$46;
    @ 642: let lamia$54 = isfunc lamia$43;
    @ 643: let lamia$55 = not lamia$54;
    @ 644: let &lamia$41 = alloc;
    @ 645: store &lamia$41 lamia$55;

};
@ 646: let lamia$66 = [&lamia$35, &lamia$37, &lamia$39];
@ 647: let &lamia$67 = lamia$43(lamia$66);
@ 648: let lamia$68 = "$norm3";
@ 649: let lamia$69 = get &scope;
@ 650: let lamia$70 = lamia$69{lamia$68 -> &lamia$67};
@ 651: store &scope lamia$70;
@ 652: let lamia$71 = "$norm1";
@ 653: let &lamia$72 = get_from_scope(lamia$71);
@ 654: let lamia$73 = "$norm3";
@ 655: let &lamia$74 = get_from_scope(lamia$73);
@ 656: let &lamia$75 = &lamia$72;
@ 657: let lamia$77 = get &lamia$75;
@ 658: let lamia$79 = "*value";
@ 659: let lamia$80 = lamia$77 haskey lamia$79;
@ 660: let &lamia$81 = if lamia$80 then {
    @ 670: let &lamia$82 = lamia$77{lamia$79};
    @ 671: ifresult &lamia$82;

} else {
    @ 661: let lamia$83 = "Object has no attribute *value";
    @ 662: let &lamia$84 = alloc;
    @ 663: store &lamia$84 lamia$83;
    @ 664: let lamia$85 = "*value";
    @ 665: let lamia$86 = {};
    @ 666: let lamia$87 = lamia$86{lamia$85 -> &lamia$84};
    @ 667: let &lamia$88 = alloc;
    @ 668: store &lamia$88 lamia$87;
    @ 669: raise &lamia$88;

};
@ 672: let lamia$78 = get &lamia$81;
@ 673: let lamia$89 = isfunc lamia$78;
@ 674: let lamia$90 = not lamia$89;
@ 675: let &lamia$76 = alloc;
@ 676: store &lamia$76 lamia$90;
@ 677: while &lamia$76 {
    @ 678: let lamia$91 = "__call__";
    @ 679: let lamia$92 = lamia$77 haskey lamia$91;
    @ 680: let &lamia$93 = if lamia$92 then {
        @ 690: let &lamia$94 = lamia$77{lamia$91};
        @ 691: ifresult &lamia$94;

    } else {
        @ 681: let lamia$95 = "Object is not callable";
        @ 682: let &lamia$96 = alloc;
        @ 683: store &lamia$96 lamia$95;
        @ 684: let lamia$97 = "*value";
        @ 685: let lamia$98 = {};
        @ 686: let lamia$99 = lamia$98{lamia$97 -> &lamia$96};
        @ 687: let &lamia$100 = alloc;
        @ 688: store &lamia$100 lamia$99;
        @ 689: raise &lamia$100;

    };
    @ 692: let &lamia$75 = &lamia$93;
    @ 693: let lamia$77 = get &lamia$75;
    @ 694: let lamia$79 = "*value";
    @ 695: let lamia$80 = lamia$77 haskey lamia$79;
    @ 696: let &lamia$81 = if lamia$80 then {
        @ 706: let &lamia$82 = lamia$77{lamia$79};
        @ 707: ifresult &lamia$82;

    } else {
        @ 697: let lamia$83 = "Object has no attribute *value";
        @ 698: let &lamia$84 = alloc;
        @ 699: store &lamia$84 lamia$83;
        @ 700: let lamia$85 = "*value";
        @ 701: let lamia$86 = {};
        @ 702: let lamia$87 = lamia$86{lamia$85 -> &lamia$84};
        @ 703: let &lamia$88 = alloc;
        @ 704: store &lamia$88 lamia$87;
        @ 705: raise &lamia$88;

    };
    @ 708: let lamia$78 = get &lamia$81;
    @ 709: let lamia$89 = isfunc lamia$78;
    @ 710: let lamia$90 = not lamia$89;
    @ 711: let &lamia$76 = alloc;
    @ 712: store &lamia$76 lamia$90;

};
@ 713: let lamia$101 = [&lamia$74];
@ 714: let &lamia$102 = lamia$78(lamia$101);
@ 715: let lamia$103 = "$norm4";
@ 716: let lamia$104 = get &scope;
@ 717: let lamia$105 = lamia$104{lamia$103 -> &lamia$102};
@ 718: store &scope lamia$105;
@ 719: let lamia$106 = "list";
@ 720: let &lamia$107 = get_from_scope(lamia$106);
@ 721: let lamia$108 = get &lamia$107;
@ 722: let lamia$109 = "__getitem__";
@ 723: let lamia$110 = lamia$108 haskey lamia$109;
@ 724: let &lamia$111 = if lamia$110 then {
    @ 734: let &lamia$112 = lamia$108{lamia$109};
    @ 735: ifresult &lamia$112;

} else {
    @ 725: let lamia$113 = "Object has no attribute __getitem__";
    @ 726: let &lamia$114 = alloc;
    @ 727: store &lamia$114 lamia$113;
    @ 728: let lamia$115 = "*value";
    @ 729: let lamia$116 = {};
    @ 730: let lamia$117 = lamia$116{lamia$115 -> &lamia$114};
    @ 731: let &lamia$118 = alloc;
    @ 732: store &lamia$118 lamia$117;
    @ 733: raise &lamia$118;

};
@ 736: let lamia$119 = get &lamia$111;
@ 737: let lamia$120 = isfunc lamia$119;
@ 738: let &lamia$121 = if lamia$120 then {
    @ 740: let lamia$122 = def (lamia$123) {
        @ 741: let lamia$124 = [&lamia$107];
        @ 742: let lamia$125 = lamia$124 || lamia$123;
        @ 743: let &lamia$126 = lamia$119(lamia$125);
        @ 744: return &lamia$126;

    };
    @ 745: let &lamia$127 = alloc;
    @ 746: store &lamia$127 lamia$122;
    @ 747: let lamia$128 = "*value";
    @ 748: let lamia$129 = {};
    @ 749: let lamia$130 = lamia$129{lamia$128 -> &lamia$127};
    @ 750: let &lamia$131 = alloc;
    @ 751: store &lamia$131 lamia$130;
    @ 752: ifresult &lamia$131;

} else {
    @ 739: ifresult &lamia$111;

};
@ 753: let lamia$132 = "$norm5";
@ 754: let lamia$133 = get &scope;
@ 755: let lamia$134 = lamia$133{lamia$132 -> &lamia$121};
@ 756: store &scope lamia$134;
@ 757: let lamia$135 = "$norm6";
@ 758: let lamia$136 = get &scope;
@ 759: let lamia$137 = lamia$136{lamia$135 -> &slice};
@ 760: store &scope lamia$137;
@ 761: let lamia$138 = 1;
@ 762: let &lamia$139 = alloc;
@ 763: store &lamia$139 lamia$138;
@ 764: let lamia$140 = "*value";
@ 765: let lamia$141 = {};
@ 766: let lamia$142 = lamia$141{lamia$140 -> &lamia$139};
@ 767: let &lamia$143 = alloc;
@ 768: store &lamia$143 lamia$142;
@ 769: let lamia$144 = "$norm7";
@ 770: let lamia$145 = get &scope;
@ 771: let lamia$146 = lamia$145{lamia$144 -> &lamia$143};
@ 772: store &scope lamia$146;
@ 773: let lamia$147 = "$norm6";
@ 774: let &lamia$148 = get_from_scope(lamia$147);
@ 775: let lamia$149 = "$norm7";
@ 776: let &lamia$150 = get_from_scope(lamia$149);
@ 777: let lamia$151 = "*None";
@ 778: let &lamia$152 = get_from_scope(lamia$151);
@ 779: let lamia$153 = "*None";
@ 780: let &lamia$154 = get_from_scope(lamia$153);
@ 781: let &lamia$155 = &lamia$148;
@ 782: let lamia$157 = get &lamia$155;
@ 783: let lamia$159 = "*value";
@ 784: let lamia$160 = lamia$157 haskey lamia$159;
@ 785: let &lamia$161 = if lamia$160 then {
    @ 795: let &lamia$162 = lamia$157{lamia$159};
    @ 796: ifresult &lamia$162;

} else {
    @ 786: let lamia$163 = "Object has no attribute *value";
    @ 787: let &lamia$164 = alloc;
    @ 788: store &lamia$164 lamia$163;
    @ 789: let lamia$165 = "*value";
    @ 790: let lamia$166 = {};
    @ 791: let lamia$167 = lamia$166{lamia$165 -> &lamia$164};
    @ 792: let &lamia$168 = alloc;
    @ 793: store &lamia$168 lamia$167;
    @ 794: raise &lamia$168;

};
@ 797: let lamia$158 = get &lamia$161;
@ 798: let lamia$169 = isfunc lamia$158;
@ 799: let lamia$170 = not lamia$169;
@ 800: let &lamia$156 = alloc;
@ 801: store &lamia$156 lamia$170;
@ 802: while &lamia$156 {
    @ 803: let lamia$171 = "__call__";
    @ 804: let lamia$172 = lamia$157 haskey lamia$171;
    @ 805: let &lamia$173 = if lamia$172 then {
        @ 815: let &lamia$174 = lamia$157{lamia$171};
        @ 816: ifresult &lamia$174;

    } else {
        @ 806: let lamia$175 = "Object is not callable";
        @ 807: let &lamia$176 = alloc;
        @ 808: store &lamia$176 lamia$175;
        @ 809: let lamia$177 = "*value";
        @ 810: let lamia$178 = {};
        @ 811: let lamia$179 = lamia$178{lamia$177 -> &lamia$176};
        @ 812: let &lamia$180 = alloc;
        @ 813: store &lamia$180 lamia$179;
        @ 814: raise &lamia$180;

    };
    @ 817: let &lamia$155 = &lamia$173;
    @ 818: let lamia$157 = get &lamia$155;
    @ 819: let lamia$159 = "*value";
    @ 820: let lamia$160 = lamia$157 haskey lamia$159;
    @ 821: let &lamia$161 = if lamia$160 then {
        @ 831: let &lamia$162 = lamia$157{lamia$159};
        @ 832: ifresult &lamia$162;

    } else {
        @ 822: let lamia$163 = "Object has no attribute *value";
        @ 823: let &lamia$164 = alloc;
        @ 824: store &lamia$164 lamia$163;
        @ 825: let lamia$165 = "*value";
        @ 826: let lamia$166 = {};
        @ 827: let lamia$167 = lamia$166{lamia$165 -> &lamia$164};
        @ 828: let &lamia$168 = alloc;
        @ 829: store &lamia$168 lamia$167;
        @ 830: raise &lamia$168;

    };
    @ 833: let lamia$158 = get &lamia$161;
    @ 834: let lamia$169 = isfunc lamia$158;
    @ 835: let lamia$170 = not lamia$169;
    @ 836: let &lamia$156 = alloc;
    @ 837: store &lamia$156 lamia$170;

};
@ 838: let lamia$181 = [&lamia$150, &lamia$152, &lamia$154];
@ 839: let &lamia$182 = lamia$158(lamia$181);
@ 840: let lamia$183 = "$norm8";
@ 841: let lamia$184 = get &scope;
@ 842: let lamia$185 = lamia$184{lamia$183 -> &lamia$182};
@ 843: store &scope lamia$185;
@ 844: let lamia$186 = "$norm5";
@ 845: let &lamia$187 = get_from_scope(lamia$186);
@ 846: let lamia$188 = "$norm8";
@ 847: let &lamia$189 = get_from_scope(lamia$188);
@ 848: let &lamia$190 = &lamia$187;
@ 849: let lamia$192 = get &lamia$190;
@ 850: let lamia$194 = "*value";
@ 851: let lamia$195 = lamia$192 haskey lamia$194;
@ 852: let &lamia$196 = if lamia$195 then {
    @ 862: let &lamia$197 = lamia$192{lamia$194};
    @ 863: ifresult &lamia$197;

} else {
    @ 853: let lamia$198 = "Object has no attribute *value";
    @ 854: let &lamia$199 = alloc;
    @ 855: store &lamia$199 lamia$198;
    @ 856: let lamia$200 = "*value";
    @ 857: let lamia$201 = {};
    @ 858: let lamia$202 = lamia$201{lamia$200 -> &lamia$199};
    @ 859: let &lamia$203 = alloc;
    @ 860: store &lamia$203 lamia$202;
    @ 861: raise &lamia$203;

};
@ 864: let lamia$193 = get &lamia$196;
@ 865: let lamia$204 = isfunc lamia$193;
@ 866: let lamia$205 = not lamia$204;
@ 867: let &lamia$191 = alloc;
@ 868: store &lamia$191 lamia$205;
@ 869: while &lamia$191 {
    @ 870: let lamia$206 = "__call__";
    @ 871: let lamia$207 = lamia$192 haskey lamia$206;
    @ 872: let &lamia$208 = if lamia$207 then {
        @ 882: let &lamia$209 = lamia$192{lamia$206};
        @ 883: ifresult &lamia$209;

    } else {
        @ 873: let lamia$210 = "Object is not callable";
        @ 874: let &lamia$211 = alloc;
        @ 875: store &lamia$211 lamia$210;
        @ 876: let lamia$212 = "*value";
        @ 877: let lamia$213 = {};
        @ 878: let lamia$214 = lamia$213{lamia$212 -> &lamia$211};
        @ 879: let &lamia$215 = alloc;
        @ 880: store &lamia$215 lamia$214;
        @ 881: raise &lamia$215;

    };
    @ 884: let &lamia$190 = &lamia$208;
    @ 885: let lamia$192 = get &lamia$190;
    @ 886: let lamia$194 = "*value";
    @ 887: let lamia$195 = lamia$192 haskey lamia$194;
    @ 888: let &lamia$196 = if lamia$195 then {
        @ 898: let &lamia$197 = lamia$192{lamia$194};
        @ 899: ifresult &lamia$197;

    } else {
        @ 889: let lamia$198 = "Object has no attribute *value";
        @ 890: let &lamia$199 = alloc;
        @ 891: store &lamia$199 lamia$198;
        @ 892: let lamia$200 = "*value";
        @ 893: let lamia$201 = {};
        @ 894: let lamia$202 = lamia$201{lamia$200 -> &lamia$199};
        @ 895: let &lamia$203 = alloc;
        @ 896: store &lamia$203 lamia$202;
        @ 897: raise &lamia$203;

    };
    @ 900: let lamia$193 = get &lamia$196;
    @ 901: let lamia$204 = isfunc lamia$193;
    @ 902: let lamia$205 = not lamia$204;
    @ 903: let &lamia$191 = alloc;
    @ 904: store &lamia$191 lamia$205;

};
@ 905: let lamia$216 = [&lamia$189];
@ 906: let &lamia$217 = lamia$193(lamia$216);
@ 907: let lamia$218 = "$norm9";
@ 908: let lamia$219 = get &scope;
@ 909: let lamia$220 = lamia$219{lamia$218 -> &lamia$217};
@ 910: store &scope lamia$220;
@ 911: let lamia$221 = "list";
@ 912: let &lamia$222 = get_from_scope(lamia$221);
@ 913: let lamia$223 = get &lamia$222;
@ 914: let lamia$224 = "__getitem__";
@ 915: let lamia$225 = lamia$223 haskey lamia$224;
@ 916: let &lamia$226 = if lamia$225 then {
    @ 926: let &lamia$227 = lamia$223{lamia$224};
    @ 927: ifresult &lamia$227;

} else {
    @ 917: let lamia$228 = "Object has no attribute __getitem__";
    @ 918: let &lamia$229 = alloc;
    @ 919: store &lamia$229 lamia$228;
    @ 920: let lamia$230 = "*value";
    @ 921: let lamia$231 = {};
    @ 922: let lamia$232 = lamia$231{lamia$230 -> &lamia$229};
    @ 923: let &lamia$233 = alloc;
    @ 924: store &lamia$233 lamia$232;
    @ 925: raise &lamia$233;

};
@ 928: let lamia$234 = get &lamia$226;
@ 929: let lamia$235 = isfunc lamia$234;
@ 930: let &lamia$236 = if lamia$235 then {
    @ 932: let lamia$237 = def (lamia$238) {
        @ 933: let lamia$239 = [&lamia$222];
        @ 934: let lamia$240 = lamia$239 || lamia$238;
        @ 935: let &lamia$241 = lamia$234(lamia$240);
        @ 936: return &lamia$241;

    };
    @ 937: let &lamia$242 = alloc;
    @ 938: store &lamia$242 lamia$237;
    @ 939: let lamia$243 = "*value";
    @ 940: let lamia$244 = {};
    @ 941: let lamia$245 = lamia$244{lamia$243 -> &lamia$242};
    @ 942: let &lamia$246 = alloc;
    @ 943: store &lamia$246 lamia$245;
    @ 944: ifresult &lamia$246;

} else {
    @ 931: ifresult &lamia$226;

};
@ 945: let lamia$247 = "$norm10";
@ 946: let lamia$248 = get &scope;
@ 947: let lamia$249 = lamia$248{lamia$247 -> &lamia$236};
@ 948: store &scope lamia$249;
@ 949: let lamia$250 = "$norm11";
@ 950: let lamia$251 = get &scope;
@ 951: let lamia$252 = lamia$251{lamia$250 -> &slice};
@ 952: store &scope lamia$252;
@ 953: let lamia$253 = 2;
@ 954: let &lamia$254 = alloc;
@ 955: store &lamia$254 lamia$253;
@ 956: let lamia$255 = "*value";
@ 957: let lamia$256 = {};
@ 958: let lamia$257 = lamia$256{lamia$255 -> &lamia$254};
@ 959: let &lamia$258 = alloc;
@ 960: store &lamia$258 lamia$257;
@ 961: let lamia$259 = "$norm12";
@ 962: let lamia$260 = get &scope;
@ 963: let lamia$261 = lamia$260{lamia$259 -> &lamia$258};
@ 964: store &scope lamia$261;
@ 965: let lamia$262 = "$norm11";
@ 966: let &lamia$263 = get_from_scope(lamia$262);
@ 967: let lamia$264 = "*None";
@ 968: let &lamia$265 = get_from_scope(lamia$264);
@ 969: let lamia$266 = "$norm12";
@ 970: let &lamia$267 = get_from_scope(lamia$266);
@ 971: let lamia$268 = "*None";
@ 972: let &lamia$269 = get_from_scope(lamia$268);
@ 973: let &lamia$270 = &lamia$263;
@ 974: let lamia$272 = get &lamia$270;
@ 975: let lamia$274 = "*value";
@ 976: let lamia$275 = lamia$272 haskey lamia$274;
@ 977: let &lamia$276 = if lamia$275 then {
    @ 987: let &lamia$277 = lamia$272{lamia$274};
    @ 988: ifresult &lamia$277;

} else {
    @ 978: let lamia$278 = "Object has no attribute *value";
    @ 979: let &lamia$279 = alloc;
    @ 980: store &lamia$279 lamia$278;
    @ 981: let lamia$280 = "*value";
    @ 982: let lamia$281 = {};
    @ 983: let lamia$282 = lamia$281{lamia$280 -> &lamia$279};
    @ 984: let &lamia$283 = alloc;
    @ 985: store &lamia$283 lamia$282;
    @ 986: raise &lamia$283;

};
@ 989: let lamia$273 = get &lamia$276;
@ 990: let lamia$284 = isfunc lamia$273;
@ 991: let lamia$285 = not lamia$284;
@ 992: let &lamia$271 = alloc;
@ 993: store &lamia$271 lamia$285;
@ 994: while &lamia$271 {
    @ 995: let lamia$286 = "__call__";
    @ 996: let lamia$287 = lamia$272 haskey lamia$286;
    @ 997: let &lamia$288 = if lamia$287 then {
        @1007: let &lamia$289 = lamia$272{lamia$286};
        @1008: ifresult &lamia$289;

    } else {
        @ 998: let lamia$290 = "Object is not callable";
        @ 999: let &lamia$291 = alloc;
        @1000: store &lamia$291 lamia$290;
        @1001: let lamia$292 = "*value";
        @1002: let lamia$293 = {};
        @1003: let lamia$294 = lamia$293{lamia$292 -> &lamia$291};
        @1004: let &lamia$295 = alloc;
        @1005: store &lamia$295 lamia$294;
        @1006: raise &lamia$295;

    };
    @1009: let &lamia$270 = &lamia$288;
    @1010: let lamia$272 = get &lamia$270;
    @1011: let lamia$274 = "*value";
    @1012: let lamia$275 = lamia$272 haskey lamia$274;
    @1013: let &lamia$276 = if lamia$275 then {
        @1023: let &lamia$277 = lamia$272{lamia$274};
        @1024: ifresult &lamia$277;

    } else {
        @1014: let lamia$278 = "Object has no attribute *value";
        @1015: let &lamia$279 = alloc;
        @1016: store &lamia$279 lamia$278;
        @1017: let lamia$280 = "*value";
        @1018: let lamia$281 = {};
        @1019: let lamia$282 = lamia$281{lamia$280 -> &lamia$279};
        @1020: let &lamia$283 = alloc;
        @1021: store &lamia$283 lamia$282;
        @1022: raise &lamia$283;

    };
    @1025: let lamia$273 = get &lamia$276;
    @1026: let lamia$284 = isfunc lamia$273;
    @1027: let lamia$285 = not lamia$284;
    @1028: let &lamia$271 = alloc;
    @1029: store &lamia$271 lamia$285;

};
@1030: let lamia$296 = [&lamia$265, &lamia$267, &lamia$269];
@1031: let &lamia$297 = lamia$273(lamia$296);
@1032: let lamia$298 = "$norm13";
@1033: let lamia$299 = get &scope;
@1034: let lamia$300 = lamia$299{lamia$298 -> &lamia$297};
@1035: store &scope lamia$300;
@1036: let lamia$301 = "$norm10";
@1037: let &lamia$302 = get_from_scope(lamia$301);
@1038: let lamia$303 = "$norm13";
@1039: let &lamia$304 = get_from_scope(lamia$303);
@1040: let &lamia$305 = &lamia$302;
@1041: let lamia$307 = get &lamia$305;
@1042: let lamia$309 = "*value";
@1043: let lamia$310 = lamia$307 haskey lamia$309;
@1044: let &lamia$311 = if lamia$310 then {
    @1054: let &lamia$312 = lamia$307{lamia$309};
    @1055: ifresult &lamia$312;

} else {
    @1045: let lamia$313 = "Object has no attribute *value";
    @1046: let &lamia$314 = alloc;
    @1047: store &lamia$314 lamia$313;
    @1048: let lamia$315 = "*value";
    @1049: let lamia$316 = {};
    @1050: let lamia$317 = lamia$316{lamia$315 -> &lamia$314};
    @1051: let &lamia$318 = alloc;
    @1052: store &lamia$318 lamia$317;
    @1053: raise &lamia$318;

};
@1056: let lamia$308 = get &lamia$311;
@1057: let lamia$319 = isfunc lamia$308;
@1058: let lamia$320 = not lamia$319;
@1059: let &lamia$306 = alloc;
@1060: store &lamia$306 lamia$320;
@1061: while &lamia$306 {
    @1062: let lamia$321 = "__call__";
    @1063: let lamia$322 = lamia$307 haskey lamia$321;
    @1064: let &lamia$323 = if lamia$322 then {
        @1074: let &lamia$324 = lamia$307{lamia$321};
        @1075: ifresult &lamia$324;

    } else {
        @1065: let lamia$325 = "Object is not callable";
        @1066: let &lamia$326 = alloc;
        @1067: store &lamia$326 lamia$325;
        @1068: let lamia$327 = "*value";
        @1069: let lamia$328 = {};
        @1070: let lamia$329 = lamia$328{lamia$327 -> &lamia$326};
        @1071: let &lamia$330 = alloc;
        @1072: store &lamia$330 lamia$329;
        @1073: raise &lamia$330;

    };
    @1076: let &lamia$305 = &lamia$323;
    @1077: let lamia$307 = get &lamia$305;
    @1078: let lamia$309 = "*value";
    @1079: let lamia$310 = lamia$307 haskey lamia$309;
    @1080: let &lamia$311 = if lamia$310 then {
        @1090: let &lamia$312 = lamia$307{lamia$309};
        @1091: ifresult &lamia$312;

    } else {
        @1081: let lamia$313 = "Object has no attribute *value";
        @1082: let &lamia$314 = alloc;
        @1083: store &lamia$314 lamia$313;
        @1084: let lamia$315 = "*value";
        @1085: let lamia$316 = {};
        @1086: let lamia$317 = lamia$316{lamia$315 -> &lamia$314};
        @1087: let &lamia$318 = alloc;
        @1088: store &lamia$318 lamia$317;
        @1089: raise &lamia$318;

    };
    @1092: let lamia$308 = get &lamia$311;
    @1093: let lamia$319 = isfunc lamia$308;
    @1094: let lamia$320 = not lamia$319;
    @1095: let &lamia$306 = alloc;
    @1096: store &lamia$306 lamia$320;

};
@1097: let lamia$331 = [&lamia$304];
@1098: let &lamia$332 = lamia$308(lamia$331);
@1099: let lamia$333 = "$norm14";
@1100: let lamia$334 = get &scope;
@1101: let lamia$335 = lamia$334{lamia$333 -> &lamia$332};
@1102: store &scope lamia$335;
@1103: let lamia$336 = "list";
@1104: let &lamia$337 = get_from_scope(lamia$336);
@1105: let lamia$338 = get &lamia$337;
@1106: let lamia$339 = "__getitem__";
@1107: let lamia$340 = lamia$338 haskey lamia$339;
@1108: let &lamia$341 = if lamia$340 then {
    @1118: let &lamia$342 = lamia$338{lamia$339};
    @1119: ifresult &lamia$342;

} else {
    @1109: let lamia$343 = "Object has no attribute __getitem__";
    @1110: let &lamia$344 = alloc;
    @1111: store &lamia$344 lamia$343;
    @1112: let lamia$345 = "*value";
    @1113: let lamia$346 = {};
    @1114: let lamia$347 = lamia$346{lamia$345 -> &lamia$344};
    @1115: let &lamia$348 = alloc;
    @1116: store &lamia$348 lamia$347;
    @1117: raise &lamia$348;

};
@1120: let lamia$349 = get &lamia$341;
@1121: let lamia$350 = isfunc lamia$349;
@1122: let &lamia$351 = if lamia$350 then {
    @1124: let lamia$352 = def (lamia$353) {
        @1125: let lamia$354 = [&lamia$337];
        @1126: let lamia$355 = lamia$354 || lamia$353;
        @1127: let &lamia$356 = lamia$349(lamia$355);
        @1128: return &lamia$356;

    };
    @1129: let &lamia$357 = alloc;
    @1130: store &lamia$357 lamia$352;
    @1131: let lamia$358 = "*value";
    @1132: let lamia$359 = {};
    @1133: let lamia$360 = lamia$359{lamia$358 -> &lamia$357};
    @1134: let &lamia$361 = alloc;
    @1135: store &lamia$361 lamia$360;
    @1136: ifresult &lamia$361;

} else {
    @1123: ifresult &lamia$341;

};
@1137: let lamia$362 = "$norm15";
@1138: let lamia$363 = get &scope;
@1139: let lamia$364 = lamia$363{lamia$362 -> &lamia$351};
@1140: store &scope lamia$364;
@1141: let lamia$365 = "$norm16";
@1142: let lamia$366 = get &scope;
@1143: let lamia$367 = lamia$366{lamia$365 -> &slice};
@1144: store &scope lamia$367;
@1145: let lamia$368 = 1;
@1146: let &lamia$369 = alloc;
@1147: store &lamia$369 lamia$368;
@1148: let lamia$370 = "*value";
@1149: let lamia$371 = {};
@1150: let lamia$372 = lamia$371{lamia$370 -> &lamia$369};
@1151: let &lamia$373 = alloc;
@1152: store &lamia$373 lamia$372;
@1153: let lamia$374 = "$norm17";
@1154: let lamia$375 = get &scope;
@1155: let lamia$376 = lamia$375{lamia$374 -> &lamia$373};
@1156: store &scope lamia$376;
@1157: let lamia$377 = 2;
@1158: let &lamia$378 = alloc;
@1159: store &lamia$378 lamia$377;
@1160: let lamia$379 = "*value";
@1161: let lamia$380 = {};
@1162: let lamia$381 = lamia$380{lamia$379 -> &lamia$378};
@1163: let &lamia$382 = alloc;
@1164: store &lamia$382 lamia$381;
@1165: let lamia$383 = "$norm18";
@1166: let lamia$384 = get &scope;
@1167: let lamia$385 = lamia$384{lamia$383 -> &lamia$382};
@1168: store &scope lamia$385;
@1169: let lamia$386 = "$norm16";
@1170: let &lamia$387 = get_from_scope(lamia$386);
@1171: let lamia$388 = "$norm17";
@1172: let &lamia$389 = get_from_scope(lamia$388);
@1173: let lamia$390 = "$norm18";
@1174: let &lamia$391 = get_from_scope(lamia$390);
@1175: let lamia$392 = "*None";
@1176: let &lamia$393 = get_from_scope(lamia$392);
@1177: let &lamia$394 = &lamia$387;
@1178: let lamia$396 = get &lamia$394;
@1179: let lamia$398 = "*value";
@1180: let lamia$399 = lamia$396 haskey lamia$398;
@1181: let &lamia$400 = if lamia$399 then {
    @1191: let &lamia$401 = lamia$396{lamia$398};
    @1192: ifresult &lamia$401;

} else {
    @1182: let lamia$402 = "Object has no attribute *value";
    @1183: let &lamia$403 = alloc;
    @1184: store &lamia$403 lamia$402;
    @1185: let lamia$404 = "*value";
    @1186: let lamia$405 = {};
    @1187: let lamia$406 = lamia$405{lamia$404 -> &lamia$403};
    @1188: let &lamia$407 = alloc;
    @1189: store &lamia$407 lamia$406;
    @1190: raise &lamia$407;

};
@1193: let lamia$397 = get &lamia$400;
@1194: let lamia$408 = isfunc lamia$397;
@1195: let lamia$409 = not lamia$408;
@1196: let &lamia$395 = alloc;
@1197: store &lamia$395 lamia$409;
@1198: while &lamia$395 {
    @1199: let lamia$410 = "__call__";
    @1200: let lamia$411 = lamia$396 haskey lamia$410;
    @1201: let &lamia$412 = if lamia$411 then {
        @1211: let &lamia$413 = lamia$396{lamia$410};
        @1212: ifresult &lamia$413;

    } else {
        @1202: let lamia$414 = "Object is not callable";
        @1203: let &lamia$415 = alloc;
        @1204: store &lamia$415 lamia$414;
        @1205: let lamia$416 = "*value";
        @1206: let lamia$417 = {};
        @1207: let lamia$418 = lamia$417{lamia$416 -> &lamia$415};
        @1208: let &lamia$419 = alloc;
        @1209: store &lamia$419 lamia$418;
        @1210: raise &lamia$419;

    };
    @1213: let &lamia$394 = &lamia$412;
    @1214: let lamia$396 = get &lamia$394;
    @1215: let lamia$398 = "*value";
    @1216: let lamia$399 = lamia$396 haskey lamia$398;
    @1217: let &lamia$400 = if lamia$399 then {
        @1227: let &lamia$401 = lamia$396{lamia$398};
        @1228: ifresult &lamia$401;

    } else {
        @1218: let lamia$402 = "Object has no attribute *value";
        @1219: let &lamia$403 = alloc;
        @1220: store &lamia$403 lamia$402;
        @1221: let lamia$404 = "*value";
        @1222: let lamia$405 = {};
        @1223: let lamia$406 = lamia$405{lamia$404 -> &lamia$403};
        @1224: let &lamia$407 = alloc;
        @1225: store &lamia$407 lamia$406;
        @1226: raise &lamia$407;

    };
    @1229: let lamia$397 = get &lamia$400;
    @1230: let lamia$408 = isfunc lamia$397;
    @1231: let lamia$409 = not lamia$408;
    @1232: let &lamia$395 = alloc;
    @1233: store &lamia$395 lamia$409;

};
@1234: let lamia$420 = [&lamia$389, &lamia$391, &lamia$393];
@1235: let &lamia$421 = lamia$397(lamia$420);
@1236: let lamia$422 = "$norm19";
@1237: let lamia$423 = get &scope;
@1238: let lamia$424 = lamia$423{lamia$422 -> &lamia$421};
@1239: store &scope lamia$424;
@1240: let lamia$425 = "$norm15";
@1241: let &lamia$426 = get_from_scope(lamia$425);
@1242: let lamia$427 = "$norm19";
@1243: let &lamia$428 = get_from_scope(lamia$427);
@1244: let &lamia$429 = &lamia$426;
@1245: let lamia$431 = get &lamia$429;
@1246: let lamia$433 = "*value";
@1247: let lamia$434 = lamia$431 haskey lamia$433;
@1248: let &lamia$435 = if lamia$434 then {
    @1258: let &lamia$436 = lamia$431{lamia$433};
    @1259: ifresult &lamia$436;

} else {
    @1249: let lamia$437 = "Object has no attribute *value";
    @1250: let &lamia$438 = alloc;
    @1251: store &lamia$438 lamia$437;
    @1252: let lamia$439 = "*value";
    @1253: let lamia$440 = {};
    @1254: let lamia$441 = lamia$440{lamia$439 -> &lamia$438};
    @1255: let &lamia$442 = alloc;
    @1256: store &lamia$442 lamia$441;
    @1257: raise &lamia$442;

};
@1260: let lamia$432 = get &lamia$435;
@1261: let lamia$443 = isfunc lamia$432;
@1262: let lamia$444 = not lamia$443;
@1263: let &lamia$430 = alloc;
@1264: store &lamia$430 lamia$444;
@1265: while &lamia$430 {
    @1266: let lamia$445 = "__call__";
    @1267: let lamia$446 = lamia$431 haskey lamia$445;
    @1268: let &lamia$447 = if lamia$446 then {
        @1278: let &lamia$448 = lamia$431{lamia$445};
        @1279: ifresult &lamia$448;

    } else {
        @1269: let lamia$449 = "Object is not callable";
        @1270: let &lamia$450 = alloc;
        @1271: store &lamia$450 lamia$449;
        @1272: let lamia$451 = "*value";
        @1273: let lamia$452 = {};
        @1274: let lamia$453 = lamia$452{lamia$451 -> &lamia$450};
        @1275: let &lamia$454 = alloc;
        @1276: store &lamia$454 lamia$453;
        @1277: raise &lamia$454;

    };
    @1280: let &lamia$429 = &lamia$447;
    @1281: let lamia$431 = get &lamia$429;
    @1282: let lamia$433 = "*value";
    @1283: let lamia$434 = lamia$431 haskey lamia$433;
    @1284: let &lamia$435 = if lamia$434 then {
        @1294: let &lamia$436 = lamia$431{lamia$433};
        @1295: ifresult &lamia$436;

    } else {
        @1285: let lamia$437 = "Object has no attribute *value";
        @1286: let &lamia$438 = alloc;
        @1287: store &lamia$438 lamia$437;
        @1288: let lamia$439 = "*value";
        @1289: let lamia$440 = {};
        @1290: let lamia$441 = lamia$440{lamia$439 -> &lamia$438};
        @1291: let &lamia$442 = alloc;
        @1292: store &lamia$442 lamia$441;
        @1293: raise &lamia$442;

    };
    @1296: let lamia$432 = get &lamia$435;
    @1297: let lamia$443 = isfunc lamia$432;
    @1298: let lamia$444 = not lamia$443;
    @1299: let &lamia$430 = alloc;
    @1300: store &lamia$430 lamia$444;

};
@1301: let lamia$455 = [&lamia$428];
@1302: let &lamia$456 = lamia$432(lamia$455);
@1303: let lamia$457 = "$norm20";
@1304: let lamia$458 = get &scope;
@1305: let lamia$459 = lamia$458{lamia$457 -> &lamia$456};
@1306: store &scope lamia$459;
@1307: let lamia$460 = "list";
@1308: let &lamia$461 = get_from_scope(lamia$460);
@1309: let lamia$462 = get &lamia$461;
@1310: let lamia$463 = "__getitem__";
@1311: let lamia$464 = lamia$462 haskey lamia$463;
@1312: let &lamia$465 = if lamia$464 then {
    @1322: let &lamia$466 = lamia$462{lamia$463};
    @1323: ifresult &lamia$466;

} else {
    @1313: let lamia$467 = "Object has no attribute __getitem__";
    @1314: let &lamia$468 = alloc;
    @1315: store &lamia$468 lamia$467;
    @1316: let lamia$469 = "*value";
    @1317: let lamia$470 = {};
    @1318: let lamia$471 = lamia$470{lamia$469 -> &lamia$468};
    @1319: let &lamia$472 = alloc;
    @1320: store &lamia$472 lamia$471;
    @1321: raise &lamia$472;

};
@1324: let lamia$473 = get &lamia$465;
@1325: let lamia$474 = isfunc lamia$473;
@1326: let &lamia$475 = if lamia$474 then {
    @1328: let lamia$476 = def (lamia$477) {
        @1329: let lamia$478 = [&lamia$461];
        @1330: let lamia$479 = lamia$478 || lamia$477;
        @1331: let &lamia$480 = lamia$473(lamia$479);
        @1332: return &lamia$480;

    };
    @1333: let &lamia$481 = alloc;
    @1334: store &lamia$481 lamia$476;
    @1335: let lamia$482 = "*value";
    @1336: let lamia$483 = {};
    @1337: let lamia$484 = lamia$483{lamia$482 -> &lamia$481};
    @1338: let &lamia$485 = alloc;
    @1339: store &lamia$485 lamia$484;
    @1340: ifresult &lamia$485;

} else {
    @1327: ifresult &lamia$465;

};
@1341: let lamia$486 = "$norm21";
@1342: let lamia$487 = get &scope;
@1343: let lamia$488 = lamia$487{lamia$486 -> &lamia$475};
@1344: store &scope lamia$488;
@1345: let lamia$489 = "$norm22";
@1346: let lamia$490 = get &scope;
@1347: let lamia$491 = lamia$490{lamia$489 -> &slice};
@1348: store &scope lamia$491;
@1349: let lamia$492 = "$norm22";
@1350: let &lamia$493 = get_from_scope(lamia$492);
@1351: let lamia$494 = "*None";
@1352: let &lamia$495 = get_from_scope(lamia$494);
@1353: let lamia$496 = "*None";
@1354: let &lamia$497 = get_from_scope(lamia$496);
@1355: let lamia$498 = "*None";
@1356: let &lamia$499 = get_from_scope(lamia$498);
@1357: let &lamia$500 = &lamia$493;
@1358: let lamia$502 = get &lamia$500;
@1359: let lamia$504 = "*value";
@1360: let lamia$505 = lamia$502 haskey lamia$504;
@1361: let &lamia$506 = if lamia$505 then {
    @1371: let &lamia$507 = lamia$502{lamia$504};
    @1372: ifresult &lamia$507;

} else {
    @1362: let lamia$508 = "Object has no attribute *value";
    @1363: let &lamia$509 = alloc;
    @1364: store &lamia$509 lamia$508;
    @1365: let lamia$510 = "*value";
    @1366: let lamia$511 = {};
    @1367: let lamia$512 = lamia$511{lamia$510 -> &lamia$509};
    @1368: let &lamia$513 = alloc;
    @1369: store &lamia$513 lamia$512;
    @1370: raise &lamia$513;

};
@1373: let lamia$503 = get &lamia$506;
@1374: let lamia$514 = isfunc lamia$503;
@1375: let lamia$515 = not lamia$514;
@1376: let &lamia$501 = alloc;
@1377: store &lamia$501 lamia$515;
@1378: while &lamia$501 {
    @1379: let lamia$516 = "__call__";
    @1380: let lamia$517 = lamia$502 haskey lamia$516;
    @1381: let &lamia$518 = if lamia$517 then {
        @1391: let &lamia$519 = lamia$502{lamia$516};
        @1392: ifresult &lamia$519;

    } else {
        @1382: let lamia$520 = "Object is not callable";
        @1383: let &lamia$521 = alloc;
        @1384: store &lamia$521 lamia$520;
        @1385: let lamia$522 = "*value";
        @1386: let lamia$523 = {};
        @1387: let lamia$524 = lamia$523{lamia$522 -> &lamia$521};
        @1388: let &lamia$525 = alloc;
        @1389: store &lamia$525 lamia$524;
        @1390: raise &lamia$525;

    };
    @1393: let &lamia$500 = &lamia$518;
    @1394: let lamia$502 = get &lamia$500;
    @1395: let lamia$504 = "*value";
    @1396: let lamia$505 = lamia$502 haskey lamia$504;
    @1397: let &lamia$506 = if lamia$505 then {
        @1407: let &lamia$507 = lamia$502{lamia$504};
        @1408: ifresult &lamia$507;

    } else {
        @1398: let lamia$508 = "Object has no attribute *value";
        @1399: let &lamia$509 = alloc;
        @1400: store &lamia$509 lamia$508;
        @1401: let lamia$510 = "*value";
        @1402: let lamia$511 = {};
        @1403: let lamia$512 = lamia$511{lamia$510 -> &lamia$509};
        @1404: let &lamia$513 = alloc;
        @1405: store &lamia$513 lamia$512;
        @1406: raise &lamia$513;

    };
    @1409: let lamia$503 = get &lamia$506;
    @1410: let lamia$514 = isfunc lamia$503;
    @1411: let lamia$515 = not lamia$514;
    @1412: let &lamia$501 = alloc;
    @1413: store &lamia$501 lamia$515;

};
@1414: let lamia$526 = [&lamia$495, &lamia$497, &lamia$499];
@1415: let &lamia$527 = lamia$503(lamia$526);
@1416: let lamia$528 = "$norm23";
@1417: let lamia$529 = get &scope;
@1418: let lamia$530 = lamia$529{lamia$528 -> &lamia$527};
@1419: store &scope lamia$530;
@1420: let lamia$531 = "$norm21";
@1421: let &lamia$532 = get_from_scope(lamia$531);
@1422: let lamia$533 = "$norm23";
@1423: let &lamia$534 = get_from_scope(lamia$533);
@1424: let &lamia$535 = &lamia$532;
@1425: let lamia$537 = get &lamia$535;
@1426: let lamia$539 = "*value";
@1427: let lamia$540 = lamia$537 haskey lamia$539;
@1428: let &lamia$541 = if lamia$540 then {
    @1438: let &lamia$542 = lamia$537{lamia$539};
    @1439: ifresult &lamia$542;

} else {
    @1429: let lamia$543 = "Object has no attribute *value";
    @1430: let &lamia$544 = alloc;
    @1431: store &lamia$544 lamia$543;
    @1432: let lamia$545 = "*value";
    @1433: let lamia$546 = {};
    @1434: let lamia$547 = lamia$546{lamia$545 -> &lamia$544};
    @1435: let &lamia$548 = alloc;
    @1436: store &lamia$548 lamia$547;
    @1437: raise &lamia$548;

};
@1440: let lamia$538 = get &lamia$541;
@1441: let lamia$549 = isfunc lamia$538;
@1442: let lamia$550 = not lamia$549;
@1443: let &lamia$536 = alloc;
@1444: store &lamia$536 lamia$550;
@1445: while &lamia$536 {
    @1446: let lamia$551 = "__call__";
    @1447: let lamia$552 = lamia$537 haskey lamia$551;
    @1448: let &lamia$553 = if lamia$552 then {
        @1458: let &lamia$554 = lamia$537{lamia$551};
        @1459: ifresult &lamia$554;

    } else {
        @1449: let lamia$555 = "Object is not callable";
        @1450: let &lamia$556 = alloc;
        @1451: store &lamia$556 lamia$555;
        @1452: let lamia$557 = "*value";
        @1453: let lamia$558 = {};
        @1454: let lamia$559 = lamia$558{lamia$557 -> &lamia$556};
        @1455: let &lamia$560 = alloc;
        @1456: store &lamia$560 lamia$559;
        @1457: raise &lamia$560;

    };
    @1460: let &lamia$535 = &lamia$553;
    @1461: let lamia$537 = get &lamia$535;
    @1462: let lamia$539 = "*value";
    @1463: let lamia$540 = lamia$537 haskey lamia$539;
    @1464: let &lamia$541 = if lamia$540 then {
        @1474: let &lamia$542 = lamia$537{lamia$539};
        @1475: ifresult &lamia$542;

    } else {
        @1465: let lamia$543 = "Object has no attribute *value";
        @1466: let &lamia$544 = alloc;
        @1467: store &lamia$544 lamia$543;
        @1468: let lamia$545 = "*value";
        @1469: let lamia$546 = {};
        @1470: let lamia$547 = lamia$546{lamia$545 -> &lamia$544};
        @1471: let &lamia$548 = alloc;
        @1472: store &lamia$548 lamia$547;
        @1473: raise &lamia$548;

    };
    @1476: let lamia$538 = get &lamia$541;
    @1477: let lamia$549 = isfunc lamia$538;
    @1478: let lamia$550 = not lamia$549;
    @1479: let &lamia$536 = alloc;
    @1480: store &lamia$536 lamia$550;

};
@1481: let lamia$561 = [&lamia$534];
@1482: let &lamia$562 = lamia$538(lamia$561);
@1483: let lamia$563 = "$norm24";
@1484: let lamia$564 = get &scope;
@1485: let lamia$565 = lamia$564{lamia$563 -> &lamia$562};
@1486: store &scope lamia$565;
@1487: let lamia$566 = "list";
@1488: let &lamia$567 = get_from_scope(lamia$566);
@1489: let lamia$568 = get &lamia$567;
@1490: let lamia$569 = "__getitem__";
@1491: let lamia$570 = lamia$568 haskey lamia$569;
@1492: let &lamia$571 = if lamia$570 then {
    @1502: let &lamia$572 = lamia$568{lamia$569};
    @1503: ifresult &lamia$572;

} else {
    @1493: let lamia$573 = "Object has no attribute __getitem__";
    @1494: let &lamia$574 = alloc;
    @1495: store &lamia$574 lamia$573;
    @1496: let lamia$575 = "*value";
    @1497: let lamia$576 = {};
    @1498: let lamia$577 = lamia$576{lamia$575 -> &lamia$574};
    @1499: let &lamia$578 = alloc;
    @1500: store &lamia$578 lamia$577;
    @1501: raise &lamia$578;

};
@1504: let lamia$579 = get &lamia$571;
@1505: let lamia$580 = isfunc lamia$579;
@1506: let &lamia$581 = if lamia$580 then {
    @1508: let lamia$582 = def (lamia$583) {
        @1509: let lamia$584 = [&lamia$567];
        @1510: let lamia$585 = lamia$584 || lamia$583;
        @1511: let &lamia$586 = lamia$579(lamia$585);
        @1512: return &lamia$586;

    };
    @1513: let &lamia$587 = alloc;
    @1514: store &lamia$587 lamia$582;
    @1515: let lamia$588 = "*value";
    @1516: let lamia$589 = {};
    @1517: let lamia$590 = lamia$589{lamia$588 -> &lamia$587};
    @1518: let &lamia$591 = alloc;
    @1519: store &lamia$591 lamia$590;
    @1520: ifresult &lamia$591;

} else {
    @1507: ifresult &lamia$571;

};
@1521: let lamia$592 = "$norm25";
@1522: let lamia$593 = get &scope;
@1523: let lamia$594 = lamia$593{lamia$592 -> &lamia$581};
@1524: store &scope lamia$594;
@1525: let lamia$595 = "$norm26";
@1526: let lamia$596 = get &scope;
@1527: let lamia$597 = lamia$596{lamia$595 -> &slice};
@1528: store &scope lamia$597;
@1529: let lamia$598 = 1;
@1530: let &lamia$599 = alloc;
@1531: store &lamia$599 lamia$598;
@1532: let lamia$600 = "*value";
@1533: let lamia$601 = {};
@1534: let lamia$602 = lamia$601{lamia$600 -> &lamia$599};
@1535: let &lamia$603 = alloc;
@1536: store &lamia$603 lamia$602;
@1537: let lamia$604 = "$norm27";
@1538: let lamia$605 = get &scope;
@1539: let lamia$606 = lamia$605{lamia$604 -> &lamia$603};
@1540: store &scope lamia$606;
@1541: let lamia$607 = "$norm26";
@1542: let &lamia$608 = get_from_scope(lamia$607);
@1543: let lamia$609 = "$norm27";
@1544: let &lamia$610 = get_from_scope(lamia$609);
@1545: let lamia$611 = "*None";
@1546: let &lamia$612 = get_from_scope(lamia$611);
@1547: let lamia$613 = "*None";
@1548: let &lamia$614 = get_from_scope(lamia$613);
@1549: let &lamia$615 = &lamia$608;
@1550: let lamia$617 = get &lamia$615;
@1551: let lamia$619 = "*value";
@1552: let lamia$620 = lamia$617 haskey lamia$619;
@1553: let &lamia$621 = if lamia$620 then {
    @1563: let &lamia$622 = lamia$617{lamia$619};
    @1564: ifresult &lamia$622;

} else {
    @1554: let lamia$623 = "Object has no attribute *value";
    @1555: let &lamia$624 = alloc;
    @1556: store &lamia$624 lamia$623;
    @1557: let lamia$625 = "*value";
    @1558: let lamia$626 = {};
    @1559: let lamia$627 = lamia$626{lamia$625 -> &lamia$624};
    @1560: let &lamia$628 = alloc;
    @1561: store &lamia$628 lamia$627;
    @1562: raise &lamia$628;

};
@1565: let lamia$618 = get &lamia$621;
@1566: let lamia$629 = isfunc lamia$618;
@1567: let lamia$630 = not lamia$629;
@1568: let &lamia$616 = alloc;
@1569: store &lamia$616 lamia$630;
@1570: while &lamia$616 {
    @1571: let lamia$631 = "__call__";
    @1572: let lamia$632 = lamia$617 haskey lamia$631;
    @1573: let &lamia$633 = if lamia$632 then {
        @1583: let &lamia$634 = lamia$617{lamia$631};
        @1584: ifresult &lamia$634;

    } else {
        @1574: let lamia$635 = "Object is not callable";
        @1575: let &lamia$636 = alloc;
        @1576: store &lamia$636 lamia$635;
        @1577: let lamia$637 = "*value";
        @1578: let lamia$638 = {};
        @1579: let lamia$639 = lamia$638{lamia$637 -> &lamia$636};
        @1580: let &lamia$640 = alloc;
        @1581: store &lamia$640 lamia$639;
        @1582: raise &lamia$640;

    };
    @1585: let &lamia$615 = &lamia$633;
    @1586: let lamia$617 = get &lamia$615;
    @1587: let lamia$619 = "*value";
    @1588: let lamia$620 = lamia$617 haskey lamia$619;
    @1589: let &lamia$621 = if lamia$620 then {
        @1599: let &lamia$622 = lamia$617{lamia$619};
        @1600: ifresult &lamia$622;

    } else {
        @1590: let lamia$623 = "Object has no attribute *value";
        @1591: let &lamia$624 = alloc;
        @1592: store &lamia$624 lamia$623;
        @1593: let lamia$625 = "*value";
        @1594: let lamia$626 = {};
        @1595: let lamia$627 = lamia$626{lamia$625 -> &lamia$624};
        @1596: let &lamia$628 = alloc;
        @1597: store &lamia$628 lamia$627;
        @1598: raise &lamia$628;

    };
    @1601: let lamia$618 = get &lamia$621;
    @1602: let lamia$629 = isfunc lamia$618;
    @1603: let lamia$630 = not lamia$629;
    @1604: let &lamia$616 = alloc;
    @1605: store &lamia$616 lamia$630;

};
@1606: let lamia$641 = [&lamia$610, &lamia$612, &lamia$614];
@1607: let &lamia$642 = lamia$618(lamia$641);
@1608: let lamia$643 = "$norm28";
@1609: let lamia$644 = get &scope;
@1610: let lamia$645 = lamia$644{lamia$643 -> &lamia$642};
@1611: store &scope lamia$645;
@1612: let lamia$646 = "$norm25";
@1613: let &lamia$647 = get_from_scope(lamia$646);
@1614: let lamia$648 = "$norm28";
@1615: let &lamia$649 = get_from_scope(lamia$648);
@1616: let &lamia$650 = &lamia$647;
@1617: let lamia$652 = get &lamia$650;
@1618: let lamia$654 = "*value";
@1619: let lamia$655 = lamia$652 haskey lamia$654;
@1620: let &lamia$656 = if lamia$655 then {
    @1630: let &lamia$657 = lamia$652{lamia$654};
    @1631: ifresult &lamia$657;

} else {
    @1621: let lamia$658 = "Object has no attribute *value";
    @1622: let &lamia$659 = alloc;
    @1623: store &lamia$659 lamia$658;
    @1624: let lamia$660 = "*value";
    @1625: let lamia$661 = {};
    @1626: let lamia$662 = lamia$661{lamia$660 -> &lamia$659};
    @1627: let &lamia$663 = alloc;
    @1628: store &lamia$663 lamia$662;
    @1629: raise &lamia$663;

};
@1632: let lamia$653 = get &lamia$656;
@1633: let lamia$664 = isfunc lamia$653;
@1634: let lamia$665 = not lamia$664;
@1635: let &lamia$651 = alloc;
@1636: store &lamia$651 lamia$665;
@1637: while &lamia$651 {
    @1638: let lamia$666 = "__call__";
    @1639: let lamia$667 = lamia$652 haskey lamia$666;
    @1640: let &lamia$668 = if lamia$667 then {
        @1650: let &lamia$669 = lamia$652{lamia$666};
        @1651: ifresult &lamia$669;

    } else {
        @1641: let lamia$670 = "Object is not callable";
        @1642: let &lamia$671 = alloc;
        @1643: store &lamia$671 lamia$670;
        @1644: let lamia$672 = "*value";
        @1645: let lamia$673 = {};
        @1646: let lamia$674 = lamia$673{lamia$672 -> &lamia$671};
        @1647: let &lamia$675 = alloc;
        @1648: store &lamia$675 lamia$674;
        @1649: raise &lamia$675;

    };
    @1652: let &lamia$650 = &lamia$668;
    @1653: let lamia$652 = get &lamia$650;
    @1654: let lamia$654 = "*value";
    @1655: let lamia$655 = lamia$652 haskey lamia$654;
    @1656: let &lamia$656 = if lamia$655 then {
        @1666: let &lamia$657 = lamia$652{lamia$654};
        @1667: ifresult &lamia$657;

    } else {
        @1657: let lamia$658 = "Object has no attribute *value";
        @1658: let &lamia$659 = alloc;
        @1659: store &lamia$659 lamia$658;
        @1660: let lamia$660 = "*value";
        @1661: let lamia$661 = {};
        @1662: let lamia$662 = lamia$661{lamia$660 -> &lamia$659};
        @1663: let &lamia$663 = alloc;
        @1664: store &lamia$663 lamia$662;
        @1665: raise &lamia$663;

    };
    @1668: let lamia$653 = get &lamia$656;
    @1669: let lamia$664 = isfunc lamia$653;
    @1670: let lamia$665 = not lamia$664;
    @1671: let &lamia$651 = alloc;
    @1672: store &lamia$651 lamia$665;

};
@1673: let lamia$676 = [&lamia$649];
@1674: let &lamia$677 = lamia$653(lamia$676);
@1675: let lamia$678 = "$norm29";
@1676: let lamia$679 = get &scope;
@1677: let lamia$680 = lamia$679{lamia$678 -> &lamia$677};
@1678: store &scope lamia$680;
@1679: let lamia$681 = "list";
@1680: let &lamia$682 = get_from_scope(lamia$681);
@1681: let lamia$683 = get &lamia$682;
@1682: let lamia$684 = "__getitem__";
@1683: let lamia$685 = lamia$683 haskey lamia$684;
@1684: let &lamia$686 = if lamia$685 then {
    @1694: let &lamia$687 = lamia$683{lamia$684};
    @1695: ifresult &lamia$687;

} else {
    @1685: let lamia$688 = "Object has no attribute __getitem__";
    @1686: let &lamia$689 = alloc;
    @1687: store &lamia$689 lamia$688;
    @1688: let lamia$690 = "*value";
    @1689: let lamia$691 = {};
    @1690: let lamia$692 = lamia$691{lamia$690 -> &lamia$689};
    @1691: let &lamia$693 = alloc;
    @1692: store &lamia$693 lamia$692;
    @1693: raise &lamia$693;

};
@1696: let lamia$694 = get &lamia$686;
@1697: let lamia$695 = isfunc lamia$694;
@1698: let &lamia$696 = if lamia$695 then {
    @1700: let lamia$697 = def (lamia$698) {
        @1701: let lamia$699 = [&lamia$682];
        @1702: let lamia$700 = lamia$699 || lamia$698;
        @1703: let &lamia$701 = lamia$694(lamia$700);
        @1704: return &lamia$701;

    };
    @1705: let &lamia$702 = alloc;
    @1706: store &lamia$702 lamia$697;
    @1707: let lamia$703 = "*value";
    @1708: let lamia$704 = {};
    @1709: let lamia$705 = lamia$704{lamia$703 -> &lamia$702};
    @1710: let &lamia$706 = alloc;
    @1711: store &lamia$706 lamia$705;
    @1712: ifresult &lamia$706;

} else {
    @1699: ifresult &lamia$686;

};
@1713: let lamia$707 = "$norm30";
@1714: let lamia$708 = get &scope;
@1715: let lamia$709 = lamia$708{lamia$707 -> &lamia$696};
@1716: store &scope lamia$709;
@1717: let lamia$710 = "$norm31";
@1718: let lamia$711 = get &scope;
@1719: let lamia$712 = lamia$711{lamia$710 -> &slice};
@1720: store &scope lamia$712;
@1721: let lamia$713 = 2;
@1722: let &lamia$714 = alloc;
@1723: store &lamia$714 lamia$713;
@1724: let lamia$715 = "*value";
@1725: let lamia$716 = {};
@1726: let lamia$717 = lamia$716{lamia$715 -> &lamia$714};
@1727: let &lamia$718 = alloc;
@1728: store &lamia$718 lamia$717;
@1729: let lamia$719 = "$norm32";
@1730: let lamia$720 = get &scope;
@1731: let lamia$721 = lamia$720{lamia$719 -> &lamia$718};
@1732: store &scope lamia$721;
@1733: let lamia$722 = "$norm31";
@1734: let &lamia$723 = get_from_scope(lamia$722);
@1735: let lamia$724 = "*None";
@1736: let &lamia$725 = get_from_scope(lamia$724);
@1737: let lamia$726 = "$norm32";
@1738: let &lamia$727 = get_from_scope(lamia$726);
@1739: let lamia$728 = "*None";
@1740: let &lamia$729 = get_from_scope(lamia$728);
@1741: let &lamia$730 = &lamia$723;
@1742: let lamia$732 = get &lamia$730;
@1743: let lamia$734 = "*value";
@1744: let lamia$735 = lamia$732 haskey lamia$734;
@1745: let &lamia$736 = if lamia$735 then {
    @1755: let &lamia$737 = lamia$732{lamia$734};
    @1756: ifresult &lamia$737;

} else {
    @1746: let lamia$738 = "Object has no attribute *value";
    @1747: let &lamia$739 = alloc;
    @1748: store &lamia$739 lamia$738;
    @1749: let lamia$740 = "*value";
    @1750: let lamia$741 = {};
    @1751: let lamia$742 = lamia$741{lamia$740 -> &lamia$739};
    @1752: let &lamia$743 = alloc;
    @1753: store &lamia$743 lamia$742;
    @1754: raise &lamia$743;

};
@1757: let lamia$733 = get &lamia$736;
@1758: let lamia$744 = isfunc lamia$733;
@1759: let lamia$745 = not lamia$744;
@1760: let &lamia$731 = alloc;
@1761: store &lamia$731 lamia$745;
@1762: while &lamia$731 {
    @1763: let lamia$746 = "__call__";
    @1764: let lamia$747 = lamia$732 haskey lamia$746;
    @1765: let &lamia$748 = if lamia$747 then {
        @1775: let &lamia$749 = lamia$732{lamia$746};
        @1776: ifresult &lamia$749;

    } else {
        @1766: let lamia$750 = "Object is not callable";
        @1767: let &lamia$751 = alloc;
        @1768: store &lamia$751 lamia$750;
        @1769: let lamia$752 = "*value";
        @1770: let lamia$753 = {};
        @1771: let lamia$754 = lamia$753{lamia$752 -> &lamia$751};
        @1772: let &lamia$755 = alloc;
        @1773: store &lamia$755 lamia$754;
        @1774: raise &lamia$755;

    };
    @1777: let &lamia$730 = &lamia$748;
    @1778: let lamia$732 = get &lamia$730;
    @1779: let lamia$734 = "*value";
    @1780: let lamia$735 = lamia$732 haskey lamia$734;
    @1781: let &lamia$736 = if lamia$735 then {
        @1791: let &lamia$737 = lamia$732{lamia$734};
        @1792: ifresult &lamia$737;

    } else {
        @1782: let lamia$738 = "Object has no attribute *value";
        @1783: let &lamia$739 = alloc;
        @1784: store &lamia$739 lamia$738;
        @1785: let lamia$740 = "*value";
        @1786: let lamia$741 = {};
        @1787: let lamia$742 = lamia$741{lamia$740 -> &lamia$739};
        @1788: let &lamia$743 = alloc;
        @1789: store &lamia$743 lamia$742;
        @1790: raise &lamia$743;

    };
    @1793: let lamia$733 = get &lamia$736;
    @1794: let lamia$744 = isfunc lamia$733;
    @1795: let lamia$745 = not lamia$744;
    @1796: let &lamia$731 = alloc;
    @1797: store &lamia$731 lamia$745;

};
@1798: let lamia$756 = [&lamia$725, &lamia$727, &lamia$729];
@1799: let &lamia$757 = lamia$733(lamia$756);
@1800: let lamia$758 = "$norm33";
@1801: let lamia$759 = get &scope;
@1802: let lamia$760 = lamia$759{lamia$758 -> &lamia$757};
@1803: store &scope lamia$760;
@1804: let lamia$761 = "$norm30";
@1805: let &lamia$762 = get_from_scope(lamia$761);
@1806: let lamia$763 = "$norm33";
@1807: let &lamia$764 = get_from_scope(lamia$763);
@1808: let &lamia$765 = &lamia$762;
@1809: let lamia$767 = get &lamia$765;
@1810: let lamia$769 = "*value";
@1811: let lamia$770 = lamia$767 haskey lamia$769;
@1812: let &lamia$771 = if lamia$770 then {
    @1822: let &lamia$772 = lamia$767{lamia$769};
    @1823: ifresult &lamia$772;

} else {
    @1813: let lamia$773 = "Object has no attribute *value";
    @1814: let &lamia$774 = alloc;
    @1815: store &lamia$774 lamia$773;
    @1816: let lamia$775 = "*value";
    @1817: let lamia$776 = {};
    @1818: let lamia$777 = lamia$776{lamia$775 -> &lamia$774};
    @1819: let &lamia$778 = alloc;
    @1820: store &lamia$778 lamia$777;
    @1821: raise &lamia$778;

};
@1824: let lamia$768 = get &lamia$771;
@1825: let lamia$779 = isfunc lamia$768;
@1826: let lamia$780 = not lamia$779;
@1827: let &lamia$766 = alloc;
@1828: store &lamia$766 lamia$780;
@1829: while &lamia$766 {
    @1830: let lamia$781 = "__call__";
    @1831: let lamia$782 = lamia$767 haskey lamia$781;
    @1832: let &lamia$783 = if lamia$782 then {
        @1842: let &lamia$784 = lamia$767{lamia$781};
        @1843: ifresult &lamia$784;

    } else {
        @1833: let lamia$785 = "Object is not callable";
        @1834: let &lamia$786 = alloc;
        @1835: store &lamia$786 lamia$785;
        @1836: let lamia$787 = "*value";
        @1837: let lamia$788 = {};
        @1838: let lamia$789 = lamia$788{lamia$787 -> &lamia$786};
        @1839: let &lamia$790 = alloc;
        @1840: store &lamia$790 lamia$789;
        @1841: raise &lamia$790;

    };
    @1844: let &lamia$765 = &lamia$783;
    @1845: let lamia$767 = get &lamia$765;
    @1846: let lamia$769 = "*value";
    @1847: let lamia$770 = lamia$767 haskey lamia$769;
    @1848: let &lamia$771 = if lamia$770 then {
        @1858: let &lamia$772 = lamia$767{lamia$769};
        @1859: ifresult &lamia$772;

    } else {
        @1849: let lamia$773 = "Object has no attribute *value";
        @1850: let &lamia$774 = alloc;
        @1851: store &lamia$774 lamia$773;
        @1852: let lamia$775 = "*value";
        @1853: let lamia$776 = {};
        @1854: let lamia$777 = lamia$776{lamia$775 -> &lamia$774};
        @1855: let &lamia$778 = alloc;
        @1856: store &lamia$778 lamia$777;
        @1857: raise &lamia$778;

    };
    @1860: let lamia$768 = get &lamia$771;
    @1861: let lamia$779 = isfunc lamia$768;
    @1862: let lamia$780 = not lamia$779;
    @1863: let &lamia$766 = alloc;
    @1864: store &lamia$766 lamia$780;

};
@1865: let lamia$791 = [&lamia$764];
@1866: let &lamia$792 = lamia$768(lamia$791);
@1867: let lamia$793 = "$norm34";
@1868: let lamia$794 = get &scope;
@1869: let lamia$795 = lamia$794{lamia$793 -> &lamia$792};
@1870: store &scope lamia$795;
@1871: let lamia$796 = "list";
@1872: let &lamia$797 = get_from_scope(lamia$796);
@1873: let lamia$798 = get &lamia$797;
@1874: let lamia$799 = "__getitem__";
@1875: let lamia$800 = lamia$798 haskey lamia$799;
@1876: let &lamia$801 = if lamia$800 then {
    @1886: let &lamia$802 = lamia$798{lamia$799};
    @1887: ifresult &lamia$802;

} else {
    @1877: let lamia$803 = "Object has no attribute __getitem__";
    @1878: let &lamia$804 = alloc;
    @1879: store &lamia$804 lamia$803;
    @1880: let lamia$805 = "*value";
    @1881: let lamia$806 = {};
    @1882: let lamia$807 = lamia$806{lamia$805 -> &lamia$804};
    @1883: let &lamia$808 = alloc;
    @1884: store &lamia$808 lamia$807;
    @1885: raise &lamia$808;

};
@1888: let lamia$809 = get &lamia$801;
@1889: let lamia$810 = isfunc lamia$809;
@1890: let &lamia$811 = if lamia$810 then {
    @1892: let lamia$812 = def (lamia$813) {
        @1893: let lamia$814 = [&lamia$797];
        @1894: let lamia$815 = lamia$814 || lamia$813;
        @1895: let &lamia$816 = lamia$809(lamia$815);
        @1896: return &lamia$816;

    };
    @1897: let &lamia$817 = alloc;
    @1898: store &lamia$817 lamia$812;
    @1899: let lamia$818 = "*value";
    @1900: let lamia$819 = {};
    @1901: let lamia$820 = lamia$819{lamia$818 -> &lamia$817};
    @1902: let &lamia$821 = alloc;
    @1903: store &lamia$821 lamia$820;
    @1904: ifresult &lamia$821;

} else {
    @1891: ifresult &lamia$801;

};
@1905: let lamia$822 = "$norm35";
@1906: let lamia$823 = get &scope;
@1907: let lamia$824 = lamia$823{lamia$822 -> &lamia$811};
@1908: store &scope lamia$824;
@1909: let lamia$825 = "$norm36";
@1910: let lamia$826 = get &scope;
@1911: let lamia$827 = lamia$826{lamia$825 -> &slice};
@1912: store &scope lamia$827;
@1913: let lamia$828 = 3;
@1914: let &lamia$829 = alloc;
@1915: store &lamia$829 lamia$828;
@1916: let lamia$830 = "*value";
@1917: let lamia$831 = {};
@1918: let lamia$832 = lamia$831{lamia$830 -> &lamia$829};
@1919: let &lamia$833 = alloc;
@1920: store &lamia$833 lamia$832;
@1921: let lamia$834 = "$norm37";
@1922: let lamia$835 = get &scope;
@1923: let lamia$836 = lamia$835{lamia$834 -> &lamia$833};
@1924: store &scope lamia$836;
@1925: let lamia$837 = "$norm36";
@1926: let &lamia$838 = get_from_scope(lamia$837);
@1927: let lamia$839 = "*None";
@1928: let &lamia$840 = get_from_scope(lamia$839);
@1929: let lamia$841 = "*None";
@1930: let &lamia$842 = get_from_scope(lamia$841);
@1931: let lamia$843 = "$norm37";
@1932: let &lamia$844 = get_from_scope(lamia$843);
@1933: let &lamia$845 = &lamia$838;
@1934: let lamia$847 = get &lamia$845;
@1935: let lamia$849 = "*value";
@1936: let lamia$850 = lamia$847 haskey lamia$849;
@1937: let &lamia$851 = if lamia$850 then {
    @1947: let &lamia$852 = lamia$847{lamia$849};
    @1948: ifresult &lamia$852;

} else {
    @1938: let lamia$853 = "Object has no attribute *value";
    @1939: let &lamia$854 = alloc;
    @1940: store &lamia$854 lamia$853;
    @1941: let lamia$855 = "*value";
    @1942: let lamia$856 = {};
    @1943: let lamia$857 = lamia$856{lamia$855 -> &lamia$854};
    @1944: let &lamia$858 = alloc;
    @1945: store &lamia$858 lamia$857;
    @1946: raise &lamia$858;

};
@1949: let lamia$848 = get &lamia$851;
@1950: let lamia$859 = isfunc lamia$848;
@1951: let lamia$860 = not lamia$859;
@1952: let &lamia$846 = alloc;
@1953: store &lamia$846 lamia$860;
@1954: while &lamia$846 {
    @1955: let lamia$861 = "__call__";
    @1956: let lamia$862 = lamia$847 haskey lamia$861;
    @1957: let &lamia$863 = if lamia$862 then {
        @1967: let &lamia$864 = lamia$847{lamia$861};
        @1968: ifresult &lamia$864;

    } else {
        @1958: let lamia$865 = "Object is not callable";
        @1959: let &lamia$866 = alloc;
        @1960: store &lamia$866 lamia$865;
        @1961: let lamia$867 = "*value";
        @1962: let lamia$868 = {};
        @1963: let lamia$869 = lamia$868{lamia$867 -> &lamia$866};
        @1964: let &lamia$870 = alloc;
        @1965: store &lamia$870 lamia$869;
        @1966: raise &lamia$870;

    };
    @1969: let &lamia$845 = &lamia$863;
    @1970: let lamia$847 = get &lamia$845;
    @1971: let lamia$849 = "*value";
    @1972: let lamia$850 = lamia$847 haskey lamia$849;
    @1973: let &lamia$851 = if lamia$850 then {
        @1983: let &lamia$852 = lamia$847{lamia$849};
        @1984: ifresult &lamia$852;

    } else {
        @1974: let lamia$853 = "Object has no attribute *value";
        @1975: let &lamia$854 = alloc;
        @1976: store &lamia$854 lamia$853;
        @1977: let lamia$855 = "*value";
        @1978: let lamia$856 = {};
        @1979: let lamia$857 = lamia$856{lamia$855 -> &lamia$854};
        @1980: let &lamia$858 = alloc;
        @1981: store &lamia$858 lamia$857;
        @1982: raise &lamia$858;

    };
    @1985: let lamia$848 = get &lamia$851;
    @1986: let lamia$859 = isfunc lamia$848;
    @1987: let lamia$860 = not lamia$859;
    @1988: let &lamia$846 = alloc;
    @1989: store &lamia$846 lamia$860;

};
@1990: let lamia$871 = [&lamia$840, &lamia$842, &lamia$844];
@1991: let &lamia$872 = lamia$848(lamia$871);
@1992: let lamia$873 = "$norm38";
@1993: let lamia$874 = get &scope;
@1994: let lamia$875 = lamia$874{lamia$873 -> &lamia$872};
@1995: store &scope lamia$875;
@1996: let lamia$876 = "$norm35";
@1997: let &lamia$877 = get_from_scope(lamia$876);
@1998: let lamia$878 = "$norm38";
@1999: let &lamia$879 = get_from_scope(lamia$878);
@2000: let &lamia$880 = &lamia$877;
@2001: let lamia$882 = get &lamia$880;
@2002: let lamia$884 = "*value";
@2003: let lamia$885 = lamia$882 haskey lamia$884;
@2004: let &lamia$886 = if lamia$885 then {
    @2014: let &lamia$887 = lamia$882{lamia$884};
    @2015: ifresult &lamia$887;

} else {
    @2005: let lamia$888 = "Object has no attribute *value";
    @2006: let &lamia$889 = alloc;
    @2007: store &lamia$889 lamia$888;
    @2008: let lamia$890 = "*value";
    @2009: let lamia$891 = {};
    @2010: let lamia$892 = lamia$891{lamia$890 -> &lamia$889};
    @2011: let &lamia$893 = alloc;
    @2012: store &lamia$893 lamia$892;
    @2013: raise &lamia$893;

};
@2016: let lamia$883 = get &lamia$886;
@2017: let lamia$894 = isfunc lamia$883;
@2018: let lamia$895 = not lamia$894;
@2019: let &lamia$881 = alloc;
@2020: store &lamia$881 lamia$895;
@2021: while &lamia$881 {
    @2022: let lamia$896 = "__call__";
    @2023: let lamia$897 = lamia$882 haskey lamia$896;
    @2024: let &lamia$898 = if lamia$897 then {
        @2034: let &lamia$899 = lamia$882{lamia$896};
        @2035: ifresult &lamia$899;

    } else {
        @2025: let lamia$900 = "Object is not callable";
        @2026: let &lamia$901 = alloc;
        @2027: store &lamia$901 lamia$900;
        @2028: let lamia$902 = "*value";
        @2029: let lamia$903 = {};
        @2030: let lamia$904 = lamia$903{lamia$902 -> &lamia$901};
        @2031: let &lamia$905 = alloc;
        @2032: store &lamia$905 lamia$904;
        @2033: raise &lamia$905;

    };
    @2036: let &lamia$880 = &lamia$898;
    @2037: let lamia$882 = get &lamia$880;
    @2038: let lamia$884 = "*value";
    @2039: let lamia$885 = lamia$882 haskey lamia$884;
    @2040: let &lamia$886 = if lamia$885 then {
        @2050: let &lamia$887 = lamia$882{lamia$884};
        @2051: ifresult &lamia$887;

    } else {
        @2041: let lamia$888 = "Object has no attribute *value";
        @2042: let &lamia$889 = alloc;
        @2043: store &lamia$889 lamia$888;
        @2044: let lamia$890 = "*value";
        @2045: let lamia$891 = {};
        @2046: let lamia$892 = lamia$891{lamia$890 -> &lamia$889};
        @2047: let &lamia$893 = alloc;
        @2048: store &lamia$893 lamia$892;
        @2049: raise &lamia$893;

    };
    @2052: let lamia$883 = get &lamia$886;
    @2053: let lamia$894 = isfunc lamia$883;
    @2054: let lamia$895 = not lamia$894;
    @2055: let &lamia$881 = alloc;
    @2056: store &lamia$881 lamia$895;

};
@2057: let lamia$906 = [&lamia$879];
@2058: let &lamia$907 = lamia$883(lamia$906);
@2059: let lamia$908 = "$norm39";
@2060: let lamia$909 = get &scope;
@2061: let lamia$910 = lamia$909{lamia$908 -> &lamia$907};
@2062: store &scope lamia$910;
@2063: let lamia$911 = "list";
@2064: let &lamia$912 = get_from_scope(lamia$911);
@2065: let lamia$913 = get &lamia$912;
@2066: let lamia$914 = "__getitem__";
@2067: let lamia$915 = lamia$913 haskey lamia$914;
@2068: let &lamia$916 = if lamia$915 then {
    @2078: let &lamia$917 = lamia$913{lamia$914};
    @2079: ifresult &lamia$917;

} else {
    @2069: let lamia$918 = "Object has no attribute __getitem__";
    @2070: let &lamia$919 = alloc;
    @2071: store &lamia$919 lamia$918;
    @2072: let lamia$920 = "*value";
    @2073: let lamia$921 = {};
    @2074: let lamia$922 = lamia$921{lamia$920 -> &lamia$919};
    @2075: let &lamia$923 = alloc;
    @2076: store &lamia$923 lamia$922;
    @2077: raise &lamia$923;

};
@2080: let lamia$924 = get &lamia$916;
@2081: let lamia$925 = isfunc lamia$924;
@2082: let &lamia$926 = if lamia$925 then {
    @2084: let lamia$927 = def (lamia$928) {
        @2085: let lamia$929 = [&lamia$912];
        @2086: let lamia$930 = lamia$929 || lamia$928;
        @2087: let &lamia$931 = lamia$924(lamia$930);
        @2088: return &lamia$931;

    };
    @2089: let &lamia$932 = alloc;
    @2090: store &lamia$932 lamia$927;
    @2091: let lamia$933 = "*value";
    @2092: let lamia$934 = {};
    @2093: let lamia$935 = lamia$934{lamia$933 -> &lamia$932};
    @2094: let &lamia$936 = alloc;
    @2095: store &lamia$936 lamia$935;
    @2096: ifresult &lamia$936;

} else {
    @2083: ifresult &lamia$916;

};
@2097: let lamia$937 = "$norm40";
@2098: let lamia$938 = get &scope;
@2099: let lamia$939 = lamia$938{lamia$937 -> &lamia$926};
@2100: store &scope lamia$939;
@2101: let lamia$940 = "$norm41";
@2102: let lamia$941 = get &scope;
@2103: let lamia$942 = lamia$941{lamia$940 -> &slice};
@2104: store &scope lamia$942;
@2105: let lamia$943 = 1;
@2106: let &lamia$944 = alloc;
@2107: store &lamia$944 lamia$943;
@2108: let lamia$945 = "*value";
@2109: let lamia$946 = {};
@2110: let lamia$947 = lamia$946{lamia$945 -> &lamia$944};
@2111: let &lamia$948 = alloc;
@2112: store &lamia$948 lamia$947;
@2113: let lamia$949 = "$norm42";
@2114: let lamia$950 = get &scope;
@2115: let lamia$951 = lamia$950{lamia$949 -> &lamia$948};
@2116: store &scope lamia$951;
@2117: let lamia$952 = 2;
@2118: let &lamia$953 = alloc;
@2119: store &lamia$953 lamia$952;
@2120: let lamia$954 = "*value";
@2121: let lamia$955 = {};
@2122: let lamia$956 = lamia$955{lamia$954 -> &lamia$953};
@2123: let &lamia$957 = alloc;
@2124: store &lamia$957 lamia$956;
@2125: let lamia$958 = "$norm43";
@2126: let lamia$959 = get &scope;
@2127: let lamia$960 = lamia$959{lamia$958 -> &lamia$957};
@2128: store &scope lamia$960;
@2129: let lamia$961 = "$norm41";
@2130: let &lamia$962 = get_from_scope(lamia$961);
@2131: let lamia$963 = "$norm42";
@2132: let &lamia$964 = get_from_scope(lamia$963);
@2133: let lamia$965 = "$norm43";
@2134: let &lamia$966 = get_from_scope(lamia$965);
@2135: let lamia$967 = "*None";
@2136: let &lamia$968 = get_from_scope(lamia$967);
@2137: let &lamia$969 = &lamia$962;
@2138: let lamia$971 = get &lamia$969;
@2139: let lamia$973 = "*value";
@2140: let lamia$974 = lamia$971 haskey lamia$973;
@2141: let &lamia$975 = if lamia$974 then {
    @2151: let &lamia$976 = lamia$971{lamia$973};
    @2152: ifresult &lamia$976;

} else {
    @2142: let lamia$977 = "Object has no attribute *value";
    @2143: let &lamia$978 = alloc;
    @2144: store &lamia$978 lamia$977;
    @2145: let lamia$979 = "*value";
    @2146: let lamia$980 = {};
    @2147: let lamia$981 = lamia$980{lamia$979 -> &lamia$978};
    @2148: let &lamia$982 = alloc;
    @2149: store &lamia$982 lamia$981;
    @2150: raise &lamia$982;

};
@2153: let lamia$972 = get &lamia$975;
@2154: let lamia$983 = isfunc lamia$972;
@2155: let lamia$984 = not lamia$983;
@2156: let &lamia$970 = alloc;
@2157: store &lamia$970 lamia$984;
@2158: while &lamia$970 {
    @2159: let lamia$985 = "__call__";
    @2160: let lamia$986 = lamia$971 haskey lamia$985;
    @2161: let &lamia$987 = if lamia$986 then {
        @2171: let &lamia$988 = lamia$971{lamia$985};
        @2172: ifresult &lamia$988;

    } else {
        @2162: let lamia$989 = "Object is not callable";
        @2163: let &lamia$990 = alloc;
        @2164: store &lamia$990 lamia$989;
        @2165: let lamia$991 = "*value";
        @2166: let lamia$992 = {};
        @2167: let lamia$993 = lamia$992{lamia$991 -> &lamia$990};
        @2168: let &lamia$994 = alloc;
        @2169: store &lamia$994 lamia$993;
        @2170: raise &lamia$994;

    };
    @2173: let &lamia$969 = &lamia$987;
    @2174: let lamia$971 = get &lamia$969;
    @2175: let lamia$973 = "*value";
    @2176: let lamia$974 = lamia$971 haskey lamia$973;
    @2177: let &lamia$975 = if lamia$974 then {
        @2187: let &lamia$976 = lamia$971{lamia$973};
        @2188: ifresult &lamia$976;

    } else {
        @2178: let lamia$977 = "Object has no attribute *value";
        @2179: let &lamia$978 = alloc;
        @2180: store &lamia$978 lamia$977;
        @2181: let lamia$979 = "*value";
        @2182: let lamia$980 = {};
        @2183: let lamia$981 = lamia$980{lamia$979 -> &lamia$978};
        @2184: let &lamia$982 = alloc;
        @2185: store &lamia$982 lamia$981;
        @2186: raise &lamia$982;

    };
    @2189: let lamia$972 = get &lamia$975;
    @2190: let lamia$983 = isfunc lamia$972;
    @2191: let lamia$984 = not lamia$983;
    @2192: let &lamia$970 = alloc;
    @2193: store &lamia$970 lamia$984;

};
@2194: let lamia$995 = [&lamia$964, &lamia$966, &lamia$968];
@2195: let &lamia$996 = lamia$972(lamia$995);
@2196: let lamia$997 = "$norm44";
@2197: let lamia$998 = get &scope;
@2198: let lamia$999 = lamia$998{lamia$997 -> &lamia$996};
@2199: store &scope lamia$999;
@2200: let lamia$1000 = "$norm40";
@2201: let &lamia$1001 = get_from_scope(lamia$1000);
@2202: let lamia$1002 = "$norm44";
@2203: let &lamia$1003 = get_from_scope(lamia$1002);
@2204: let &lamia$1004 = &lamia$1001;
@2205: let lamia$1006 = get &lamia$1004;
@2206: let lamia$1008 = "*value";
@2207: let lamia$1009 = lamia$1006 haskey lamia$1008;
@2208: let &lamia$1010 = if lamia$1009 then {
    @2218: let &lamia$1011 = lamia$1006{lamia$1008};
    @2219: ifresult &lamia$1011;

} else {
    @2209: let lamia$1012 = "Object has no attribute *value";
    @2210: let &lamia$1013 = alloc;
    @2211: store &lamia$1013 lamia$1012;
    @2212: let lamia$1014 = "*value";
    @2213: let lamia$1015 = {};
    @2214: let lamia$1016 = lamia$1015{lamia$1014 -> &lamia$1013};
    @2215: let &lamia$1017 = alloc;
    @2216: store &lamia$1017 lamia$1016;
    @2217: raise &lamia$1017;

};
@2220: let lamia$1007 = get &lamia$1010;
@2221: let lamia$1018 = isfunc lamia$1007;
@2222: let lamia$1019 = not lamia$1018;
@2223: let &lamia$1005 = alloc;
@2224: store &lamia$1005 lamia$1019;
@2225: while &lamia$1005 {
    @2226: let lamia$1020 = "__call__";
    @2227: let lamia$1021 = lamia$1006 haskey lamia$1020;
    @2228: let &lamia$1022 = if lamia$1021 then {
        @2238: let &lamia$1023 = lamia$1006{lamia$1020};
        @2239: ifresult &lamia$1023;

    } else {
        @2229: let lamia$1024 = "Object is not callable";
        @2230: let &lamia$1025 = alloc;
        @2231: store &lamia$1025 lamia$1024;
        @2232: let lamia$1026 = "*value";
        @2233: let lamia$1027 = {};
        @2234: let lamia$1028 = lamia$1027{lamia$1026 -> &lamia$1025};
        @2235: let &lamia$1029 = alloc;
        @2236: store &lamia$1029 lamia$1028;
        @2237: raise &lamia$1029;

    };
    @2240: let &lamia$1004 = &lamia$1022;
    @2241: let lamia$1006 = get &lamia$1004;
    @2242: let lamia$1008 = "*value";
    @2243: let lamia$1009 = lamia$1006 haskey lamia$1008;
    @2244: let &lamia$1010 = if lamia$1009 then {
        @2254: let &lamia$1011 = lamia$1006{lamia$1008};
        @2255: ifresult &lamia$1011;

    } else {
        @2245: let lamia$1012 = "Object has no attribute *value";
        @2246: let &lamia$1013 = alloc;
        @2247: store &lamia$1013 lamia$1012;
        @2248: let lamia$1014 = "*value";
        @2249: let lamia$1015 = {};
        @2250: let lamia$1016 = lamia$1015{lamia$1014 -> &lamia$1013};
        @2251: let &lamia$1017 = alloc;
        @2252: store &lamia$1017 lamia$1016;
        @2253: raise &lamia$1017;

    };
    @2256: let lamia$1007 = get &lamia$1010;
    @2257: let lamia$1018 = isfunc lamia$1007;
    @2258: let lamia$1019 = not lamia$1018;
    @2259: let &lamia$1005 = alloc;
    @2260: store &lamia$1005 lamia$1019;

};
@2261: let lamia$1030 = [&lamia$1003];
@2262: let &lamia$1031 = lamia$1007(lamia$1030);
@2263: let lamia$1032 = "$norm45";
@2264: let lamia$1033 = get &scope;
@2265: let lamia$1034 = lamia$1033{lamia$1032 -> &lamia$1031};
@2266: store &scope lamia$1034;
@2267: let lamia$1035 = "list";
@2268: let &lamia$1036 = get_from_scope(lamia$1035);
@2269: let lamia$1037 = get &lamia$1036;
@2270: let lamia$1038 = "__getitem__";
@2271: let lamia$1039 = lamia$1037 haskey lamia$1038;
@2272: let &lamia$1040 = if lamia$1039 then {
    @2282: let &lamia$1041 = lamia$1037{lamia$1038};
    @2283: ifresult &lamia$1041;

} else {
    @2273: let lamia$1042 = "Object has no attribute __getitem__";
    @2274: let &lamia$1043 = alloc;
    @2275: store &lamia$1043 lamia$1042;
    @2276: let lamia$1044 = "*value";
    @2277: let lamia$1045 = {};
    @2278: let lamia$1046 = lamia$1045{lamia$1044 -> &lamia$1043};
    @2279: let &lamia$1047 = alloc;
    @2280: store &lamia$1047 lamia$1046;
    @2281: raise &lamia$1047;

};
@2284: let lamia$1048 = get &lamia$1040;
@2285: let lamia$1049 = isfunc lamia$1048;
@2286: let &lamia$1050 = if lamia$1049 then {
    @2288: let lamia$1051 = def (lamia$1052) {
        @2289: let lamia$1053 = [&lamia$1036];
        @2290: let lamia$1054 = lamia$1053 || lamia$1052;
        @2291: let &lamia$1055 = lamia$1048(lamia$1054);
        @2292: return &lamia$1055;

    };
    @2293: let &lamia$1056 = alloc;
    @2294: store &lamia$1056 lamia$1051;
    @2295: let lamia$1057 = "*value";
    @2296: let lamia$1058 = {};
    @2297: let lamia$1059 = lamia$1058{lamia$1057 -> &lamia$1056};
    @2298: let &lamia$1060 = alloc;
    @2299: store &lamia$1060 lamia$1059;
    @2300: ifresult &lamia$1060;

} else {
    @2287: ifresult &lamia$1040;

};
@2301: let lamia$1061 = "$norm46";
@2302: let lamia$1062 = get &scope;
@2303: let lamia$1063 = lamia$1062{lamia$1061 -> &lamia$1050};
@2304: store &scope lamia$1063;
@2305: let lamia$1064 = "$norm47";
@2306: let lamia$1065 = get &scope;
@2307: let lamia$1066 = lamia$1065{lamia$1064 -> &slice};
@2308: store &scope lamia$1066;
@2309: let lamia$1067 = 1;
@2310: let &lamia$1068 = alloc;
@2311: store &lamia$1068 lamia$1067;
@2312: let lamia$1069 = "*value";
@2313: let lamia$1070 = {};
@2314: let lamia$1071 = lamia$1070{lamia$1069 -> &lamia$1068};
@2315: let &lamia$1072 = alloc;
@2316: store &lamia$1072 lamia$1071;
@2317: let lamia$1073 = "$norm48";
@2318: let lamia$1074 = get &scope;
@2319: let lamia$1075 = lamia$1074{lamia$1073 -> &lamia$1072};
@2320: store &scope lamia$1075;
@2321: let lamia$1076 = 3;
@2322: let &lamia$1077 = alloc;
@2323: store &lamia$1077 lamia$1076;
@2324: let lamia$1078 = "*value";
@2325: let lamia$1079 = {};
@2326: let lamia$1080 = lamia$1079{lamia$1078 -> &lamia$1077};
@2327: let &lamia$1081 = alloc;
@2328: store &lamia$1081 lamia$1080;
@2329: let lamia$1082 = "$norm49";
@2330: let lamia$1083 = get &scope;
@2331: let lamia$1084 = lamia$1083{lamia$1082 -> &lamia$1081};
@2332: store &scope lamia$1084;
@2333: let lamia$1085 = "$norm47";
@2334: let &lamia$1086 = get_from_scope(lamia$1085);
@2335: let lamia$1087 = "$norm48";
@2336: let &lamia$1088 = get_from_scope(lamia$1087);
@2337: let lamia$1089 = "*None";
@2338: let &lamia$1090 = get_from_scope(lamia$1089);
@2339: let lamia$1091 = "$norm49";
@2340: let &lamia$1092 = get_from_scope(lamia$1091);
@2341: let &lamia$1093 = &lamia$1086;
@2342: let lamia$1095 = get &lamia$1093;
@2343: let lamia$1097 = "*value";
@2344: let lamia$1098 = lamia$1095 haskey lamia$1097;
@2345: let &lamia$1099 = if lamia$1098 then {
    @2355: let &lamia$1100 = lamia$1095{lamia$1097};
    @2356: ifresult &lamia$1100;

} else {
    @2346: let lamia$1101 = "Object has no attribute *value";
    @2347: let &lamia$1102 = alloc;
    @2348: store &lamia$1102 lamia$1101;
    @2349: let lamia$1103 = "*value";
    @2350: let lamia$1104 = {};
    @2351: let lamia$1105 = lamia$1104{lamia$1103 -> &lamia$1102};
    @2352: let &lamia$1106 = alloc;
    @2353: store &lamia$1106 lamia$1105;
    @2354: raise &lamia$1106;

};
@2357: let lamia$1096 = get &lamia$1099;
@2358: let lamia$1107 = isfunc lamia$1096;
@2359: let lamia$1108 = not lamia$1107;
@2360: let &lamia$1094 = alloc;
@2361: store &lamia$1094 lamia$1108;
@2362: while &lamia$1094 {
    @2363: let lamia$1109 = "__call__";
    @2364: let lamia$1110 = lamia$1095 haskey lamia$1109;
    @2365: let &lamia$1111 = if lamia$1110 then {
        @2375: let &lamia$1112 = lamia$1095{lamia$1109};
        @2376: ifresult &lamia$1112;

    } else {
        @2366: let lamia$1113 = "Object is not callable";
        @2367: let &lamia$1114 = alloc;
        @2368: store &lamia$1114 lamia$1113;
        @2369: let lamia$1115 = "*value";
        @2370: let lamia$1116 = {};
        @2371: let lamia$1117 = lamia$1116{lamia$1115 -> &lamia$1114};
        @2372: let &lamia$1118 = alloc;
        @2373: store &lamia$1118 lamia$1117;
        @2374: raise &lamia$1118;

    };
    @2377: let &lamia$1093 = &lamia$1111;
    @2378: let lamia$1095 = get &lamia$1093;
    @2379: let lamia$1097 = "*value";
    @2380: let lamia$1098 = lamia$1095 haskey lamia$1097;
    @2381: let &lamia$1099 = if lamia$1098 then {
        @2391: let &lamia$1100 = lamia$1095{lamia$1097};
        @2392: ifresult &lamia$1100;

    } else {
        @2382: let lamia$1101 = "Object has no attribute *value";
        @2383: let &lamia$1102 = alloc;
        @2384: store &lamia$1102 lamia$1101;
        @2385: let lamia$1103 = "*value";
        @2386: let lamia$1104 = {};
        @2387: let lamia$1105 = lamia$1104{lamia$1103 -> &lamia$1102};
        @2388: let &lamia$1106 = alloc;
        @2389: store &lamia$1106 lamia$1105;
        @2390: raise &lamia$1106;

    };
    @2393: let lamia$1096 = get &lamia$1099;
    @2394: let lamia$1107 = isfunc lamia$1096;
    @2395: let lamia$1108 = not lamia$1107;
    @2396: let &lamia$1094 = alloc;
    @2397: store &lamia$1094 lamia$1108;

};
@2398: let lamia$1119 = [&lamia$1088, &lamia$1090, &lamia$1092];
@2399: let &lamia$1120 = lamia$1096(lamia$1119);
@2400: let lamia$1121 = "$norm50";
@2401: let lamia$1122 = get &scope;
@2402: let lamia$1123 = lamia$1122{lamia$1121 -> &lamia$1120};
@2403: store &scope lamia$1123;
@2404: let lamia$1124 = "$norm46";
@2405: let &lamia$1125 = get_from_scope(lamia$1124);
@2406: let lamia$1126 = "$norm50";
@2407: let &lamia$1127 = get_from_scope(lamia$1126);
@2408: let &lamia$1128 = &lamia$1125;
@2409: let lamia$1130 = get &lamia$1128;
@2410: let lamia$1132 = "*value";
@2411: let lamia$1133 = lamia$1130 haskey lamia$1132;
@2412: let &lamia$1134 = if lamia$1133 then {
    @2422: let &lamia$1135 = lamia$1130{lamia$1132};
    @2423: ifresult &lamia$1135;

} else {
    @2413: let lamia$1136 = "Object has no attribute *value";
    @2414: let &lamia$1137 = alloc;
    @2415: store &lamia$1137 lamia$1136;
    @2416: let lamia$1138 = "*value";
    @2417: let lamia$1139 = {};
    @2418: let lamia$1140 = lamia$1139{lamia$1138 -> &lamia$1137};
    @2419: let &lamia$1141 = alloc;
    @2420: store &lamia$1141 lamia$1140;
    @2421: raise &lamia$1141;

};
@2424: let lamia$1131 = get &lamia$1134;
@2425: let lamia$1142 = isfunc lamia$1131;
@2426: let lamia$1143 = not lamia$1142;
@2427: let &lamia$1129 = alloc;
@2428: store &lamia$1129 lamia$1143;
@2429: while &lamia$1129 {
    @2430: let lamia$1144 = "__call__";
    @2431: let lamia$1145 = lamia$1130 haskey lamia$1144;
    @2432: let &lamia$1146 = if lamia$1145 then {
        @2442: let &lamia$1147 = lamia$1130{lamia$1144};
        @2443: ifresult &lamia$1147;

    } else {
        @2433: let lamia$1148 = "Object is not callable";
        @2434: let &lamia$1149 = alloc;
        @2435: store &lamia$1149 lamia$1148;
        @2436: let lamia$1150 = "*value";
        @2437: let lamia$1151 = {};
        @2438: let lamia$1152 = lamia$1151{lamia$1150 -> &lamia$1149};
        @2439: let &lamia$1153 = alloc;
        @2440: store &lamia$1153 lamia$1152;
        @2441: raise &lamia$1153;

    };
    @2444: let &lamia$1128 = &lamia$1146;
    @2445: let lamia$1130 = get &lamia$1128;
    @2446: let lamia$1132 = "*value";
    @2447: let lamia$1133 = lamia$1130 haskey lamia$1132;
    @2448: let &lamia$1134 = if lamia$1133 then {
        @2458: let &lamia$1135 = lamia$1130{lamia$1132};
        @2459: ifresult &lamia$1135;

    } else {
        @2449: let lamia$1136 = "Object has no attribute *value";
        @2450: let &lamia$1137 = alloc;
        @2451: store &lamia$1137 lamia$1136;
        @2452: let lamia$1138 = "*value";
        @2453: let lamia$1139 = {};
        @2454: let lamia$1140 = lamia$1139{lamia$1138 -> &lamia$1137};
        @2455: let &lamia$1141 = alloc;
        @2456: store &lamia$1141 lamia$1140;
        @2457: raise &lamia$1141;

    };
    @2460: let lamia$1131 = get &lamia$1134;
    @2461: let lamia$1142 = isfunc lamia$1131;
    @2462: let lamia$1143 = not lamia$1142;
    @2463: let &lamia$1129 = alloc;
    @2464: store &lamia$1129 lamia$1143;

};
@2465: let lamia$1154 = [&lamia$1127];
@2466: let &lamia$1155 = lamia$1131(lamia$1154);
@2467: let lamia$1156 = "$norm51";
@2468: let lamia$1157 = get &scope;
@2469: let lamia$1158 = lamia$1157{lamia$1156 -> &lamia$1155};
@2470: store &scope lamia$1158;
@2471: let lamia$1159 = "list";
@2472: let &lamia$1160 = get_from_scope(lamia$1159);
@2473: let lamia$1161 = get &lamia$1160;
@2474: let lamia$1162 = "__getitem__";
@2475: let lamia$1163 = lamia$1161 haskey lamia$1162;
@2476: let &lamia$1164 = if lamia$1163 then {
    @2486: let &lamia$1165 = lamia$1161{lamia$1162};
    @2487: ifresult &lamia$1165;

} else {
    @2477: let lamia$1166 = "Object has no attribute __getitem__";
    @2478: let &lamia$1167 = alloc;
    @2479: store &lamia$1167 lamia$1166;
    @2480: let lamia$1168 = "*value";
    @2481: let lamia$1169 = {};
    @2482: let lamia$1170 = lamia$1169{lamia$1168 -> &lamia$1167};
    @2483: let &lamia$1171 = alloc;
    @2484: store &lamia$1171 lamia$1170;
    @2485: raise &lamia$1171;

};
@2488: let lamia$1172 = get &lamia$1164;
@2489: let lamia$1173 = isfunc lamia$1172;
@2490: let &lamia$1174 = if lamia$1173 then {
    @2492: let lamia$1175 = def (lamia$1176) {
        @2493: let lamia$1177 = [&lamia$1160];
        @2494: let lamia$1178 = lamia$1177 || lamia$1176;
        @2495: let &lamia$1179 = lamia$1172(lamia$1178);
        @2496: return &lamia$1179;

    };
    @2497: let &lamia$1180 = alloc;
    @2498: store &lamia$1180 lamia$1175;
    @2499: let lamia$1181 = "*value";
    @2500: let lamia$1182 = {};
    @2501: let lamia$1183 = lamia$1182{lamia$1181 -> &lamia$1180};
    @2502: let &lamia$1184 = alloc;
    @2503: store &lamia$1184 lamia$1183;
    @2504: ifresult &lamia$1184;

} else {
    @2491: ifresult &lamia$1164;

};
@2505: let lamia$1185 = "$norm52";
@2506: let lamia$1186 = get &scope;
@2507: let lamia$1187 = lamia$1186{lamia$1185 -> &lamia$1174};
@2508: store &scope lamia$1187;
@2509: let lamia$1188 = "$norm53";
@2510: let lamia$1189 = get &scope;
@2511: let lamia$1190 = lamia$1189{lamia$1188 -> &slice};
@2512: store &scope lamia$1190;
@2513: let lamia$1191 = 2;
@2514: let &lamia$1192 = alloc;
@2515: store &lamia$1192 lamia$1191;
@2516: let lamia$1193 = "*value";
@2517: let lamia$1194 = {};
@2518: let lamia$1195 = lamia$1194{lamia$1193 -> &lamia$1192};
@2519: let &lamia$1196 = alloc;
@2520: store &lamia$1196 lamia$1195;
@2521: let lamia$1197 = "$norm54";
@2522: let lamia$1198 = get &scope;
@2523: let lamia$1199 = lamia$1198{lamia$1197 -> &lamia$1196};
@2524: store &scope lamia$1199;
@2525: let lamia$1200 = 3;
@2526: let &lamia$1201 = alloc;
@2527: store &lamia$1201 lamia$1200;
@2528: let lamia$1202 = "*value";
@2529: let lamia$1203 = {};
@2530: let lamia$1204 = lamia$1203{lamia$1202 -> &lamia$1201};
@2531: let &lamia$1205 = alloc;
@2532: store &lamia$1205 lamia$1204;
@2533: let lamia$1206 = "$norm55";
@2534: let lamia$1207 = get &scope;
@2535: let lamia$1208 = lamia$1207{lamia$1206 -> &lamia$1205};
@2536: store &scope lamia$1208;
@2537: let lamia$1209 = "$norm53";
@2538: let &lamia$1210 = get_from_scope(lamia$1209);
@2539: let lamia$1211 = "*None";
@2540: let &lamia$1212 = get_from_scope(lamia$1211);
@2541: let lamia$1213 = "$norm54";
@2542: let &lamia$1214 = get_from_scope(lamia$1213);
@2543: let lamia$1215 = "$norm55";
@2544: let &lamia$1216 = get_from_scope(lamia$1215);
@2545: let &lamia$1217 = &lamia$1210;
@2546: let lamia$1219 = get &lamia$1217;
@2547: let lamia$1221 = "*value";
@2548: let lamia$1222 = lamia$1219 haskey lamia$1221;
@2549: let &lamia$1223 = if lamia$1222 then {
    @2559: let &lamia$1224 = lamia$1219{lamia$1221};
    @2560: ifresult &lamia$1224;

} else {
    @2550: let lamia$1225 = "Object has no attribute *value";
    @2551: let &lamia$1226 = alloc;
    @2552: store &lamia$1226 lamia$1225;
    @2553: let lamia$1227 = "*value";
    @2554: let lamia$1228 = {};
    @2555: let lamia$1229 = lamia$1228{lamia$1227 -> &lamia$1226};
    @2556: let &lamia$1230 = alloc;
    @2557: store &lamia$1230 lamia$1229;
    @2558: raise &lamia$1230;

};
@2561: let lamia$1220 = get &lamia$1223;
@2562: let lamia$1231 = isfunc lamia$1220;
@2563: let lamia$1232 = not lamia$1231;
@2564: let &lamia$1218 = alloc;
@2565: store &lamia$1218 lamia$1232;
@2566: while &lamia$1218 {
    @2567: let lamia$1233 = "__call__";
    @2568: let lamia$1234 = lamia$1219 haskey lamia$1233;
    @2569: let &lamia$1235 = if lamia$1234 then {
        @2579: let &lamia$1236 = lamia$1219{lamia$1233};
        @2580: ifresult &lamia$1236;

    } else {
        @2570: let lamia$1237 = "Object is not callable";
        @2571: let &lamia$1238 = alloc;
        @2572: store &lamia$1238 lamia$1237;
        @2573: let lamia$1239 = "*value";
        @2574: let lamia$1240 = {};
        @2575: let lamia$1241 = lamia$1240{lamia$1239 -> &lamia$1238};
        @2576: let &lamia$1242 = alloc;
        @2577: store &lamia$1242 lamia$1241;
        @2578: raise &lamia$1242;

    };
    @2581: let &lamia$1217 = &lamia$1235;
    @2582: let lamia$1219 = get &lamia$1217;
    @2583: let lamia$1221 = "*value";
    @2584: let lamia$1222 = lamia$1219 haskey lamia$1221;
    @2585: let &lamia$1223 = if lamia$1222 then {
        @2595: let &lamia$1224 = lamia$1219{lamia$1221};
        @2596: ifresult &lamia$1224;

    } else {
        @2586: let lamia$1225 = "Object has no attribute *value";
        @2587: let &lamia$1226 = alloc;
        @2588: store &lamia$1226 lamia$1225;
        @2589: let lamia$1227 = "*value";
        @2590: let lamia$1228 = {};
        @2591: let lamia$1229 = lamia$1228{lamia$1227 -> &lamia$1226};
        @2592: let &lamia$1230 = alloc;
        @2593: store &lamia$1230 lamia$1229;
        @2594: raise &lamia$1230;

    };
    @2597: let lamia$1220 = get &lamia$1223;
    @2598: let lamia$1231 = isfunc lamia$1220;
    @2599: let lamia$1232 = not lamia$1231;
    @2600: let &lamia$1218 = alloc;
    @2601: store &lamia$1218 lamia$1232;

};
@2602: let lamia$1243 = [&lamia$1212, &lamia$1214, &lamia$1216];
@2603: let &lamia$1244 = lamia$1220(lamia$1243);
@2604: let lamia$1245 = "$norm56";
@2605: let lamia$1246 = get &scope;
@2606: let lamia$1247 = lamia$1246{lamia$1245 -> &lamia$1244};
@2607: store &scope lamia$1247;
@2608: let lamia$1248 = "$norm52";
@2609: let &lamia$1249 = get_from_scope(lamia$1248);
@2610: let lamia$1250 = "$norm56";
@2611: let &lamia$1251 = get_from_scope(lamia$1250);
@2612: let &lamia$1252 = &lamia$1249;
@2613: let lamia$1254 = get &lamia$1252;
@2614: let lamia$1256 = "*value";
@2615: let lamia$1257 = lamia$1254 haskey lamia$1256;
@2616: let &lamia$1258 = if lamia$1257 then {
    @2626: let &lamia$1259 = lamia$1254{lamia$1256};
    @2627: ifresult &lamia$1259;

} else {
    @2617: let lamia$1260 = "Object has no attribute *value";
    @2618: let &lamia$1261 = alloc;
    @2619: store &lamia$1261 lamia$1260;
    @2620: let lamia$1262 = "*value";
    @2621: let lamia$1263 = {};
    @2622: let lamia$1264 = lamia$1263{lamia$1262 -> &lamia$1261};
    @2623: let &lamia$1265 = alloc;
    @2624: store &lamia$1265 lamia$1264;
    @2625: raise &lamia$1265;

};
@2628: let lamia$1255 = get &lamia$1258;
@2629: let lamia$1266 = isfunc lamia$1255;
@2630: let lamia$1267 = not lamia$1266;
@2631: let &lamia$1253 = alloc;
@2632: store &lamia$1253 lamia$1267;
@2633: while &lamia$1253 {
    @2634: let lamia$1268 = "__call__";
    @2635: let lamia$1269 = lamia$1254 haskey lamia$1268;
    @2636: let &lamia$1270 = if lamia$1269 then {
        @2646: let &lamia$1271 = lamia$1254{lamia$1268};
        @2647: ifresult &lamia$1271;

    } else {
        @2637: let lamia$1272 = "Object is not callable";
        @2638: let &lamia$1273 = alloc;
        @2639: store &lamia$1273 lamia$1272;
        @2640: let lamia$1274 = "*value";
        @2641: let lamia$1275 = {};
        @2642: let lamia$1276 = lamia$1275{lamia$1274 -> &lamia$1273};
        @2643: let &lamia$1277 = alloc;
        @2644: store &lamia$1277 lamia$1276;
        @2645: raise &lamia$1277;

    };
    @2648: let &lamia$1252 = &lamia$1270;
    @2649: let lamia$1254 = get &lamia$1252;
    @2650: let lamia$1256 = "*value";
    @2651: let lamia$1257 = lamia$1254 haskey lamia$1256;
    @2652: let &lamia$1258 = if lamia$1257 then {
        @2662: let &lamia$1259 = lamia$1254{lamia$1256};
        @2663: ifresult &lamia$1259;

    } else {
        @2653: let lamia$1260 = "Object has no attribute *value";
        @2654: let &lamia$1261 = alloc;
        @2655: store &lamia$1261 lamia$1260;
        @2656: let lamia$1262 = "*value";
        @2657: let lamia$1263 = {};
        @2658: let lamia$1264 = lamia$1263{lamia$1262 -> &lamia$1261};
        @2659: let &lamia$1265 = alloc;
        @2660: store &lamia$1265 lamia$1264;
        @2661: raise &lamia$1265;

    };
    @2664: let lamia$1255 = get &lamia$1258;
    @2665: let lamia$1266 = isfunc lamia$1255;
    @2666: let lamia$1267 = not lamia$1266;
    @2667: let &lamia$1253 = alloc;
    @2668: store &lamia$1253 lamia$1267;

};
@2669: let lamia$1278 = [&lamia$1251];
@2670: let &lamia$1279 = lamia$1255(lamia$1278);
@2671: let lamia$1280 = "$norm57";
@2672: let lamia$1281 = get &scope;
@2673: let lamia$1282 = lamia$1281{lamia$1280 -> &lamia$1279};
@2674: store &scope lamia$1282;
@2675: let lamia$1283 = "list";
@2676: let &lamia$1284 = get_from_scope(lamia$1283);
@2677: let lamia$1285 = get &lamia$1284;
@2678: let lamia$1286 = "__getitem__";
@2679: let lamia$1287 = lamia$1285 haskey lamia$1286;
@2680: let &lamia$1288 = if lamia$1287 then {
    @2690: let &lamia$1289 = lamia$1285{lamia$1286};
    @2691: ifresult &lamia$1289;

} else {
    @2681: let lamia$1290 = "Object has no attribute __getitem__";
    @2682: let &lamia$1291 = alloc;
    @2683: store &lamia$1291 lamia$1290;
    @2684: let lamia$1292 = "*value";
    @2685: let lamia$1293 = {};
    @2686: let lamia$1294 = lamia$1293{lamia$1292 -> &lamia$1291};
    @2687: let &lamia$1295 = alloc;
    @2688: store &lamia$1295 lamia$1294;
    @2689: raise &lamia$1295;

};
@2692: let lamia$1296 = get &lamia$1288;
@2693: let lamia$1297 = isfunc lamia$1296;
@2694: let &lamia$1298 = if lamia$1297 then {
    @2696: let lamia$1299 = def (lamia$1300) {
        @2697: let lamia$1301 = [&lamia$1284];
        @2698: let lamia$1302 = lamia$1301 || lamia$1300;
        @2699: let &lamia$1303 = lamia$1296(lamia$1302);
        @2700: return &lamia$1303;

    };
    @2701: let &lamia$1304 = alloc;
    @2702: store &lamia$1304 lamia$1299;
    @2703: let lamia$1305 = "*value";
    @2704: let lamia$1306 = {};
    @2705: let lamia$1307 = lamia$1306{lamia$1305 -> &lamia$1304};
    @2706: let &lamia$1308 = alloc;
    @2707: store &lamia$1308 lamia$1307;
    @2708: ifresult &lamia$1308;

} else {
    @2695: ifresult &lamia$1288;

};
@2709: let lamia$1309 = "$norm58";
@2710: let lamia$1310 = get &scope;
@2711: let lamia$1311 = lamia$1310{lamia$1309 -> &lamia$1298};
@2712: store &scope lamia$1311;
@2713: let lamia$1312 = "$norm59";
@2714: let lamia$1313 = get &scope;
@2715: let lamia$1314 = lamia$1313{lamia$1312 -> &slice};
@2716: store &scope lamia$1314;
@2717: let lamia$1315 = 1;
@2718: let &lamia$1316 = alloc;
@2719: store &lamia$1316 lamia$1315;
@2720: let lamia$1317 = "*value";
@2721: let lamia$1318 = {};
@2722: let lamia$1319 = lamia$1318{lamia$1317 -> &lamia$1316};
@2723: let &lamia$1320 = alloc;
@2724: store &lamia$1320 lamia$1319;
@2725: let lamia$1321 = "$norm60";
@2726: let lamia$1322 = get &scope;
@2727: let lamia$1323 = lamia$1322{lamia$1321 -> &lamia$1320};
@2728: store &scope lamia$1323;
@2729: let lamia$1324 = 2;
@2730: let &lamia$1325 = alloc;
@2731: store &lamia$1325 lamia$1324;
@2732: let lamia$1326 = "*value";
@2733: let lamia$1327 = {};
@2734: let lamia$1328 = lamia$1327{lamia$1326 -> &lamia$1325};
@2735: let &lamia$1329 = alloc;
@2736: store &lamia$1329 lamia$1328;
@2737: let lamia$1330 = "$norm61";
@2738: let lamia$1331 = get &scope;
@2739: let lamia$1332 = lamia$1331{lamia$1330 -> &lamia$1329};
@2740: store &scope lamia$1332;
@2741: let lamia$1333 = 3;
@2742: let &lamia$1334 = alloc;
@2743: store &lamia$1334 lamia$1333;
@2744: let lamia$1335 = "*value";
@2745: let lamia$1336 = {};
@2746: let lamia$1337 = lamia$1336{lamia$1335 -> &lamia$1334};
@2747: let &lamia$1338 = alloc;
@2748: store &lamia$1338 lamia$1337;
@2749: let lamia$1339 = "$norm62";
@2750: let lamia$1340 = get &scope;
@2751: let lamia$1341 = lamia$1340{lamia$1339 -> &lamia$1338};
@2752: store &scope lamia$1341;
@2753: let lamia$1342 = "$norm59";
@2754: let &lamia$1343 = get_from_scope(lamia$1342);
@2755: let lamia$1344 = "$norm60";
@2756: let &lamia$1345 = get_from_scope(lamia$1344);
@2757: let lamia$1346 = "$norm61";
@2758: let &lamia$1347 = get_from_scope(lamia$1346);
@2759: let lamia$1348 = "$norm62";
@2760: let &lamia$1349 = get_from_scope(lamia$1348);
@2761: let &lamia$1350 = &lamia$1343;
@2762: let lamia$1352 = get &lamia$1350;
@2763: let lamia$1354 = "*value";
@2764: let lamia$1355 = lamia$1352 haskey lamia$1354;
@2765: let &lamia$1356 = if lamia$1355 then {
    @2775: let &lamia$1357 = lamia$1352{lamia$1354};
    @2776: ifresult &lamia$1357;

} else {
    @2766: let lamia$1358 = "Object has no attribute *value";
    @2767: let &lamia$1359 = alloc;
    @2768: store &lamia$1359 lamia$1358;
    @2769: let lamia$1360 = "*value";
    @2770: let lamia$1361 = {};
    @2771: let lamia$1362 = lamia$1361{lamia$1360 -> &lamia$1359};
    @2772: let &lamia$1363 = alloc;
    @2773: store &lamia$1363 lamia$1362;
    @2774: raise &lamia$1363;

};
@2777: let lamia$1353 = get &lamia$1356;
@2778: let lamia$1364 = isfunc lamia$1353;
@2779: let lamia$1365 = not lamia$1364;
@2780: let &lamia$1351 = alloc;
@2781: store &lamia$1351 lamia$1365;
@2782: while &lamia$1351 {
    @2783: let lamia$1366 = "__call__";
    @2784: let lamia$1367 = lamia$1352 haskey lamia$1366;
    @2785: let &lamia$1368 = if lamia$1367 then {
        @2795: let &lamia$1369 = lamia$1352{lamia$1366};
        @2796: ifresult &lamia$1369;

    } else {
        @2786: let lamia$1370 = "Object is not callable";
        @2787: let &lamia$1371 = alloc;
        @2788: store &lamia$1371 lamia$1370;
        @2789: let lamia$1372 = "*value";
        @2790: let lamia$1373 = {};
        @2791: let lamia$1374 = lamia$1373{lamia$1372 -> &lamia$1371};
        @2792: let &lamia$1375 = alloc;
        @2793: store &lamia$1375 lamia$1374;
        @2794: raise &lamia$1375;

    };
    @2797: let &lamia$1350 = &lamia$1368;
    @2798: let lamia$1352 = get &lamia$1350;
    @2799: let lamia$1354 = "*value";
    @2800: let lamia$1355 = lamia$1352 haskey lamia$1354;
    @2801: let &lamia$1356 = if lamia$1355 then {
        @2811: let &lamia$1357 = lamia$1352{lamia$1354};
        @2812: ifresult &lamia$1357;

    } else {
        @2802: let lamia$1358 = "Object has no attribute *value";
        @2803: let &lamia$1359 = alloc;
        @2804: store &lamia$1359 lamia$1358;
        @2805: let lamia$1360 = "*value";
        @2806: let lamia$1361 = {};
        @2807: let lamia$1362 = lamia$1361{lamia$1360 -> &lamia$1359};
        @2808: let &lamia$1363 = alloc;
        @2809: store &lamia$1363 lamia$1362;
        @2810: raise &lamia$1363;

    };
    @2813: let lamia$1353 = get &lamia$1356;
    @2814: let lamia$1364 = isfunc lamia$1353;
    @2815: let lamia$1365 = not lamia$1364;
    @2816: let &lamia$1351 = alloc;
    @2817: store &lamia$1351 lamia$1365;

};
@2818: let lamia$1376 = [&lamia$1345, &lamia$1347, &lamia$1349];
@2819: let &lamia$1377 = lamia$1353(lamia$1376);
@2820: let lamia$1378 = "$norm63";
@2821: let lamia$1379 = get &scope;
@2822: let lamia$1380 = lamia$1379{lamia$1378 -> &lamia$1377};
@2823: store &scope lamia$1380;
@2824: let lamia$1381 = "$norm58";
@2825: let &lamia$1382 = get_from_scope(lamia$1381);
@2826: let lamia$1383 = "$norm63";
@2827: let &lamia$1384 = get_from_scope(lamia$1383);
@2828: let &lamia$1385 = &lamia$1382;
@2829: let lamia$1387 = get &lamia$1385;
@2830: let lamia$1389 = "*value";
@2831: let lamia$1390 = lamia$1387 haskey lamia$1389;
@2832: let &lamia$1391 = if lamia$1390 then {
    @2842: let &lamia$1392 = lamia$1387{lamia$1389};
    @2843: ifresult &lamia$1392;

} else {
    @2833: let lamia$1393 = "Object has no attribute *value";
    @2834: let &lamia$1394 = alloc;
    @2835: store &lamia$1394 lamia$1393;
    @2836: let lamia$1395 = "*value";
    @2837: let lamia$1396 = {};
    @2838: let lamia$1397 = lamia$1396{lamia$1395 -> &lamia$1394};
    @2839: let &lamia$1398 = alloc;
    @2840: store &lamia$1398 lamia$1397;
    @2841: raise &lamia$1398;

};
@2844: let lamia$1388 = get &lamia$1391;
@2845: let lamia$1399 = isfunc lamia$1388;
@2846: let lamia$1400 = not lamia$1399;
@2847: let &lamia$1386 = alloc;
@2848: store &lamia$1386 lamia$1400;
@2849: while &lamia$1386 {
    @2850: let lamia$1401 = "__call__";
    @2851: let lamia$1402 = lamia$1387 haskey lamia$1401;
    @2852: let &lamia$1403 = if lamia$1402 then {
        @2862: let &lamia$1404 = lamia$1387{lamia$1401};
        @2863: ifresult &lamia$1404;

    } else {
        @2853: let lamia$1405 = "Object is not callable";
        @2854: let &lamia$1406 = alloc;
        @2855: store &lamia$1406 lamia$1405;
        @2856: let lamia$1407 = "*value";
        @2857: let lamia$1408 = {};
        @2858: let lamia$1409 = lamia$1408{lamia$1407 -> &lamia$1406};
        @2859: let &lamia$1410 = alloc;
        @2860: store &lamia$1410 lamia$1409;
        @2861: raise &lamia$1410;

    };
    @2864: let &lamia$1385 = &lamia$1403;
    @2865: let lamia$1387 = get &lamia$1385;
    @2866: let lamia$1389 = "*value";
    @2867: let lamia$1390 = lamia$1387 haskey lamia$1389;
    @2868: let &lamia$1391 = if lamia$1390 then {
        @2878: let &lamia$1392 = lamia$1387{lamia$1389};
        @2879: ifresult &lamia$1392;

    } else {
        @2869: let lamia$1393 = "Object has no attribute *value";
        @2870: let &lamia$1394 = alloc;
        @2871: store &lamia$1394 lamia$1393;
        @2872: let lamia$1395 = "*value";
        @2873: let lamia$1396 = {};
        @2874: let lamia$1397 = lamia$1396{lamia$1395 -> &lamia$1394};
        @2875: let &lamia$1398 = alloc;
        @2876: store &lamia$1398 lamia$1397;
        @2877: raise &lamia$1398;

    };
    @2880: let lamia$1388 = get &lamia$1391;
    @2881: let lamia$1399 = isfunc lamia$1388;
    @2882: let lamia$1400 = not lamia$1399;
    @2883: let &lamia$1386 = alloc;
    @2884: store &lamia$1386 lamia$1400;

};
@2885: let lamia$1411 = [&lamia$1384];
@2886: let &lamia$1412 = lamia$1388(lamia$1411);
@2887: let lamia$1413 = "$norm64";
@2888: let lamia$1414 = get &scope;
@2889: let lamia$1415 = lamia$1414{lamia$1413 -> &lamia$1412};
@2890: store &scope lamia$1415;
