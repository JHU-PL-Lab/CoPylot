@   0: let preamble$0 = {};
@   1: let &scope = alloc;
@   2: store &scope preamble$0;
@   3: let get_from_parent_scope = def (preamble$1) {
    @   4: let preamble$2 = "name is not defined";
    @   5: let &preamble$3 = alloc;
    @   6: store &preamble$3 preamble$2;
    @   7: let preamble$4 = "*value";
    @   8: let preamble$5 = {};
    @   9: let preamble$6 = preamble$5{preamble$4 -> &preamble$3};
    @  10: let &preamble$7 = alloc;
    @  11: store &preamble$7 preamble$6;
    @  12: raise &preamble$7;

};
@  13: let get_from_scope = def (preamble$8) {
    @  14: let preamble$9 = get &scope;
    @  15: let preamble$10 = preamble$9 haskey preamble$8;
    @  16: let &preamble$11 = if preamble$10 then {
        @  19: let &preamble$12 = preamble$9{preamble$8};
        @  20: ifresult &preamble$12;

    } else {
        @  17: let &preamble$13 = get_from_parent_scope(preamble$8);
        @  18: ifresult &preamble$13;

    };
    @  21: return &preamble$11;

};
@  22: let &preamble$15 = alloc;
@  23: let preamble$14 = 1;
@  24: store &preamble$15 preamble$14;
@  25: let preamble$16 = {};
@  26: let preamble$17 = "*value";
@  27: let preamble$18 = preamble$16{preamble$17 -> &preamble$15};
@  28: let &True = alloc;
@  29: store &True preamble$18;
@  30: let &preamble$20 = alloc;
@  31: let preamble$19 = 0;
@  32: store &preamble$20 preamble$19;
@  33: let preamble$21 = {};
@  34: let preamble$22 = "*value";
@  35: let preamble$23 = preamble$21{preamble$22 -> &preamble$20};
@  36: let &False = alloc;
@  37: store &False preamble$23;
@  38: let &preamble$25 = alloc;
@  39: let preamble$24 = None;
@  40: store &preamble$25 preamble$24;
@  41: let preamble$26 = {};
@  42: let preamble$27 = "*value";
@  43: let preamble$28 = preamble$26{preamble$27 -> &preamble$25};
@  44: let &None = alloc;
@  45: store &None preamble$28;
@  46: let &preamble$30 = alloc;
@  47: let preamble$29 = NotImplemented;
@  48: store &preamble$30 preamble$29;
@  49: let preamble$31 = {};
@  50: let preamble$32 = "*value";
@  51: let preamble$33 = preamble$31{preamble$32 -> &preamble$30};
@  52: let &NotImplemented = alloc;
@  53: store &NotImplemented preamble$33;
@  54: let preamble$54 = def (preamble$34) {
    @  55: let preamble$35 = 0;
    @  56: let &preamble$36 = preamble$34[preamble$35];
    @  57: let preamble$37 = get &preamble$36;
    @  58: let preamble$38 = "*value";
    @  59: let preamble$39 = preamble$37 haskey preamble$38;
    @  60: let &preamble$40 = if preamble$39 then {
        @  70: let &preamble$41 = preamble$37{preamble$38};
        @  71: ifresult &preamble$41;

    } else {
        @  61: let preamble$42 = "Object has no attribute *value";
        @  62: let &preamble$43 = alloc;
        @  63: store &preamble$43 preamble$42;
        @  64: let preamble$44 = "*value";
        @  65: let preamble$45 = {};
        @  66: let preamble$46 = preamble$45{preamble$44 -> &preamble$43};
        @  67: let &preamble$47 = alloc;
        @  68: store &preamble$47 preamble$46;
        @  69: raise &preamble$47;

    };
    @  72: let preamble$48 = get &preamble$40;
    @  73: let &preamble$49 = alloc;
    @  74: store &preamble$49 preamble$48;
    @  75: let preamble$50 = "*value";
    @  76: let preamble$51 = {};
    @  77: let preamble$52 = preamble$51{preamble$50 -> &preamble$49};
    @  78: let &preamble$53 = alloc;
    @  79: store &preamble$53 preamble$52;

};
@  80: let &preamble$55 = alloc;
@  81: store &preamble$55 preamble$54;
@  82: let preamble$56 = "*value";
@  83: let preamble$57 = {};
@  84: let preamble$58 = preamble$57{preamble$56 -> &preamble$55};
@  85: let &preamble$59 = alloc;
@  86: store &preamble$59 preamble$58;
@  87: let &AttributeError = &preamble$59;
@  88: let preamble$80 = def (preamble$60) {
    @  89: let preamble$61 = 0;
    @  90: let &preamble$62 = preamble$60[preamble$61];
    @  91: let preamble$63 = get &preamble$62;
    @  92: let preamble$64 = "*value";
    @  93: let preamble$65 = preamble$63 haskey preamble$64;
    @  94: let &preamble$66 = if preamble$65 then {
        @ 104: let &preamble$67 = preamble$63{preamble$64};
        @ 105: ifresult &preamble$67;

    } else {
        @  95: let preamble$68 = "Object has no attribute *value";
        @  96: let &preamble$69 = alloc;
        @  97: store &preamble$69 preamble$68;
        @  98: let preamble$70 = "*value";
        @  99: let preamble$71 = {};
        @ 100: let preamble$72 = preamble$71{preamble$70 -> &preamble$69};
        @ 101: let &preamble$73 = alloc;
        @ 102: store &preamble$73 preamble$72;
        @ 103: raise &preamble$73;

    };
    @ 106: let preamble$74 = get &preamble$66;
    @ 107: let &preamble$75 = alloc;
    @ 108: store &preamble$75 preamble$74;
    @ 109: let preamble$76 = "*value";
    @ 110: let preamble$77 = {};
    @ 111: let preamble$78 = preamble$77{preamble$76 -> &preamble$75};
    @ 112: let &preamble$79 = alloc;
    @ 113: store &preamble$79 preamble$78;

};
@ 114: let &preamble$81 = alloc;
@ 115: store &preamble$81 preamble$80;
@ 116: let preamble$82 = "*value";
@ 117: let preamble$83 = {};
@ 118: let preamble$84 = preamble$83{preamble$82 -> &preamble$81};
@ 119: let &preamble$85 = alloc;
@ 120: store &preamble$85 preamble$84;
@ 121: let &TypeError = &preamble$85;
@ 122: let preamble$106 = def (preamble$86) {
    @ 123: let preamble$87 = 0;
    @ 124: let &preamble$88 = preamble$86[preamble$87];
    @ 125: let preamble$89 = get &preamble$88;
    @ 126: let preamble$90 = "*value";
    @ 127: let preamble$91 = preamble$89 haskey preamble$90;
    @ 128: let &preamble$92 = if preamble$91 then {
        @ 138: let &preamble$93 = preamble$89{preamble$90};
        @ 139: ifresult &preamble$93;

    } else {
        @ 129: let preamble$94 = "Object has no attribute *value";
        @ 130: let &preamble$95 = alloc;
        @ 131: store &preamble$95 preamble$94;
        @ 132: let preamble$96 = "*value";
        @ 133: let preamble$97 = {};
        @ 134: let preamble$98 = preamble$97{preamble$96 -> &preamble$95};
        @ 135: let &preamble$99 = alloc;
        @ 136: store &preamble$99 preamble$98;
        @ 137: raise &preamble$99;

    };
    @ 140: let preamble$100 = get &preamble$92;
    @ 141: let &preamble$101 = alloc;
    @ 142: store &preamble$101 preamble$100;
    @ 143: let preamble$102 = "*value";
    @ 144: let preamble$103 = {};
    @ 145: let preamble$104 = preamble$103{preamble$102 -> &preamble$101};
    @ 146: let &preamble$105 = alloc;
    @ 147: store &preamble$105 preamble$104;

};
@ 148: let &preamble$107 = alloc;
@ 149: store &preamble$107 preamble$106;
@ 150: let preamble$108 = "*value";
@ 151: let preamble$109 = {};
@ 152: let preamble$110 = preamble$109{preamble$108 -> &preamble$107};
@ 153: let &preamble$111 = alloc;
@ 154: store &preamble$111 preamble$110;
@ 155: let &NameError = &preamble$111;
@ 156: let preamble$132 = def (preamble$112) {
    @ 157: let preamble$113 = 0;
    @ 158: let &preamble$114 = preamble$112[preamble$113];
    @ 159: let preamble$115 = get &preamble$114;
    @ 160: let preamble$116 = "*value";
    @ 161: let preamble$117 = preamble$115 haskey preamble$116;
    @ 162: let &preamble$118 = if preamble$117 then {
        @ 172: let &preamble$119 = preamble$115{preamble$116};
        @ 173: ifresult &preamble$119;

    } else {
        @ 163: let preamble$120 = "Object has no attribute *value";
        @ 164: let &preamble$121 = alloc;
        @ 165: store &preamble$121 preamble$120;
        @ 166: let preamble$122 = "*value";
        @ 167: let preamble$123 = {};
        @ 168: let preamble$124 = preamble$123{preamble$122 -> &preamble$121};
        @ 169: let &preamble$125 = alloc;
        @ 170: store &preamble$125 preamble$124;
        @ 171: raise &preamble$125;

    };
    @ 174: let preamble$126 = get &preamble$118;
    @ 175: let &preamble$127 = alloc;
    @ 176: store &preamble$127 preamble$126;
    @ 177: let preamble$128 = "*value";
    @ 178: let preamble$129 = {};
    @ 179: let preamble$130 = preamble$129{preamble$128 -> &preamble$127};
    @ 180: let &preamble$131 = alloc;
    @ 181: store &preamble$131 preamble$130;

};
@ 182: let &preamble$133 = alloc;
@ 183: store &preamble$133 preamble$132;
@ 184: let preamble$134 = "*value";
@ 185: let preamble$135 = {};
@ 186: let preamble$136 = preamble$135{preamble$134 -> &preamble$133};
@ 187: let &preamble$137 = alloc;
@ 188: store &preamble$137 preamble$136;
@ 189: let &StopIteration = &preamble$137;
@ 190: let preamble$263 = def (preamble$138) {
    @ 191: let preamble$139 = 0;
    @ 192: let &preamble$140 = preamble$138[preamble$139];
    @ 193: let preamble$141 = get &preamble$140;
    @ 194: let preamble$142 = "*value";
    @ 195: let preamble$143 = preamble$141 haskey preamble$142;
    @ 196: let &preamble$144 = if preamble$143 then {
        @ 206: let &preamble$145 = preamble$141{preamble$142};
        @ 207: ifresult &preamble$145;

    } else {
        @ 197: let preamble$146 = "Object has no attribute *value";
        @ 198: let &preamble$147 = alloc;
        @ 199: store &preamble$147 preamble$146;
        @ 200: let preamble$148 = "*value";
        @ 201: let preamble$149 = {};
        @ 202: let preamble$150 = preamble$149{preamble$148 -> &preamble$147};
        @ 203: let &preamble$151 = alloc;
        @ 204: store &preamble$151 preamble$150;
        @ 205: raise &preamble$151;

    };
    @ 208: let preamble$152 = get &preamble$144;
    @ 209: let preamble$259 = None;
    @ 210: let preamble$258 = preamble$259 == preamble$152;
    @ 211: let preamble$260 = if preamble$258 then {
        @ 395: let preamble$261 = False;
        @ 396: ifresult preamble$261;

    } else {
        @ 212: let preamble$255 = False;
        @ 213: let preamble$254 = preamble$255 == preamble$152;
        @ 214: let preamble$256 = if preamble$254 then {
            @ 393: let preamble$257 = False;
            @ 394: ifresult preamble$257;

        } else {
            @ 215: let preamble$251 = 0;
            @ 216: let preamble$250 = preamble$251 == preamble$152;
            @ 217: let preamble$252 = if preamble$250 then {
                @ 391: let preamble$253 = False;
                @ 392: ifresult preamble$253;

            } else {
                @ 218: let preamble$247 = "";
                @ 219: let preamble$246 = preamble$247 == preamble$152;
                @ 220: let preamble$248 = if preamble$246 then {
                    @ 389: let preamble$249 = False;
                    @ 390: ifresult preamble$249;

                } else {
                    @ 221: let preamble$243 = [];
                    @ 222: let preamble$242 = preamble$243 == preamble$152;
                    @ 223: let preamble$244 = if preamble$242 then {
                        @ 387: let preamble$245 = False;
                        @ 388: ifresult preamble$245;

                    } else {
                        @ 224: let preamble$239 = {};
                        @ 225: let preamble$238 = preamble$239 == preamble$152;
                        @ 226: let preamble$240 = if preamble$238 then {
                            @ 385: let preamble$241 = False;
                            @ 386: ifresult preamble$241;

                        } else {
                            @ 227: let preamble$153 = "__bool__";
                            @ 228: let preamble$236 = preamble$141 haskey preamble$153;
                            @ 229: let preamble$237 = if preamble$236 then {
                                @ 322: let &preamble$155 = preamble$141{preamble$153};
                                @ 323: let &preamble$156 = &preamble$155;
                                @ 324: let preamble$158 = get &preamble$156;
                                @ 325: let preamble$160 = "*value";
                                @ 326: let preamble$161 = preamble$158 haskey preamble$160;
                                @ 327: let &preamble$162 = if preamble$161 then {
                                    @ 337: let &preamble$163 = preamble$158{preamble$160};
                                    @ 338: ifresult &preamble$163;

                                } else {
                                    @ 328: let preamble$164 = "Object has no attribute *value";
                                    @ 329: let &preamble$165 = alloc;
                                    @ 330: store &preamble$165 preamble$164;
                                    @ 331: let preamble$166 = "*value";
                                    @ 332: let preamble$167 = {};
                                    @ 333: let preamble$168 = preamble$167{preamble$166 -> &preamble$165};
                                    @ 334: let &preamble$169 = alloc;
                                    @ 335: store &preamble$169 preamble$168;
                                    @ 336: raise &preamble$169;

                                };
                                @ 339: let preamble$159 = get &preamble$162;
                                @ 340: let preamble$170 = isfunc preamble$159;
                                @ 341: let preamble$171 = not preamble$170;
                                @ 342: let &preamble$157 = alloc;
                                @ 343: store &preamble$157 preamble$171;
                                @ 344: while &preamble$157 {
                                    @ 345: let preamble$172 = "__call__";
                                    @ 346: let preamble$173 = preamble$158 haskey preamble$172;
                                    @ 347: let &preamble$174 = if preamble$173 then {
                                        @ 357: let &preamble$175 = preamble$158{preamble$172};
                                        @ 358: ifresult &preamble$175;

                                    } else {
                                        @ 348: let preamble$176 = "Object is not callable";
                                        @ 349: let &preamble$177 = alloc;
                                        @ 350: store &preamble$177 preamble$176;
                                        @ 351: let preamble$178 = "*value";
                                        @ 352: let preamble$179 = {};
                                        @ 353: let preamble$180 = preamble$179{preamble$178 -> &preamble$177};
                                        @ 354: let &preamble$181 = alloc;
                                        @ 355: store &preamble$181 preamble$180;
                                        @ 356: raise &preamble$181;

                                    };
                                    @ 359: let &preamble$156 = &preamble$174;
                                    @ 360: let preamble$158 = get &preamble$156;
                                    @ 361: let preamble$160 = "*value";
                                    @ 362: let preamble$161 = preamble$158 haskey preamble$160;
                                    @ 363: let &preamble$162 = if preamble$161 then {
                                        @ 373: let &preamble$163 = preamble$158{preamble$160};
                                        @ 374: ifresult &preamble$163;

                                    } else {
                                        @ 364: let preamble$164 = "Object has no attribute *value";
                                        @ 365: let &preamble$165 = alloc;
                                        @ 366: store &preamble$165 preamble$164;
                                        @ 367: let preamble$166 = "*value";
                                        @ 368: let preamble$167 = {};
                                        @ 369: let preamble$168 = preamble$167{preamble$166 -> &preamble$165};
                                        @ 370: let &preamble$169 = alloc;
                                        @ 371: store &preamble$169 preamble$168;
                                        @ 372: raise &preamble$169;

                                    };
                                    @ 375: let preamble$159 = get &preamble$162;
                                    @ 376: let preamble$170 = isfunc preamble$159;
                                    @ 377: let preamble$171 = not preamble$170;
                                    @ 378: let &preamble$157 = alloc;
                                    @ 379: store &preamble$157 preamble$171;

                                };
                                @ 380: let preamble$183 = [&preamble$140];
                                @ 381: let &preamble$182 = preamble$159(preamble$183);
                                @ 382: let preamble$184 = get &preamble$182;
                                @ 383: ifresult preamble$184;

                            } else {
                                @ 230: let preamble$154 = "__len__";
                                @ 231: let preamble$234 = preamble$141 haskey preamble$154;
                                @ 232: let preamble$235 = if preamble$234 then {
                                    @ 235: let &preamble$185 = preamble$141{preamble$154};
                                    @ 236: let &preamble$186 = &preamble$185;
                                    @ 237: let preamble$188 = get &preamble$186;
                                    @ 238: let preamble$190 = "*value";
                                    @ 239: let preamble$191 = preamble$188 haskey preamble$190;
                                    @ 240: let &preamble$192 = if preamble$191 then {
                                        @ 250: let &preamble$193 = preamble$188{preamble$190};
                                        @ 251: ifresult &preamble$193;

                                    } else {
                                        @ 241: let preamble$194 = "Object has no attribute *value";
                                        @ 242: let &preamble$195 = alloc;
                                        @ 243: store &preamble$195 preamble$194;
                                        @ 244: let preamble$196 = "*value";
                                        @ 245: let preamble$197 = {};
                                        @ 246: let preamble$198 = preamble$197{preamble$196 -> &preamble$195};
                                        @ 247: let &preamble$199 = alloc;
                                        @ 248: store &preamble$199 preamble$198;
                                        @ 249: raise &preamble$199;

                                    };
                                    @ 252: let preamble$189 = get &preamble$192;
                                    @ 253: let preamble$200 = isfunc preamble$189;
                                    @ 254: let preamble$201 = not preamble$200;
                                    @ 255: let &preamble$187 = alloc;
                                    @ 256: store &preamble$187 preamble$201;
                                    @ 257: while &preamble$187 {
                                        @ 258: let preamble$202 = "__call__";
                                        @ 259: let preamble$203 = preamble$188 haskey preamble$202;
                                        @ 260: let &preamble$204 = if preamble$203 then {
                                            @ 270: let &preamble$205 = preamble$188{preamble$202};
                                            @ 271: ifresult &preamble$205;

                                        } else {
                                            @ 261: let preamble$206 = "Object is not callable";
                                            @ 262: let &preamble$207 = alloc;
                                            @ 263: store &preamble$207 preamble$206;
                                            @ 264: let preamble$208 = "*value";
                                            @ 265: let preamble$209 = {};
                                            @ 266: let preamble$210 = preamble$209{preamble$208 -> &preamble$207};
                                            @ 267: let &preamble$211 = alloc;
                                            @ 268: store &preamble$211 preamble$210;
                                            @ 269: raise &preamble$211;

                                        };
                                        @ 272: let &preamble$186 = &preamble$204;
                                        @ 273: let preamble$188 = get &preamble$186;
                                        @ 274: let preamble$190 = "*value";
                                        @ 275: let preamble$191 = preamble$188 haskey preamble$190;
                                        @ 276: let &preamble$192 = if preamble$191 then {
                                            @ 286: let &preamble$193 = preamble$188{preamble$190};
                                            @ 287: ifresult &preamble$193;

                                        } else {
                                            @ 277: let preamble$194 = "Object has no attribute *value";
                                            @ 278: let &preamble$195 = alloc;
                                            @ 279: store &preamble$195 preamble$194;
                                            @ 280: let preamble$196 = "*value";
                                            @ 281: let preamble$197 = {};
                                            @ 282: let preamble$198 = preamble$197{preamble$196 -> &preamble$195};
                                            @ 283: let &preamble$199 = alloc;
                                            @ 284: store &preamble$199 preamble$198;
                                            @ 285: raise &preamble$199;

                                        };
                                        @ 288: let preamble$189 = get &preamble$192;
                                        @ 289: let preamble$200 = isfunc preamble$189;
                                        @ 290: let preamble$201 = not preamble$200;
                                        @ 291: let &preamble$187 = alloc;
                                        @ 292: store &preamble$187 preamble$201;

                                    };
                                    @ 293: let preamble$213 = [&preamble$140];
                                    @ 294: let &preamble$212 = preamble$189(preamble$213);
                                    @ 295: let preamble$214 = get &preamble$212;
                                    @ 296: let preamble$215 = "*value";
                                    @ 297: let preamble$216 = preamble$214 haskey preamble$215;
                                    @ 298: let &preamble$217 = if preamble$216 then {
                                        @ 308: let &preamble$218 = preamble$214{preamble$215};
                                        @ 309: ifresult &preamble$218;

                                    } else {
                                        @ 299: let preamble$219 = "Object has no attribute *value";
                                        @ 300: let &preamble$220 = alloc;
                                        @ 301: store &preamble$220 preamble$219;
                                        @ 302: let preamble$221 = "*value";
                                        @ 303: let preamble$222 = {};
                                        @ 304: let preamble$223 = preamble$222{preamble$221 -> &preamble$220};
                                        @ 305: let &preamble$224 = alloc;
                                        @ 306: store &preamble$224 preamble$223;
                                        @ 307: raise &preamble$224;

                                    };
                                    @ 310: let preamble$225 = get &preamble$217;
                                    @ 311: let preamble$227 = isint preamble$225;
                                    @ 312: let preamble$226 = if preamble$227 then {
                                        @ 313: let preamble$230 = 0;
                                        @ 314: let preamble$229 = preamble$230 == preamble$225;
                                        @ 315: let preamble$231 = if preamble$229 then {
                                            @ 318: let preamble$232 = False;
                                            @ 319: ifresult preamble$232;

                                        } else {
                                            @ 316: let preamble$228 = True;
                                            @ 317: ifresult preamble$228;

                                        };

                                    } else {

                                    };
                                    @ 320: ifresult preamble$226;

                                } else {
                                    @ 233: let preamble$233 = True;
                                    @ 234: ifresult preamble$233;

                                };
                                @ 321: ifresult preamble$235;

                            };
                            @ 384: ifresult preamble$237;

                        };

                    };

                };

            };

        };

    };
    @ 397: ifresult preamble$260;
    @ 398: let &preamble$262 = if preamble$260 then {
        @ 400: ifresult &True;

    } else {
        @ 399: ifresult &False;

    };
    @ 401: return &preamble$262;

};
@ 402: let &preamble$264 = alloc;
@ 403: store &preamble$264 preamble$263;
@ 404: let preamble$265 = "*value";
@ 405: let preamble$266 = {};
@ 406: let preamble$267 = preamble$266{preamble$265 -> &preamble$264};
@ 407: let &preamble$268 = alloc;
@ 408: store &preamble$268 preamble$267;
@ 409: let &bool = &preamble$268;
@ 410: let &int_add = alloc;
@ 411: let preamble$304 = def (preamble$269) {
    @ 412: let preamble$270 = 0;
    @ 413: let &preamble$271 = preamble$269[preamble$270];
    @ 414: let preamble$272 = get &preamble$271;
    @ 415: let preamble$273 = "*value";
    @ 416: let preamble$274 = preamble$272 haskey preamble$273;
    @ 417: let &preamble$275 = if preamble$274 then {
        @ 427: let &preamble$276 = preamble$272{preamble$273};
        @ 428: ifresult &preamble$276;

    } else {
        @ 418: let preamble$277 = "Object has no attribute *value";
        @ 419: let &preamble$278 = alloc;
        @ 420: store &preamble$278 preamble$277;
        @ 421: let preamble$279 = "*value";
        @ 422: let preamble$280 = {};
        @ 423: let preamble$281 = preamble$280{preamble$279 -> &preamble$278};
        @ 424: let &preamble$282 = alloc;
        @ 425: store &preamble$282 preamble$281;
        @ 426: raise &preamble$282;

    };
    @ 429: let preamble$283 = get &preamble$275;
    @ 430: let preamble$284 = 1;
    @ 431: let &preamble$285 = preamble$269[preamble$284];
    @ 432: let preamble$286 = get &preamble$285;
    @ 433: let preamble$287 = "*value";
    @ 434: let preamble$288 = preamble$286 haskey preamble$287;
    @ 435: let &preamble$289 = if preamble$288 then {
        @ 445: let &preamble$290 = preamble$286{preamble$287};
        @ 446: ifresult &preamble$290;

    } else {
        @ 436: let preamble$291 = "Object has no attribute *value";
        @ 437: let &preamble$292 = alloc;
        @ 438: store &preamble$292 preamble$291;
        @ 439: let preamble$293 = "*value";
        @ 440: let preamble$294 = {};
        @ 441: let preamble$295 = preamble$294{preamble$293 -> &preamble$292};
        @ 442: let &preamble$296 = alloc;
        @ 443: store &preamble$296 preamble$295;
        @ 444: raise &preamble$296;

    };
    @ 447: let preamble$297 = get &preamble$289;
    @ 448: let preamble$298 = preamble$283 int+ preamble$297;
    @ 449: let &preamble$299 = alloc;
    @ 450: store &preamble$299 preamble$298;
    @ 451: let preamble$300 = "*value";
    @ 452: let preamble$301 = {};
    @ 453: let preamble$302 = preamble$301{preamble$300 -> &preamble$299};
    @ 454: let &preamble$303 = alloc;
    @ 455: store &preamble$303 preamble$302;
    @ 456: return &preamble$303;

};
@ 457: store &int_add preamble$304;
@ 458: let &method_call = alloc;
@ 459: let preamble$335 = def (preamble$305) {
    @ 460: let preamble$306 = 0;
    @ 461: let &preamble$307 = preamble$305[preamble$306];
    @ 462: let preamble$308 = get &preamble$307;
    @ 463: let preamble$309 = "*value";
    @ 464: let preamble$310 = preamble$308 haskey preamble$309;
    @ 465: let &preamble$311 = if preamble$310 then {
        @ 475: let &preamble$312 = preamble$308{preamble$309};
        @ 476: ifresult &preamble$312;

    } else {
        @ 466: let preamble$313 = "Object has no attribute *value";
        @ 467: let &preamble$314 = alloc;
        @ 468: store &preamble$314 preamble$313;
        @ 469: let preamble$315 = "*value";
        @ 470: let preamble$316 = {};
        @ 471: let preamble$317 = preamble$316{preamble$315 -> &preamble$314};
        @ 472: let &preamble$318 = alloc;
        @ 473: store &preamble$318 preamble$317;
        @ 474: raise &preamble$318;

    };
    @ 477: let preamble$319 = get &preamble$311;
    @ 478: let preamble$320 = "*value";
    @ 479: let preamble$321 = preamble$319 haskey preamble$320;
    @ 480: let &preamble$322 = if preamble$321 then {
        @ 490: let &preamble$323 = preamble$319{preamble$320};
        @ 491: ifresult &preamble$323;

    } else {
        @ 481: let preamble$324 = "Object has no attribute *value";
        @ 482: let &preamble$325 = alloc;
        @ 483: store &preamble$325 preamble$324;
        @ 484: let preamble$326 = "*value";
        @ 485: let preamble$327 = {};
        @ 486: let preamble$328 = preamble$327{preamble$326 -> &preamble$325};
        @ 487: let &preamble$329 = alloc;
        @ 488: store &preamble$329 preamble$328;
        @ 489: raise &preamble$329;

    };
    @ 492: let preamble$330 = get &preamble$322;
    @ 493: let preamble$331 = 1;
    @ 494: let preamble$332 = None;
    @ 495: let preamble$333 = preamble$305[preamble$331:preamble$332];
    @ 496: let &preamble$334 = preamble$330(preamble$333);
    @ 497: return &preamble$334;

};
@ 498: store &method_call preamble$335;
@ 499: let preamble$336 = "True";
@ 500: let preamble$337 = get &scope;
@ 501: let preamble$338 = preamble$337{preamble$336 -> &True};
@ 502: store &scope preamble$338;
@ 503: let preamble$339 = "False";
@ 504: let preamble$340 = get &scope;
@ 505: let preamble$341 = preamble$340{preamble$339 -> &False};
@ 506: store &scope preamble$341;
@ 507: let preamble$342 = "NotImplemented";
@ 508: let preamble$343 = get &scope;
@ 509: let preamble$344 = preamble$343{preamble$342 -> &NotImplemented};
@ 510: store &scope preamble$344;
@ 511: let preamble$345 = "*None";
@ 512: let preamble$346 = get &scope;
@ 513: let preamble$347 = preamble$346{preamble$345 -> &None};
@ 514: store &scope preamble$347;
@ 515: let preamble$348 = "bool";
@ 516: let preamble$349 = get &scope;
@ 517: let preamble$350 = preamble$349{preamble$348 -> &bool};
@ 518: store &scope preamble$350;
@ 519: let preamble$351 = "NameError";
@ 520: let preamble$352 = get &scope;
@ 521: let preamble$353 = preamble$352{preamble$351 -> &NameError};
@ 522: store &scope preamble$353;
@ 523: let preamble$354 = "TypeError";
@ 524: let preamble$355 = get &scope;
@ 525: let preamble$356 = preamble$355{preamble$354 -> &TypeError};
@ 526: store &scope preamble$356;
@ 527: let preamble$357 = "AttributeError";
@ 528: let preamble$358 = get &scope;
@ 529: let preamble$359 = preamble$358{preamble$357 -> &AttributeError};
@ 530: store &scope preamble$359;
@ 531: let preamble$360 = "ValueError";
@ 532: let preamble$361 = get &scope;
@ 533: let preamble$362 = preamble$361{preamble$360 -> &ValueError};
@ 534: store &scope preamble$362;
@ 535: let preamble$363 = "StopIteration";
@ 536: let preamble$364 = get &scope;
@ 537: let preamble$365 = preamble$364{preamble$363 -> &StopIteration};
@ 538: store &scope preamble$365;
@ 539: let lamia$442 = def (lamia$0) {
    @ 540: let get_from_parent_scope = get_from_scope;
    @ 541: let &scope = alloc;
    @ 542: let get_from_scope = def (lamia$2) {
        @ 543: let lamia$3 = get &scope;
        @ 544: let lamia$4 = lamia$3 haskey lamia$2;
        @ 545: let &lamia$5 = if lamia$4 then {
            @ 548: let &lamia$6 = lamia$3{lamia$2};
            @ 549: ifresult &lamia$6;

        } else {
            @ 546: let &lamia$7 = get_from_parent_scope(lamia$2);
            @ 547: ifresult &lamia$7;

        };
        @ 550: return &lamia$5;

    };
    @ 551: let lamia$1 = {};
    @ 552: let lamia$10 = 0;
    @ 553: let &lamia$11 = lamia$0[lamia$10];
    @ 554: let lamia$9 = "factorial$1_n";
    @ 555: let lamia$8 = lamia$1{lamia$9 -> &lamia$11};
    @ 556: store &scope lamia$8;
    @ 557: let lamia$12 = "$norm1";
    @ 558: let lamia$13 = get &scope;
    @ 559: let lamia$14 = lamia$13{lamia$12 -> &bool};
    @ 560: store &scope lamia$14;
    @ 561: let lamia$15 = "factorial$1_n";
    @ 562: let &lamia$16 = get_from_scope(lamia$15);
    @ 563: let lamia$17 = get &lamia$16;
    @ 564: let lamia$18 = "__eq__";
    @ 565: let lamia$19 = lamia$17 haskey lamia$18;
    @ 566: let &lamia$20 = if lamia$19 then {
        @ 576: let &lamia$21 = lamia$17{lamia$18};
        @ 577: ifresult &lamia$21;

    } else {
        @ 567: let lamia$22 = "Object has no attribute __eq__";
        @ 568: let &lamia$23 = alloc;
        @ 569: store &lamia$23 lamia$22;
        @ 570: let lamia$24 = "*value";
        @ 571: let lamia$25 = {};
        @ 572: let lamia$26 = lamia$25{lamia$24 -> &lamia$23};
        @ 573: let &lamia$27 = alloc;
        @ 574: store &lamia$27 lamia$26;
        @ 575: raise &lamia$27;

    };
    @ 578: let lamia$28 = get &lamia$20;
    @ 579: let lamia$29 = isfunc lamia$28;
    @ 580: let &lamia$30 = if lamia$29 then {
        @ 582: let lamia$31 = def (lamia$32) {
            @ 583: let lamia$33 = [&lamia$16];
            @ 584: let lamia$34 = lamia$33 || lamia$32;
            @ 585: let &lamia$35 = lamia$28(lamia$34);
            @ 586: return &lamia$35;

        };
        @ 587: let &lamia$36 = alloc;
        @ 588: store &lamia$36 lamia$31;
        @ 589: let lamia$37 = "*value";
        @ 590: let lamia$38 = {};
        @ 591: let lamia$39 = lamia$38{lamia$37 -> &lamia$36};
        @ 592: let &lamia$40 = alloc;
        @ 593: store &lamia$40 lamia$39;
        @ 594: ifresult &lamia$40;

    } else {
        @ 581: ifresult &lamia$20;

    };
    @ 595: let lamia$41 = "$norm2";
    @ 596: let lamia$42 = get &scope;
    @ 597: let lamia$43 = lamia$42{lamia$41 -> &lamia$30};
    @ 598: store &scope lamia$43;
    @ 599: let lamia$44 = 0;
    @ 600: let &lamia$45 = alloc;
    @ 601: store &lamia$45 lamia$44;
    @ 602: let lamia$46 = "*value";
    @ 603: let lamia$47 = {};
    @ 604: let lamia$48 = lamia$47{lamia$46 -> &lamia$45};
    @ 605: let &lamia$49 = alloc;
    @ 606: store &lamia$49 lamia$48;
    @ 607: let lamia$50 = "$norm3";
    @ 608: let lamia$51 = get &scope;
    @ 609: let lamia$52 = lamia$51{lamia$50 -> &lamia$49};
    @ 610: store &scope lamia$52;
    @ 611: let lamia$53 = "$norm2";
    @ 612: let &lamia$54 = get_from_scope(lamia$53);
    @ 613: let lamia$55 = "$norm3";
    @ 614: let &lamia$56 = get_from_scope(lamia$55);
    @ 615: let &lamia$57 = &lamia$54;
    @ 616: let lamia$59 = get &lamia$57;
    @ 617: let lamia$61 = "*value";
    @ 618: let lamia$62 = lamia$59 haskey lamia$61;
    @ 619: let &lamia$63 = if lamia$62 then {
        @ 629: let &lamia$64 = lamia$59{lamia$61};
        @ 630: ifresult &lamia$64;

    } else {
        @ 620: let lamia$65 = "Object has no attribute *value";
        @ 621: let &lamia$66 = alloc;
        @ 622: store &lamia$66 lamia$65;
        @ 623: let lamia$67 = "*value";
        @ 624: let lamia$68 = {};
        @ 625: let lamia$69 = lamia$68{lamia$67 -> &lamia$66};
        @ 626: let &lamia$70 = alloc;
        @ 627: store &lamia$70 lamia$69;
        @ 628: raise &lamia$70;

    };
    @ 631: let lamia$60 = get &lamia$63;
    @ 632: let lamia$71 = isfunc lamia$60;
    @ 633: let lamia$72 = not lamia$71;
    @ 634: let &lamia$58 = alloc;
    @ 635: store &lamia$58 lamia$72;
    @ 636: while &lamia$58 {
        @ 637: let lamia$73 = "__call__";
        @ 638: let lamia$74 = lamia$59 haskey lamia$73;
        @ 639: let &lamia$75 = if lamia$74 then {
            @ 649: let &lamia$76 = lamia$59{lamia$73};
            @ 650: ifresult &lamia$76;

        } else {
            @ 640: let lamia$77 = "Object is not callable";
            @ 641: let &lamia$78 = alloc;
            @ 642: store &lamia$78 lamia$77;
            @ 643: let lamia$79 = "*value";
            @ 644: let lamia$80 = {};
            @ 645: let lamia$81 = lamia$80{lamia$79 -> &lamia$78};
            @ 646: let &lamia$82 = alloc;
            @ 647: store &lamia$82 lamia$81;
            @ 648: raise &lamia$82;

        };
        @ 651: let &lamia$57 = &lamia$75;
        @ 652: let lamia$59 = get &lamia$57;
        @ 653: let lamia$61 = "*value";
        @ 654: let lamia$62 = lamia$59 haskey lamia$61;
        @ 655: let &lamia$63 = if lamia$62 then {
            @ 665: let &lamia$64 = lamia$59{lamia$61};
            @ 666: ifresult &lamia$64;

        } else {
            @ 656: let lamia$65 = "Object has no attribute *value";
            @ 657: let &lamia$66 = alloc;
            @ 658: store &lamia$66 lamia$65;
            @ 659: let lamia$67 = "*value";
            @ 660: let lamia$68 = {};
            @ 661: let lamia$69 = lamia$68{lamia$67 -> &lamia$66};
            @ 662: let &lamia$70 = alloc;
            @ 663: store &lamia$70 lamia$69;
            @ 664: raise &lamia$70;

        };
        @ 667: let lamia$60 = get &lamia$63;
        @ 668: let lamia$71 = isfunc lamia$60;
        @ 669: let lamia$72 = not lamia$71;
        @ 670: let &lamia$58 = alloc;
        @ 671: store &lamia$58 lamia$72;

    };
    @ 672: let lamia$83 = [&lamia$56];
    @ 673: let &lamia$84 = lamia$60(lamia$83);
    @ 674: let lamia$85 = "$norm4";
    @ 675: let lamia$86 = get &scope;
    @ 676: let lamia$87 = lamia$86{lamia$85 -> &lamia$84};
    @ 677: store &scope lamia$87;
    @ 678: let lamia$88 = "$norm1";
    @ 679: let &lamia$89 = get_from_scope(lamia$88);
    @ 680: let lamia$90 = "$norm4";
    @ 681: let &lamia$91 = get_from_scope(lamia$90);
    @ 682: let &lamia$92 = &lamia$89;
    @ 683: let lamia$94 = get &lamia$92;
    @ 684: let lamia$96 = "*value";
    @ 685: let lamia$97 = lamia$94 haskey lamia$96;
    @ 686: let &lamia$98 = if lamia$97 then {
        @ 696: let &lamia$99 = lamia$94{lamia$96};
        @ 697: ifresult &lamia$99;

    } else {
        @ 687: let lamia$100 = "Object has no attribute *value";
        @ 688: let &lamia$101 = alloc;
        @ 689: store &lamia$101 lamia$100;
        @ 690: let lamia$102 = "*value";
        @ 691: let lamia$103 = {};
        @ 692: let lamia$104 = lamia$103{lamia$102 -> &lamia$101};
        @ 693: let &lamia$105 = alloc;
        @ 694: store &lamia$105 lamia$104;
        @ 695: raise &lamia$105;

    };
    @ 698: let lamia$95 = get &lamia$98;
    @ 699: let lamia$106 = isfunc lamia$95;
    @ 700: let lamia$107 = not lamia$106;
    @ 701: let &lamia$93 = alloc;
    @ 702: store &lamia$93 lamia$107;
    @ 703: while &lamia$93 {
        @ 704: let lamia$108 = "__call__";
        @ 705: let lamia$109 = lamia$94 haskey lamia$108;
        @ 706: let &lamia$110 = if lamia$109 then {
            @ 716: let &lamia$111 = lamia$94{lamia$108};
            @ 717: ifresult &lamia$111;

        } else {
            @ 707: let lamia$112 = "Object is not callable";
            @ 708: let &lamia$113 = alloc;
            @ 709: store &lamia$113 lamia$112;
            @ 710: let lamia$114 = "*value";
            @ 711: let lamia$115 = {};
            @ 712: let lamia$116 = lamia$115{lamia$114 -> &lamia$113};
            @ 713: let &lamia$117 = alloc;
            @ 714: store &lamia$117 lamia$116;
            @ 715: raise &lamia$117;

        };
        @ 718: let &lamia$92 = &lamia$110;
        @ 719: let lamia$94 = get &lamia$92;
        @ 720: let lamia$96 = "*value";
        @ 721: let lamia$97 = lamia$94 haskey lamia$96;
        @ 722: let &lamia$98 = if lamia$97 then {
            @ 732: let &lamia$99 = lamia$94{lamia$96};
            @ 733: ifresult &lamia$99;

        } else {
            @ 723: let lamia$100 = "Object has no attribute *value";
            @ 724: let &lamia$101 = alloc;
            @ 725: store &lamia$101 lamia$100;
            @ 726: let lamia$102 = "*value";
            @ 727: let lamia$103 = {};
            @ 728: let lamia$104 = lamia$103{lamia$102 -> &lamia$101};
            @ 729: let &lamia$105 = alloc;
            @ 730: store &lamia$105 lamia$104;
            @ 731: raise &lamia$105;

        };
        @ 734: let lamia$95 = get &lamia$98;
        @ 735: let lamia$106 = isfunc lamia$95;
        @ 736: let lamia$107 = not lamia$106;
        @ 737: let &lamia$93 = alloc;
        @ 738: store &lamia$93 lamia$107;

    };
    @ 739: let lamia$118 = [&lamia$91];
    @ 740: let &lamia$119 = lamia$95(lamia$118);
    @ 741: let lamia$120 = "$norm5";
    @ 742: let lamia$121 = get &scope;
    @ 743: let lamia$122 = lamia$121{lamia$120 -> &lamia$119};
    @ 744: store &scope lamia$122;
    @ 745: let lamia$123 = "$norm5";
    @ 746: let &lamia$124 = get_from_scope(lamia$123);
    @ 747: let lamia$125 = &lamia$124 is &True;
    @ 748: let lamia$441 = if lamia$125 then {
        @1254: let lamia$126 = 1;
        @1255: let &lamia$127 = alloc;
        @1256: store &lamia$127 lamia$126;
        @1257: let lamia$128 = "*value";
        @1258: let lamia$129 = {};
        @1259: let lamia$130 = lamia$129{lamia$128 -> &lamia$127};
        @1260: let &lamia$131 = alloc;
        @1261: store &lamia$131 lamia$130;
        @1262: let lamia$132 = "$norm18";
        @1263: let lamia$133 = get &scope;
        @1264: let lamia$134 = lamia$133{lamia$132 -> &lamia$131};
        @1265: store &scope lamia$134;
        @1266: let lamia$135 = "$norm18";
        @1267: let &lamia$136 = get_from_scope(lamia$135);
        @1268: return &lamia$136;
        @1269: let lamia$137 = None;
        @1270: ifresult lamia$137;

    } else {
        @ 749: let lamia$138 = "$norm6";
        @ 750: let lamia$139 = get &scope;
        @ 751: let lamia$140 = lamia$139{lamia$138 -> &bool};
        @ 752: store &scope lamia$140;
        @ 753: let lamia$141 = "n";
        @ 754: let &lamia$142 = get_from_scope(lamia$141);
        @ 755: let lamia$143 = get &lamia$142;
        @ 756: let lamia$144 = "__eq__";
        @ 757: let lamia$145 = lamia$143 haskey lamia$144;
        @ 758: let &lamia$146 = if lamia$145 then {
            @ 768: let &lamia$147 = lamia$143{lamia$144};
            @ 769: ifresult &lamia$147;

        } else {
            @ 759: let lamia$148 = "Object has no attribute __eq__";
            @ 760: let &lamia$149 = alloc;
            @ 761: store &lamia$149 lamia$148;
            @ 762: let lamia$150 = "*value";
            @ 763: let lamia$151 = {};
            @ 764: let lamia$152 = lamia$151{lamia$150 -> &lamia$149};
            @ 765: let &lamia$153 = alloc;
            @ 766: store &lamia$153 lamia$152;
            @ 767: raise &lamia$153;

        };
        @ 770: let lamia$154 = get &lamia$146;
        @ 771: let lamia$155 = isfunc lamia$154;
        @ 772: let &lamia$156 = if lamia$155 then {
            @ 774: let lamia$157 = def (lamia$158) {
                @ 775: let lamia$159 = [&lamia$142];
                @ 776: let lamia$160 = lamia$159 || lamia$158;
                @ 777: let &lamia$161 = lamia$154(lamia$160);
                @ 778: return &lamia$161;

            };
            @ 779: let &lamia$162 = alloc;
            @ 780: store &lamia$162 lamia$157;
            @ 781: let lamia$163 = "*value";
            @ 782: let lamia$164 = {};
            @ 783: let lamia$165 = lamia$164{lamia$163 -> &lamia$162};
            @ 784: let &lamia$166 = alloc;
            @ 785: store &lamia$166 lamia$165;
            @ 786: ifresult &lamia$166;

        } else {
            @ 773: ifresult &lamia$146;

        };
        @ 787: let lamia$167 = "$norm7";
        @ 788: let lamia$168 = get &scope;
        @ 789: let lamia$169 = lamia$168{lamia$167 -> &lamia$156};
        @ 790: store &scope lamia$169;
        @ 791: let lamia$170 = 1;
        @ 792: let &lamia$171 = alloc;
        @ 793: store &lamia$171 lamia$170;
        @ 794: let lamia$172 = "*value";
        @ 795: let lamia$173 = {};
        @ 796: let lamia$174 = lamia$173{lamia$172 -> &lamia$171};
        @ 797: let &lamia$175 = alloc;
        @ 798: store &lamia$175 lamia$174;
        @ 799: let lamia$176 = "$norm8";
        @ 800: let lamia$177 = get &scope;
        @ 801: let lamia$178 = lamia$177{lamia$176 -> &lamia$175};
        @ 802: store &scope lamia$178;
        @ 803: let lamia$179 = "$norm7";
        @ 804: let &lamia$180 = get_from_scope(lamia$179);
        @ 805: let lamia$181 = "$norm8";
        @ 806: let &lamia$182 = get_from_scope(lamia$181);
        @ 807: let &lamia$183 = &lamia$180;
        @ 808: let lamia$185 = get &lamia$183;
        @ 809: let lamia$187 = "*value";
        @ 810: let lamia$188 = lamia$185 haskey lamia$187;
        @ 811: let &lamia$189 = if lamia$188 then {
            @ 821: let &lamia$190 = lamia$185{lamia$187};
            @ 822: ifresult &lamia$190;

        } else {
            @ 812: let lamia$191 = "Object has no attribute *value";
            @ 813: let &lamia$192 = alloc;
            @ 814: store &lamia$192 lamia$191;
            @ 815: let lamia$193 = "*value";
            @ 816: let lamia$194 = {};
            @ 817: let lamia$195 = lamia$194{lamia$193 -> &lamia$192};
            @ 818: let &lamia$196 = alloc;
            @ 819: store &lamia$196 lamia$195;
            @ 820: raise &lamia$196;

        };
        @ 823: let lamia$186 = get &lamia$189;
        @ 824: let lamia$197 = isfunc lamia$186;
        @ 825: let lamia$198 = not lamia$197;
        @ 826: let &lamia$184 = alloc;
        @ 827: store &lamia$184 lamia$198;
        @ 828: while &lamia$184 {
            @ 829: let lamia$199 = "__call__";
            @ 830: let lamia$200 = lamia$185 haskey lamia$199;
            @ 831: let &lamia$201 = if lamia$200 then {
                @ 841: let &lamia$202 = lamia$185{lamia$199};
                @ 842: ifresult &lamia$202;

            } else {
                @ 832: let lamia$203 = "Object is not callable";
                @ 833: let &lamia$204 = alloc;
                @ 834: store &lamia$204 lamia$203;
                @ 835: let lamia$205 = "*value";
                @ 836: let lamia$206 = {};
                @ 837: let lamia$207 = lamia$206{lamia$205 -> &lamia$204};
                @ 838: let &lamia$208 = alloc;
                @ 839: store &lamia$208 lamia$207;
                @ 840: raise &lamia$208;

            };
            @ 843: let &lamia$183 = &lamia$201;
            @ 844: let lamia$185 = get &lamia$183;
            @ 845: let lamia$187 = "*value";
            @ 846: let lamia$188 = lamia$185 haskey lamia$187;
            @ 847: let &lamia$189 = if lamia$188 then {
                @ 857: let &lamia$190 = lamia$185{lamia$187};
                @ 858: ifresult &lamia$190;

            } else {
                @ 848: let lamia$191 = "Object has no attribute *value";
                @ 849: let &lamia$192 = alloc;
                @ 850: store &lamia$192 lamia$191;
                @ 851: let lamia$193 = "*value";
                @ 852: let lamia$194 = {};
                @ 853: let lamia$195 = lamia$194{lamia$193 -> &lamia$192};
                @ 854: let &lamia$196 = alloc;
                @ 855: store &lamia$196 lamia$195;
                @ 856: raise &lamia$196;

            };
            @ 859: let lamia$186 = get &lamia$189;
            @ 860: let lamia$197 = isfunc lamia$186;
            @ 861: let lamia$198 = not lamia$197;
            @ 862: let &lamia$184 = alloc;
            @ 863: store &lamia$184 lamia$198;

        };
        @ 864: let lamia$209 = [&lamia$182];
        @ 865: let &lamia$210 = lamia$186(lamia$209);
        @ 866: let lamia$211 = "$norm9";
        @ 867: let lamia$212 = get &scope;
        @ 868: let lamia$213 = lamia$212{lamia$211 -> &lamia$210};
        @ 869: store &scope lamia$213;
        @ 870: let lamia$214 = "$norm6";
        @ 871: let &lamia$215 = get_from_scope(lamia$214);
        @ 872: let lamia$216 = "$norm9";
        @ 873: let &lamia$217 = get_from_scope(lamia$216);
        @ 874: let &lamia$218 = &lamia$215;
        @ 875: let lamia$220 = get &lamia$218;
        @ 876: let lamia$222 = "*value";
        @ 877: let lamia$223 = lamia$220 haskey lamia$222;
        @ 878: let &lamia$224 = if lamia$223 then {
            @ 888: let &lamia$225 = lamia$220{lamia$222};
            @ 889: ifresult &lamia$225;

        } else {
            @ 879: let lamia$226 = "Object has no attribute *value";
            @ 880: let &lamia$227 = alloc;
            @ 881: store &lamia$227 lamia$226;
            @ 882: let lamia$228 = "*value";
            @ 883: let lamia$229 = {};
            @ 884: let lamia$230 = lamia$229{lamia$228 -> &lamia$227};
            @ 885: let &lamia$231 = alloc;
            @ 886: store &lamia$231 lamia$230;
            @ 887: raise &lamia$231;

        };
        @ 890: let lamia$221 = get &lamia$224;
        @ 891: let lamia$232 = isfunc lamia$221;
        @ 892: let lamia$233 = not lamia$232;
        @ 893: let &lamia$219 = alloc;
        @ 894: store &lamia$219 lamia$233;
        @ 895: while &lamia$219 {
            @ 896: let lamia$234 = "__call__";
            @ 897: let lamia$235 = lamia$220 haskey lamia$234;
            @ 898: let &lamia$236 = if lamia$235 then {
                @ 908: let &lamia$237 = lamia$220{lamia$234};
                @ 909: ifresult &lamia$237;

            } else {
                @ 899: let lamia$238 = "Object is not callable";
                @ 900: let &lamia$239 = alloc;
                @ 901: store &lamia$239 lamia$238;
                @ 902: let lamia$240 = "*value";
                @ 903: let lamia$241 = {};
                @ 904: let lamia$242 = lamia$241{lamia$240 -> &lamia$239};
                @ 905: let &lamia$243 = alloc;
                @ 906: store &lamia$243 lamia$242;
                @ 907: raise &lamia$243;

            };
            @ 910: let &lamia$218 = &lamia$236;
            @ 911: let lamia$220 = get &lamia$218;
            @ 912: let lamia$222 = "*value";
            @ 913: let lamia$223 = lamia$220 haskey lamia$222;
            @ 914: let &lamia$224 = if lamia$223 then {
                @ 924: let &lamia$225 = lamia$220{lamia$222};
                @ 925: ifresult &lamia$225;

            } else {
                @ 915: let lamia$226 = "Object has no attribute *value";
                @ 916: let &lamia$227 = alloc;
                @ 917: store &lamia$227 lamia$226;
                @ 918: let lamia$228 = "*value";
                @ 919: let lamia$229 = {};
                @ 920: let lamia$230 = lamia$229{lamia$228 -> &lamia$227};
                @ 921: let &lamia$231 = alloc;
                @ 922: store &lamia$231 lamia$230;
                @ 923: raise &lamia$231;

            };
            @ 926: let lamia$221 = get &lamia$224;
            @ 927: let lamia$232 = isfunc lamia$221;
            @ 928: let lamia$233 = not lamia$232;
            @ 929: let &lamia$219 = alloc;
            @ 930: store &lamia$219 lamia$233;

        };
        @ 931: let lamia$244 = [&lamia$217];
        @ 932: let &lamia$245 = lamia$221(lamia$244);
        @ 933: let lamia$246 = "$norm10";
        @ 934: let lamia$247 = get &scope;
        @ 935: let lamia$248 = lamia$247{lamia$246 -> &lamia$245};
        @ 936: store &scope lamia$248;
        @ 937: let lamia$249 = "$norm10";
        @ 938: let &lamia$250 = get_from_scope(lamia$249);
        @ 939: let lamia$251 = &lamia$250 is &True;
        @ 940: let lamia$439 = if lamia$251 then {
            @1235: let lamia$252 = 1;
            @1236: let &lamia$253 = alloc;
            @1237: store &lamia$253 lamia$252;
            @1238: let lamia$254 = "*value";
            @1239: let lamia$255 = {};
            @1240: let lamia$256 = lamia$255{lamia$254 -> &lamia$253};
            @1241: let &lamia$257 = alloc;
            @1242: store &lamia$257 lamia$256;
            @1243: let lamia$258 = "$norm17";
            @1244: let lamia$259 = get &scope;
            @1245: let lamia$260 = lamia$259{lamia$258 -> &lamia$257};
            @1246: store &scope lamia$260;
            @1247: let lamia$261 = "$norm17";
            @1248: let &lamia$262 = get_from_scope(lamia$261);
            @1249: return &lamia$262;
            @1250: let lamia$263 = None;
            @1251: ifresult lamia$263;

        } else {
            @ 941: let lamia$264 = "n";
            @ 942: let &lamia$265 = get_from_scope(lamia$264);
            @ 943: let lamia$266 = get &lamia$265;
            @ 944: let lamia$267 = "__mul__";
            @ 945: let lamia$268 = lamia$266 haskey lamia$267;
            @ 946: let &lamia$269 = if lamia$268 then {
                @ 956: let &lamia$270 = lamia$266{lamia$267};
                @ 957: ifresult &lamia$270;

            } else {
                @ 947: let lamia$271 = "Object has no attribute __mul__";
                @ 948: let &lamia$272 = alloc;
                @ 949: store &lamia$272 lamia$271;
                @ 950: let lamia$273 = "*value";
                @ 951: let lamia$274 = {};
                @ 952: let lamia$275 = lamia$274{lamia$273 -> &lamia$272};
                @ 953: let &lamia$276 = alloc;
                @ 954: store &lamia$276 lamia$275;
                @ 955: raise &lamia$276;

            };
            @ 958: let lamia$277 = get &lamia$269;
            @ 959: let lamia$278 = isfunc lamia$277;
            @ 960: let &lamia$279 = if lamia$278 then {
                @ 962: let lamia$280 = def (lamia$281) {
                    @ 963: let lamia$282 = [&lamia$265];
                    @ 964: let lamia$283 = lamia$282 || lamia$281;
                    @ 965: let &lamia$284 = lamia$277(lamia$283);
                    @ 966: return &lamia$284;

                };
                @ 967: let &lamia$285 = alloc;
                @ 968: store &lamia$285 lamia$280;
                @ 969: let lamia$286 = "*value";
                @ 970: let lamia$287 = {};
                @ 971: let lamia$288 = lamia$287{lamia$286 -> &lamia$285};
                @ 972: let &lamia$289 = alloc;
                @ 973: store &lamia$289 lamia$288;
                @ 974: ifresult &lamia$289;

            } else {
                @ 961: ifresult &lamia$269;

            };
            @ 975: let lamia$290 = "$norm11";
            @ 976: let lamia$291 = get &scope;
            @ 977: let lamia$292 = lamia$291{lamia$290 -> &lamia$279};
            @ 978: store &scope lamia$292;
            @ 979: let lamia$293 = "n";
            @ 980: let &lamia$294 = get_from_scope(lamia$293);
            @ 981: let lamia$295 = get &lamia$294;
            @ 982: let lamia$296 = "__sub__";
            @ 983: let lamia$297 = lamia$295 haskey lamia$296;
            @ 984: let &lamia$298 = if lamia$297 then {
                @ 994: let &lamia$299 = lamia$295{lamia$296};
                @ 995: ifresult &lamia$299;

            } else {
                @ 985: let lamia$300 = "Object has no attribute __sub__";
                @ 986: let &lamia$301 = alloc;
                @ 987: store &lamia$301 lamia$300;
                @ 988: let lamia$302 = "*value";
                @ 989: let lamia$303 = {};
                @ 990: let lamia$304 = lamia$303{lamia$302 -> &lamia$301};
                @ 991: let &lamia$305 = alloc;
                @ 992: store &lamia$305 lamia$304;
                @ 993: raise &lamia$305;

            };
            @ 996: let lamia$306 = get &lamia$298;
            @ 997: let lamia$307 = isfunc lamia$306;
            @ 998: let &lamia$308 = if lamia$307 then {
                @1000: let lamia$309 = def (lamia$310) {
                    @1001: let lamia$311 = [&lamia$294];
                    @1002: let lamia$312 = lamia$311 || lamia$310;
                    @1003: let &lamia$313 = lamia$306(lamia$312);
                    @1004: return &lamia$313;

                };
                @1005: let &lamia$314 = alloc;
                @1006: store &lamia$314 lamia$309;
                @1007: let lamia$315 = "*value";
                @1008: let lamia$316 = {};
                @1009: let lamia$317 = lamia$316{lamia$315 -> &lamia$314};
                @1010: let &lamia$318 = alloc;
                @1011: store &lamia$318 lamia$317;
                @1012: ifresult &lamia$318;

            } else {
                @ 999: ifresult &lamia$298;

            };
            @1013: let lamia$319 = "$norm12";
            @1014: let lamia$320 = get &scope;
            @1015: let lamia$321 = lamia$320{lamia$319 -> &lamia$308};
            @1016: store &scope lamia$321;
            @1017: let lamia$322 = 1;
            @1018: let &lamia$323 = alloc;
            @1019: store &lamia$323 lamia$322;
            @1020: let lamia$324 = "*value";
            @1021: let lamia$325 = {};
            @1022: let lamia$326 = lamia$325{lamia$324 -> &lamia$323};
            @1023: let &lamia$327 = alloc;
            @1024: store &lamia$327 lamia$326;
            @1025: let lamia$328 = "$norm13";
            @1026: let lamia$329 = get &scope;
            @1027: let lamia$330 = lamia$329{lamia$328 -> &lamia$327};
            @1028: store &scope lamia$330;
            @1029: let lamia$331 = "$norm12";
            @1030: let &lamia$332 = get_from_scope(lamia$331);
            @1031: let lamia$333 = "$norm13";
            @1032: let &lamia$334 = get_from_scope(lamia$333);
            @1033: let &lamia$335 = &lamia$332;
            @1034: let lamia$337 = get &lamia$335;
            @1035: let lamia$339 = "*value";
            @1036: let lamia$340 = lamia$337 haskey lamia$339;
            @1037: let &lamia$341 = if lamia$340 then {
                @1047: let &lamia$342 = lamia$337{lamia$339};
                @1048: ifresult &lamia$342;

            } else {
                @1038: let lamia$343 = "Object has no attribute *value";
                @1039: let &lamia$344 = alloc;
                @1040: store &lamia$344 lamia$343;
                @1041: let lamia$345 = "*value";
                @1042: let lamia$346 = {};
                @1043: let lamia$347 = lamia$346{lamia$345 -> &lamia$344};
                @1044: let &lamia$348 = alloc;
                @1045: store &lamia$348 lamia$347;
                @1046: raise &lamia$348;

            };
            @1049: let lamia$338 = get &lamia$341;
            @1050: let lamia$349 = isfunc lamia$338;
            @1051: let lamia$350 = not lamia$349;
            @1052: let &lamia$336 = alloc;
            @1053: store &lamia$336 lamia$350;
            @1054: while &lamia$336 {
                @1055: let lamia$351 = "__call__";
                @1056: let lamia$352 = lamia$337 haskey lamia$351;
                @1057: let &lamia$353 = if lamia$352 then {
                    @1067: let &lamia$354 = lamia$337{lamia$351};
                    @1068: ifresult &lamia$354;

                } else {
                    @1058: let lamia$355 = "Object is not callable";
                    @1059: let &lamia$356 = alloc;
                    @1060: store &lamia$356 lamia$355;
                    @1061: let lamia$357 = "*value";
                    @1062: let lamia$358 = {};
                    @1063: let lamia$359 = lamia$358{lamia$357 -> &lamia$356};
                    @1064: let &lamia$360 = alloc;
                    @1065: store &lamia$360 lamia$359;
                    @1066: raise &lamia$360;

                };
                @1069: let &lamia$335 = &lamia$353;
                @1070: let lamia$337 = get &lamia$335;
                @1071: let lamia$339 = "*value";
                @1072: let lamia$340 = lamia$337 haskey lamia$339;
                @1073: let &lamia$341 = if lamia$340 then {
                    @1083: let &lamia$342 = lamia$337{lamia$339};
                    @1084: ifresult &lamia$342;

                } else {
                    @1074: let lamia$343 = "Object has no attribute *value";
                    @1075: let &lamia$344 = alloc;
                    @1076: store &lamia$344 lamia$343;
                    @1077: let lamia$345 = "*value";
                    @1078: let lamia$346 = {};
                    @1079: let lamia$347 = lamia$346{lamia$345 -> &lamia$344};
                    @1080: let &lamia$348 = alloc;
                    @1081: store &lamia$348 lamia$347;
                    @1082: raise &lamia$348;

                };
                @1085: let lamia$338 = get &lamia$341;
                @1086: let lamia$349 = isfunc lamia$338;
                @1087: let lamia$350 = not lamia$349;
                @1088: let &lamia$336 = alloc;
                @1089: store &lamia$336 lamia$350;

            };
            @1090: let lamia$361 = [&lamia$334];
            @1091: let &lamia$362 = lamia$338(lamia$361);
            @1092: let lamia$363 = "$norm14";
            @1093: let lamia$364 = get &scope;
            @1094: let lamia$365 = lamia$364{lamia$363 -> &lamia$362};
            @1095: store &scope lamia$365;
            @1096: let lamia$366 = "factorial";
            @1097: let &lamia$367 = get_from_scope(lamia$366);
            @1098: let lamia$368 = "$norm14";
            @1099: let &lamia$369 = get_from_scope(lamia$368);
            @1100: let &lamia$370 = &lamia$367;
            @1101: let lamia$372 = get &lamia$370;
            @1102: let lamia$374 = "*value";
            @1103: let lamia$375 = lamia$372 haskey lamia$374;
            @1104: let &lamia$376 = if lamia$375 then {
                @1114: let &lamia$377 = lamia$372{lamia$374};
                @1115: ifresult &lamia$377;

            } else {
                @1105: let lamia$378 = "Object has no attribute *value";
                @1106: let &lamia$379 = alloc;
                @1107: store &lamia$379 lamia$378;
                @1108: let lamia$380 = "*value";
                @1109: let lamia$381 = {};
                @1110: let lamia$382 = lamia$381{lamia$380 -> &lamia$379};
                @1111: let &lamia$383 = alloc;
                @1112: store &lamia$383 lamia$382;
                @1113: raise &lamia$383;

            };
            @1116: let lamia$373 = get &lamia$376;
            @1117: let lamia$384 = isfunc lamia$373;
            @1118: let lamia$385 = not lamia$384;
            @1119: let &lamia$371 = alloc;
            @1120: store &lamia$371 lamia$385;
            @1121: while &lamia$371 {
                @1122: let lamia$386 = "__call__";
                @1123: let lamia$387 = lamia$372 haskey lamia$386;
                @1124: let &lamia$388 = if lamia$387 then {
                    @1134: let &lamia$389 = lamia$372{lamia$386};
                    @1135: ifresult &lamia$389;

                } else {
                    @1125: let lamia$390 = "Object is not callable";
                    @1126: let &lamia$391 = alloc;
                    @1127: store &lamia$391 lamia$390;
                    @1128: let lamia$392 = "*value";
                    @1129: let lamia$393 = {};
                    @1130: let lamia$394 = lamia$393{lamia$392 -> &lamia$391};
                    @1131: let &lamia$395 = alloc;
                    @1132: store &lamia$395 lamia$394;
                    @1133: raise &lamia$395;

                };
                @1136: let &lamia$370 = &lamia$388;
                @1137: let lamia$372 = get &lamia$370;
                @1138: let lamia$374 = "*value";
                @1139: let lamia$375 = lamia$372 haskey lamia$374;
                @1140: let &lamia$376 = if lamia$375 then {
                    @1150: let &lamia$377 = lamia$372{lamia$374};
                    @1151: ifresult &lamia$377;

                } else {
                    @1141: let lamia$378 = "Object has no attribute *value";
                    @1142: let &lamia$379 = alloc;
                    @1143: store &lamia$379 lamia$378;
                    @1144: let lamia$380 = "*value";
                    @1145: let lamia$381 = {};
                    @1146: let lamia$382 = lamia$381{lamia$380 -> &lamia$379};
                    @1147: let &lamia$383 = alloc;
                    @1148: store &lamia$383 lamia$382;
                    @1149: raise &lamia$383;

                };
                @1152: let lamia$373 = get &lamia$376;
                @1153: let lamia$384 = isfunc lamia$373;
                @1154: let lamia$385 = not lamia$384;
                @1155: let &lamia$371 = alloc;
                @1156: store &lamia$371 lamia$385;

            };
            @1157: let lamia$396 = [&lamia$369];
            @1158: let &lamia$397 = lamia$373(lamia$396);
            @1159: let lamia$398 = "$norm15";
            @1160: let lamia$399 = get &scope;
            @1161: let lamia$400 = lamia$399{lamia$398 -> &lamia$397};
            @1162: store &scope lamia$400;
            @1163: let lamia$401 = "$norm11";
            @1164: let &lamia$402 = get_from_scope(lamia$401);
            @1165: let lamia$403 = "$norm15";
            @1166: let &lamia$404 = get_from_scope(lamia$403);
            @1167: let &lamia$405 = &lamia$402;
            @1168: let lamia$407 = get &lamia$405;
            @1169: let lamia$409 = "*value";
            @1170: let lamia$410 = lamia$407 haskey lamia$409;
            @1171: let &lamia$411 = if lamia$410 then {
                @1181: let &lamia$412 = lamia$407{lamia$409};
                @1182: ifresult &lamia$412;

            } else {
                @1172: let lamia$413 = "Object has no attribute *value";
                @1173: let &lamia$414 = alloc;
                @1174: store &lamia$414 lamia$413;
                @1175: let lamia$415 = "*value";
                @1176: let lamia$416 = {};
                @1177: let lamia$417 = lamia$416{lamia$415 -> &lamia$414};
                @1178: let &lamia$418 = alloc;
                @1179: store &lamia$418 lamia$417;
                @1180: raise &lamia$418;

            };
            @1183: let lamia$408 = get &lamia$411;
            @1184: let lamia$419 = isfunc lamia$408;
            @1185: let lamia$420 = not lamia$419;
            @1186: let &lamia$406 = alloc;
            @1187: store &lamia$406 lamia$420;
            @1188: while &lamia$406 {
                @1189: let lamia$421 = "__call__";
                @1190: let lamia$422 = lamia$407 haskey lamia$421;
                @1191: let &lamia$423 = if lamia$422 then {
                    @1201: let &lamia$424 = lamia$407{lamia$421};
                    @1202: ifresult &lamia$424;

                } else {
                    @1192: let lamia$425 = "Object is not callable";
                    @1193: let &lamia$426 = alloc;
                    @1194: store &lamia$426 lamia$425;
                    @1195: let lamia$427 = "*value";
                    @1196: let lamia$428 = {};
                    @1197: let lamia$429 = lamia$428{lamia$427 -> &lamia$426};
                    @1198: let &lamia$430 = alloc;
                    @1199: store &lamia$430 lamia$429;
                    @1200: raise &lamia$430;

                };
                @1203: let &lamia$405 = &lamia$423;
                @1204: let lamia$407 = get &lamia$405;
                @1205: let lamia$409 = "*value";
                @1206: let lamia$410 = lamia$407 haskey lamia$409;
                @1207: let &lamia$411 = if lamia$410 then {
                    @1217: let &lamia$412 = lamia$407{lamia$409};
                    @1218: ifresult &lamia$412;

                } else {
                    @1208: let lamia$413 = "Object has no attribute *value";
                    @1209: let &lamia$414 = alloc;
                    @1210: store &lamia$414 lamia$413;
                    @1211: let lamia$415 = "*value";
                    @1212: let lamia$416 = {};
                    @1213: let lamia$417 = lamia$416{lamia$415 -> &lamia$414};
                    @1214: let &lamia$418 = alloc;
                    @1215: store &lamia$418 lamia$417;
                    @1216: raise &lamia$418;

                };
                @1219: let lamia$408 = get &lamia$411;
                @1220: let lamia$419 = isfunc lamia$408;
                @1221: let lamia$420 = not lamia$419;
                @1222: let &lamia$406 = alloc;
                @1223: store &lamia$406 lamia$420;

            };
            @1224: let lamia$431 = [&lamia$404];
            @1225: let &lamia$432 = lamia$408(lamia$431);
            @1226: let lamia$433 = "$norm16";
            @1227: let lamia$434 = get &scope;
            @1228: let lamia$435 = lamia$434{lamia$433 -> &lamia$432};
            @1229: store &scope lamia$435;
            @1230: let lamia$436 = "$norm16";
            @1231: let &lamia$437 = get_from_scope(lamia$436);
            @1232: return &lamia$437;
            @1233: let lamia$438 = None;
            @1234: ifresult lamia$438;

        };
        @1252: let lamia$440 = None;
        @1253: ifresult lamia$440;

    };

};
@1271: let &lamia$443 = alloc;
@1272: store &lamia$443 lamia$442;
@1273: let lamia$444 = "$norm19";
@1274: let lamia$445 = get &scope;
@1275: let lamia$446 = lamia$445{lamia$444 -> &lamia$443};
@1276: store &scope lamia$446;
@1277: let lamia$447 = "$norm19";
@1278: let &lamia$448 = get_from_scope(lamia$447);
@1279: let lamia$449 = "factorial";
@1280: let lamia$450 = get &scope;
@1281: let lamia$451 = lamia$450{lamia$449 -> &lamia$448};
@1282: store &scope lamia$451;
