@   0: let preamble$0 = {};
@   1: let &scope = alloc;
@   2: store &scope preamble$0;
@   3: let get_from_parent_scope = def (preamble$1) {
    @   4: let preamble$2 = "name is not defined";
    @   5: let &preamble$3 = alloc;
    @   6: store &preamble$3 preamble$2;
    @   7: let preamble$4 = "*value";
    @   8: let preamble$5 = {};
    @   9: let preamble$6 = preamble$5{preamble$4 -> &preamble$3};
    @  10: let &preamble$7 = alloc;
    @  11: store &preamble$7 preamble$6;
    @  12: raise &preamble$7;

};
@  13: let get_from_scope = def (preamble$8) {
    @  14: let preamble$9 = get &scope;
    @  15: let preamble$10 = preamble$9 haskey preamble$8;
    @  16: let &preamble$11 = if preamble$10 then {
        @  19: let &preamble$12 = preamble$9{preamble$8};
        @  20: ifresult &preamble$12;

    } else {
        @  17: let &preamble$13 = get_from_parent_scope(preamble$8);
        @  18: ifresult &preamble$13;

    };
    @  21: return &preamble$11;

};
@  22: let &preamble$15 = alloc;
@  23: let preamble$14 = 1;
@  24: store &preamble$15 preamble$14;
@  25: let preamble$16 = {};
@  26: let preamble$17 = "*value";
@  27: let preamble$18 = preamble$16{preamble$17 -> &preamble$15};
@  28: let &True = alloc;
@  29: store &True preamble$18;
@  30: let &preamble$20 = alloc;
@  31: let preamble$19 = 0;
@  32: store &preamble$20 preamble$19;
@  33: let preamble$21 = {};
@  34: let preamble$22 = "*value";
@  35: let preamble$23 = preamble$21{preamble$22 -> &preamble$20};
@  36: let &False = alloc;
@  37: store &False preamble$23;
@  38: let &preamble$25 = alloc;
@  39: let preamble$24 = None;
@  40: store &preamble$25 preamble$24;
@  41: let preamble$26 = {};
@  42: let preamble$27 = "*value";
@  43: let preamble$28 = preamble$26{preamble$27 -> &preamble$25};
@  44: let &None = alloc;
@  45: store &None preamble$28;
@  46: let preamble$49 = def (preamble$29) {
    @  47: let preamble$30 = 0;
    @  48: let &preamble$31 = preamble$29[preamble$30];
    @  49: let preamble$32 = get &preamble$31;
    @  50: let preamble$33 = "*value";
    @  51: let preamble$34 = preamble$32 haskey preamble$33;
    @  52: let &preamble$35 = if preamble$34 then {
        @  62: let &preamble$36 = preamble$32{preamble$33};
        @  63: ifresult &preamble$36;

    } else {
        @  53: let preamble$37 = "Object has no attribute *value";
        @  54: let &preamble$38 = alloc;
        @  55: store &preamble$38 preamble$37;
        @  56: let preamble$39 = "*value";
        @  57: let preamble$40 = {};
        @  58: let preamble$41 = preamble$40{preamble$39 -> &preamble$38};
        @  59: let &preamble$42 = alloc;
        @  60: store &preamble$42 preamble$41;
        @  61: raise &preamble$42;

    };
    @  64: let preamble$43 = get &preamble$35;
    @  65: let &preamble$44 = alloc;
    @  66: store &preamble$44 preamble$43;
    @  67: let preamble$45 = "*value";
    @  68: let preamble$46 = {};
    @  69: let preamble$47 = preamble$46{preamble$45 -> &preamble$44};
    @  70: let &preamble$48 = alloc;
    @  71: store &preamble$48 preamble$47;

};
@  72: let &preamble$50 = alloc;
@  73: store &preamble$50 preamble$49;
@  74: let preamble$51 = "*value";
@  75: let preamble$52 = {};
@  76: let preamble$53 = preamble$52{preamble$51 -> &preamble$50};
@  77: let &preamble$54 = alloc;
@  78: store &preamble$54 preamble$53;
@  79: let &AttributeError = &preamble$54;
@  80: let preamble$75 = def (preamble$55) {
    @  81: let preamble$56 = 0;
    @  82: let &preamble$57 = preamble$55[preamble$56];
    @  83: let preamble$58 = get &preamble$57;
    @  84: let preamble$59 = "*value";
    @  85: let preamble$60 = preamble$58 haskey preamble$59;
    @  86: let &preamble$61 = if preamble$60 then {
        @  96: let &preamble$62 = preamble$58{preamble$59};
        @  97: ifresult &preamble$62;

    } else {
        @  87: let preamble$63 = "Object has no attribute *value";
        @  88: let &preamble$64 = alloc;
        @  89: store &preamble$64 preamble$63;
        @  90: let preamble$65 = "*value";
        @  91: let preamble$66 = {};
        @  92: let preamble$67 = preamble$66{preamble$65 -> &preamble$64};
        @  93: let &preamble$68 = alloc;
        @  94: store &preamble$68 preamble$67;
        @  95: raise &preamble$68;

    };
    @  98: let preamble$69 = get &preamble$61;
    @  99: let &preamble$70 = alloc;
    @ 100: store &preamble$70 preamble$69;
    @ 101: let preamble$71 = "*value";
    @ 102: let preamble$72 = {};
    @ 103: let preamble$73 = preamble$72{preamble$71 -> &preamble$70};
    @ 104: let &preamble$74 = alloc;
    @ 105: store &preamble$74 preamble$73;

};
@ 106: let &preamble$76 = alloc;
@ 107: store &preamble$76 preamble$75;
@ 108: let preamble$77 = "*value";
@ 109: let preamble$78 = {};
@ 110: let preamble$79 = preamble$78{preamble$77 -> &preamble$76};
@ 111: let &preamble$80 = alloc;
@ 112: store &preamble$80 preamble$79;
@ 113: let &TypeError = &preamble$80;
@ 114: let preamble$101 = def (preamble$81) {
    @ 115: let preamble$82 = 0;
    @ 116: let &preamble$83 = preamble$81[preamble$82];
    @ 117: let preamble$84 = get &preamble$83;
    @ 118: let preamble$85 = "*value";
    @ 119: let preamble$86 = preamble$84 haskey preamble$85;
    @ 120: let &preamble$87 = if preamble$86 then {
        @ 130: let &preamble$88 = preamble$84{preamble$85};
        @ 131: ifresult &preamble$88;

    } else {
        @ 121: let preamble$89 = "Object has no attribute *value";
        @ 122: let &preamble$90 = alloc;
        @ 123: store &preamble$90 preamble$89;
        @ 124: let preamble$91 = "*value";
        @ 125: let preamble$92 = {};
        @ 126: let preamble$93 = preamble$92{preamble$91 -> &preamble$90};
        @ 127: let &preamble$94 = alloc;
        @ 128: store &preamble$94 preamble$93;
        @ 129: raise &preamble$94;

    };
    @ 132: let preamble$95 = get &preamble$87;
    @ 133: let &preamble$96 = alloc;
    @ 134: store &preamble$96 preamble$95;
    @ 135: let preamble$97 = "*value";
    @ 136: let preamble$98 = {};
    @ 137: let preamble$99 = preamble$98{preamble$97 -> &preamble$96};
    @ 138: let &preamble$100 = alloc;
    @ 139: store &preamble$100 preamble$99;

};
@ 140: let &preamble$102 = alloc;
@ 141: store &preamble$102 preamble$101;
@ 142: let preamble$103 = "*value";
@ 143: let preamble$104 = {};
@ 144: let preamble$105 = preamble$104{preamble$103 -> &preamble$102};
@ 145: let &preamble$106 = alloc;
@ 146: store &preamble$106 preamble$105;
@ 147: let &NameError = &preamble$106;
@ 148: let preamble$127 = def (preamble$107) {
    @ 149: let preamble$108 = 0;
    @ 150: let &preamble$109 = preamble$107[preamble$108];
    @ 151: let preamble$110 = get &preamble$109;
    @ 152: let preamble$111 = "*value";
    @ 153: let preamble$112 = preamble$110 haskey preamble$111;
    @ 154: let &preamble$113 = if preamble$112 then {
        @ 164: let &preamble$114 = preamble$110{preamble$111};
        @ 165: ifresult &preamble$114;

    } else {
        @ 155: let preamble$115 = "Object has no attribute *value";
        @ 156: let &preamble$116 = alloc;
        @ 157: store &preamble$116 preamble$115;
        @ 158: let preamble$117 = "*value";
        @ 159: let preamble$118 = {};
        @ 160: let preamble$119 = preamble$118{preamble$117 -> &preamble$116};
        @ 161: let &preamble$120 = alloc;
        @ 162: store &preamble$120 preamble$119;
        @ 163: raise &preamble$120;

    };
    @ 166: let preamble$121 = get &preamble$113;
    @ 167: let &preamble$122 = alloc;
    @ 168: store &preamble$122 preamble$121;
    @ 169: let preamble$123 = "*value";
    @ 170: let preamble$124 = {};
    @ 171: let preamble$125 = preamble$124{preamble$123 -> &preamble$122};
    @ 172: let &preamble$126 = alloc;
    @ 173: store &preamble$126 preamble$125;

};
@ 174: let &preamble$128 = alloc;
@ 175: store &preamble$128 preamble$127;
@ 176: let preamble$129 = "*value";
@ 177: let preamble$130 = {};
@ 178: let preamble$131 = preamble$130{preamble$129 -> &preamble$128};
@ 179: let &preamble$132 = alloc;
@ 180: store &preamble$132 preamble$131;
@ 181: let &StopIteration = &preamble$132;
@ 182: let preamble$258 = def (preamble$133) {
    @ 183: let preamble$134 = 0;
    @ 184: let &preamble$135 = preamble$133[preamble$134];
    @ 185: let preamble$136 = get &preamble$135;
    @ 186: let preamble$137 = "*value";
    @ 187: let preamble$138 = preamble$136 haskey preamble$137;
    @ 188: let &preamble$139 = if preamble$138 then {
        @ 198: let &preamble$140 = preamble$136{preamble$137};
        @ 199: ifresult &preamble$140;

    } else {
        @ 189: let preamble$141 = "Object has no attribute *value";
        @ 190: let &preamble$142 = alloc;
        @ 191: store &preamble$142 preamble$141;
        @ 192: let preamble$143 = "*value";
        @ 193: let preamble$144 = {};
        @ 194: let preamble$145 = preamble$144{preamble$143 -> &preamble$142};
        @ 195: let &preamble$146 = alloc;
        @ 196: store &preamble$146 preamble$145;
        @ 197: raise &preamble$146;

    };
    @ 200: let preamble$147 = get &preamble$139;
    @ 201: let preamble$254 = None;
    @ 202: let preamble$253 = preamble$254 == preamble$147;
    @ 203: let preamble$255 = if preamble$253 then {
        @ 387: let preamble$256 = False;
        @ 388: ifresult preamble$256;

    } else {
        @ 204: let preamble$250 = False;
        @ 205: let preamble$249 = preamble$250 == preamble$147;
        @ 206: let preamble$251 = if preamble$249 then {
            @ 385: let preamble$252 = False;
            @ 386: ifresult preamble$252;

        } else {
            @ 207: let preamble$246 = 0;
            @ 208: let preamble$245 = preamble$246 == preamble$147;
            @ 209: let preamble$247 = if preamble$245 then {
                @ 383: let preamble$248 = False;
                @ 384: ifresult preamble$248;

            } else {
                @ 210: let preamble$242 = "";
                @ 211: let preamble$241 = preamble$242 == preamble$147;
                @ 212: let preamble$243 = if preamble$241 then {
                    @ 381: let preamble$244 = False;
                    @ 382: ifresult preamble$244;

                } else {
                    @ 213: let preamble$238 = [];
                    @ 214: let preamble$237 = preamble$238 == preamble$147;
                    @ 215: let preamble$239 = if preamble$237 then {
                        @ 379: let preamble$240 = False;
                        @ 380: ifresult preamble$240;

                    } else {
                        @ 216: let preamble$234 = {};
                        @ 217: let preamble$233 = preamble$234 == preamble$147;
                        @ 218: let preamble$235 = if preamble$233 then {
                            @ 377: let preamble$236 = False;
                            @ 378: ifresult preamble$236;

                        } else {
                            @ 219: let preamble$148 = "__bool__";
                            @ 220: let preamble$231 = preamble$136 haskey preamble$148;
                            @ 221: let preamble$232 = if preamble$231 then {
                                @ 314: let &preamble$150 = preamble$136{preamble$148};
                                @ 315: let &preamble$151 = &preamble$150;
                                @ 316: let preamble$153 = get &preamble$151;
                                @ 317: let preamble$155 = "*value";
                                @ 318: let preamble$156 = preamble$153 haskey preamble$155;
                                @ 319: let &preamble$157 = if preamble$156 then {
                                    @ 329: let &preamble$158 = preamble$153{preamble$155};
                                    @ 330: ifresult &preamble$158;

                                } else {
                                    @ 320: let preamble$159 = "Object has no attribute *value";
                                    @ 321: let &preamble$160 = alloc;
                                    @ 322: store &preamble$160 preamble$159;
                                    @ 323: let preamble$161 = "*value";
                                    @ 324: let preamble$162 = {};
                                    @ 325: let preamble$163 = preamble$162{preamble$161 -> &preamble$160};
                                    @ 326: let &preamble$164 = alloc;
                                    @ 327: store &preamble$164 preamble$163;
                                    @ 328: raise &preamble$164;

                                };
                                @ 331: let preamble$154 = get &preamble$157;
                                @ 332: let preamble$165 = isfunc preamble$154;
                                @ 333: let preamble$166 = not preamble$165;
                                @ 334: let &preamble$152 = alloc;
                                @ 335: store &preamble$152 preamble$166;
                                @ 336: while &preamble$152 {
                                    @ 337: let preamble$167 = "__call__";
                                    @ 338: let preamble$168 = preamble$153 haskey preamble$167;
                                    @ 339: let &preamble$169 = if preamble$168 then {
                                        @ 349: let &preamble$170 = preamble$153{preamble$167};
                                        @ 350: ifresult &preamble$170;

                                    } else {
                                        @ 340: let preamble$171 = "Object is not callable";
                                        @ 341: let &preamble$172 = alloc;
                                        @ 342: store &preamble$172 preamble$171;
                                        @ 343: let preamble$173 = "*value";
                                        @ 344: let preamble$174 = {};
                                        @ 345: let preamble$175 = preamble$174{preamble$173 -> &preamble$172};
                                        @ 346: let &preamble$176 = alloc;
                                        @ 347: store &preamble$176 preamble$175;
                                        @ 348: raise &preamble$176;

                                    };
                                    @ 351: let &preamble$151 = &preamble$169;
                                    @ 352: let preamble$153 = get &preamble$151;
                                    @ 353: let preamble$155 = "*value";
                                    @ 354: let preamble$156 = preamble$153 haskey preamble$155;
                                    @ 355: let &preamble$157 = if preamble$156 then {
                                        @ 365: let &preamble$158 = preamble$153{preamble$155};
                                        @ 366: ifresult &preamble$158;

                                    } else {
                                        @ 356: let preamble$159 = "Object has no attribute *value";
                                        @ 357: let &preamble$160 = alloc;
                                        @ 358: store &preamble$160 preamble$159;
                                        @ 359: let preamble$161 = "*value";
                                        @ 360: let preamble$162 = {};
                                        @ 361: let preamble$163 = preamble$162{preamble$161 -> &preamble$160};
                                        @ 362: let &preamble$164 = alloc;
                                        @ 363: store &preamble$164 preamble$163;
                                        @ 364: raise &preamble$164;

                                    };
                                    @ 367: let preamble$154 = get &preamble$157;
                                    @ 368: let preamble$165 = isfunc preamble$154;
                                    @ 369: let preamble$166 = not preamble$165;
                                    @ 370: let &preamble$152 = alloc;
                                    @ 371: store &preamble$152 preamble$166;

                                };
                                @ 372: let preamble$178 = [&preamble$135];
                                @ 373: let &preamble$177 = preamble$154(preamble$178);
                                @ 374: let preamble$179 = get &preamble$177;
                                @ 375: ifresult preamble$179;

                            } else {
                                @ 222: let preamble$149 = "__len__";
                                @ 223: let preamble$229 = preamble$136 haskey preamble$149;
                                @ 224: let preamble$230 = if preamble$229 then {
                                    @ 227: let &preamble$180 = preamble$136{preamble$149};
                                    @ 228: let &preamble$181 = &preamble$180;
                                    @ 229: let preamble$183 = get &preamble$181;
                                    @ 230: let preamble$185 = "*value";
                                    @ 231: let preamble$186 = preamble$183 haskey preamble$185;
                                    @ 232: let &preamble$187 = if preamble$186 then {
                                        @ 242: let &preamble$188 = preamble$183{preamble$185};
                                        @ 243: ifresult &preamble$188;

                                    } else {
                                        @ 233: let preamble$189 = "Object has no attribute *value";
                                        @ 234: let &preamble$190 = alloc;
                                        @ 235: store &preamble$190 preamble$189;
                                        @ 236: let preamble$191 = "*value";
                                        @ 237: let preamble$192 = {};
                                        @ 238: let preamble$193 = preamble$192{preamble$191 -> &preamble$190};
                                        @ 239: let &preamble$194 = alloc;
                                        @ 240: store &preamble$194 preamble$193;
                                        @ 241: raise &preamble$194;

                                    };
                                    @ 244: let preamble$184 = get &preamble$187;
                                    @ 245: let preamble$195 = isfunc preamble$184;
                                    @ 246: let preamble$196 = not preamble$195;
                                    @ 247: let &preamble$182 = alloc;
                                    @ 248: store &preamble$182 preamble$196;
                                    @ 249: while &preamble$182 {
                                        @ 250: let preamble$197 = "__call__";
                                        @ 251: let preamble$198 = preamble$183 haskey preamble$197;
                                        @ 252: let &preamble$199 = if preamble$198 then {
                                            @ 262: let &preamble$200 = preamble$183{preamble$197};
                                            @ 263: ifresult &preamble$200;

                                        } else {
                                            @ 253: let preamble$201 = "Object is not callable";
                                            @ 254: let &preamble$202 = alloc;
                                            @ 255: store &preamble$202 preamble$201;
                                            @ 256: let preamble$203 = "*value";
                                            @ 257: let preamble$204 = {};
                                            @ 258: let preamble$205 = preamble$204{preamble$203 -> &preamble$202};
                                            @ 259: let &preamble$206 = alloc;
                                            @ 260: store &preamble$206 preamble$205;
                                            @ 261: raise &preamble$206;

                                        };
                                        @ 264: let &preamble$181 = &preamble$199;
                                        @ 265: let preamble$183 = get &preamble$181;
                                        @ 266: let preamble$185 = "*value";
                                        @ 267: let preamble$186 = preamble$183 haskey preamble$185;
                                        @ 268: let &preamble$187 = if preamble$186 then {
                                            @ 278: let &preamble$188 = preamble$183{preamble$185};
                                            @ 279: ifresult &preamble$188;

                                        } else {
                                            @ 269: let preamble$189 = "Object has no attribute *value";
                                            @ 270: let &preamble$190 = alloc;
                                            @ 271: store &preamble$190 preamble$189;
                                            @ 272: let preamble$191 = "*value";
                                            @ 273: let preamble$192 = {};
                                            @ 274: let preamble$193 = preamble$192{preamble$191 -> &preamble$190};
                                            @ 275: let &preamble$194 = alloc;
                                            @ 276: store &preamble$194 preamble$193;
                                            @ 277: raise &preamble$194;

                                        };
                                        @ 280: let preamble$184 = get &preamble$187;
                                        @ 281: let preamble$195 = isfunc preamble$184;
                                        @ 282: let preamble$196 = not preamble$195;
                                        @ 283: let &preamble$182 = alloc;
                                        @ 284: store &preamble$182 preamble$196;

                                    };
                                    @ 285: let preamble$208 = [&preamble$135];
                                    @ 286: let &preamble$207 = preamble$184(preamble$208);
                                    @ 287: let preamble$209 = get &preamble$207;
                                    @ 288: let preamble$210 = "*value";
                                    @ 289: let preamble$211 = preamble$209 haskey preamble$210;
                                    @ 290: let &preamble$212 = if preamble$211 then {
                                        @ 300: let &preamble$213 = preamble$209{preamble$210};
                                        @ 301: ifresult &preamble$213;

                                    } else {
                                        @ 291: let preamble$214 = "Object has no attribute *value";
                                        @ 292: let &preamble$215 = alloc;
                                        @ 293: store &preamble$215 preamble$214;
                                        @ 294: let preamble$216 = "*value";
                                        @ 295: let preamble$217 = {};
                                        @ 296: let preamble$218 = preamble$217{preamble$216 -> &preamble$215};
                                        @ 297: let &preamble$219 = alloc;
                                        @ 298: store &preamble$219 preamble$218;
                                        @ 299: raise &preamble$219;

                                    };
                                    @ 302: let preamble$220 = get &preamble$212;
                                    @ 303: let preamble$222 = isint preamble$220;
                                    @ 304: let preamble$221 = if preamble$222 then {
                                        @ 305: let preamble$225 = 0;
                                        @ 306: let preamble$224 = preamble$225 == preamble$220;
                                        @ 307: let preamble$226 = if preamble$224 then {
                                            @ 310: let preamble$227 = False;
                                            @ 311: ifresult preamble$227;

                                        } else {
                                            @ 308: let preamble$223 = True;
                                            @ 309: ifresult preamble$223;

                                        };

                                    } else {

                                    };
                                    @ 312: ifresult preamble$221;

                                } else {
                                    @ 225: let preamble$228 = True;
                                    @ 226: ifresult preamble$228;

                                };
                                @ 313: ifresult preamble$230;

                            };
                            @ 376: ifresult preamble$232;

                        };

                    };

                };

            };

        };

    };
    @ 389: ifresult preamble$255;
    @ 390: let &preamble$257 = if preamble$255 then {
        @ 392: ifresult &True;

    } else {
        @ 391: ifresult &False;

    };
    @ 393: return &preamble$257;

};
@ 394: let &preamble$259 = alloc;
@ 395: store &preamble$259 preamble$258;
@ 396: let preamble$260 = "*value";
@ 397: let preamble$261 = {};
@ 398: let preamble$262 = preamble$261{preamble$260 -> &preamble$259};
@ 399: let &preamble$263 = alloc;
@ 400: store &preamble$263 preamble$262;
@ 401: let &bool = &preamble$263;
@ 402: let &int_add = alloc;
@ 403: let preamble$299 = def (preamble$264) {
    @ 404: let preamble$265 = 0;
    @ 405: let &preamble$266 = preamble$264[preamble$265];
    @ 406: let preamble$267 = get &preamble$266;
    @ 407: let preamble$268 = "*value";
    @ 408: let preamble$269 = preamble$267 haskey preamble$268;
    @ 409: let &preamble$270 = if preamble$269 then {
        @ 419: let &preamble$271 = preamble$267{preamble$268};
        @ 420: ifresult &preamble$271;

    } else {
        @ 410: let preamble$272 = "Object has no attribute *value";
        @ 411: let &preamble$273 = alloc;
        @ 412: store &preamble$273 preamble$272;
        @ 413: let preamble$274 = "*value";
        @ 414: let preamble$275 = {};
        @ 415: let preamble$276 = preamble$275{preamble$274 -> &preamble$273};
        @ 416: let &preamble$277 = alloc;
        @ 417: store &preamble$277 preamble$276;
        @ 418: raise &preamble$277;

    };
    @ 421: let preamble$278 = get &preamble$270;
    @ 422: let preamble$279 = 1;
    @ 423: let &preamble$280 = preamble$264[preamble$279];
    @ 424: let preamble$281 = get &preamble$280;
    @ 425: let preamble$282 = "*value";
    @ 426: let preamble$283 = preamble$281 haskey preamble$282;
    @ 427: let &preamble$284 = if preamble$283 then {
        @ 437: let &preamble$285 = preamble$281{preamble$282};
        @ 438: ifresult &preamble$285;

    } else {
        @ 428: let preamble$286 = "Object has no attribute *value";
        @ 429: let &preamble$287 = alloc;
        @ 430: store &preamble$287 preamble$286;
        @ 431: let preamble$288 = "*value";
        @ 432: let preamble$289 = {};
        @ 433: let preamble$290 = preamble$289{preamble$288 -> &preamble$287};
        @ 434: let &preamble$291 = alloc;
        @ 435: store &preamble$291 preamble$290;
        @ 436: raise &preamble$291;

    };
    @ 439: let preamble$292 = get &preamble$284;
    @ 440: let preamble$293 = preamble$278 int+ preamble$292;
    @ 441: let &preamble$294 = alloc;
    @ 442: store &preamble$294 preamble$293;
    @ 443: let preamble$295 = "*value";
    @ 444: let preamble$296 = {};
    @ 445: let preamble$297 = preamble$296{preamble$295 -> &preamble$294};
    @ 446: let &preamble$298 = alloc;
    @ 447: store &preamble$298 preamble$297;
    @ 448: return &preamble$298;

};
@ 449: store &int_add preamble$299;
@ 450: let &method_call = alloc;
@ 451: let preamble$330 = def (preamble$300) {
    @ 452: let preamble$301 = 0;
    @ 453: let &preamble$302 = preamble$300[preamble$301];
    @ 454: let preamble$303 = get &preamble$302;
    @ 455: let preamble$304 = "*value";
    @ 456: let preamble$305 = preamble$303 haskey preamble$304;
    @ 457: let &preamble$306 = if preamble$305 then {
        @ 467: let &preamble$307 = preamble$303{preamble$304};
        @ 468: ifresult &preamble$307;

    } else {
        @ 458: let preamble$308 = "Object has no attribute *value";
        @ 459: let &preamble$309 = alloc;
        @ 460: store &preamble$309 preamble$308;
        @ 461: let preamble$310 = "*value";
        @ 462: let preamble$311 = {};
        @ 463: let preamble$312 = preamble$311{preamble$310 -> &preamble$309};
        @ 464: let &preamble$313 = alloc;
        @ 465: store &preamble$313 preamble$312;
        @ 466: raise &preamble$313;

    };
    @ 469: let preamble$314 = get &preamble$306;
    @ 470: let preamble$315 = "*value";
    @ 471: let preamble$316 = preamble$314 haskey preamble$315;
    @ 472: let &preamble$317 = if preamble$316 then {
        @ 482: let &preamble$318 = preamble$314{preamble$315};
        @ 483: ifresult &preamble$318;

    } else {
        @ 473: let preamble$319 = "Object has no attribute *value";
        @ 474: let &preamble$320 = alloc;
        @ 475: store &preamble$320 preamble$319;
        @ 476: let preamble$321 = "*value";
        @ 477: let preamble$322 = {};
        @ 478: let preamble$323 = preamble$322{preamble$321 -> &preamble$320};
        @ 479: let &preamble$324 = alloc;
        @ 480: store &preamble$324 preamble$323;
        @ 481: raise &preamble$324;

    };
    @ 484: let preamble$325 = get &preamble$317;
    @ 485: let preamble$326 = 1;
    @ 486: let preamble$327 = None;
    @ 487: let preamble$328 = preamble$300[preamble$326:preamble$327];
    @ 488: let &preamble$329 = preamble$325(preamble$328);
    @ 489: return &preamble$329;

};
@ 490: store &method_call preamble$330;
@ 491: let preamble$331 = "*None";
@ 492: let preamble$332 = get &scope;
@ 493: let preamble$333 = preamble$332{preamble$331 -> &None};
@ 494: store &scope preamble$333;
@ 495: let preamble$334 = "True";
@ 496: let preamble$335 = get &scope;
@ 497: let preamble$336 = preamble$335{preamble$334 -> &True};
@ 498: store &scope preamble$336;
@ 499: let preamble$337 = "False";
@ 500: let preamble$338 = get &scope;
@ 501: let preamble$339 = preamble$338{preamble$337 -> &False};
@ 502: store &scope preamble$339;
@ 503: let preamble$340 = "bool";
@ 504: let preamble$341 = get &scope;
@ 505: let preamble$342 = preamble$341{preamble$340 -> &bool};
@ 506: store &scope preamble$342;
@ 507: let preamble$343 = "NameError";
@ 508: let preamble$344 = get &scope;
@ 509: let preamble$345 = preamble$344{preamble$343 -> &NameError};
@ 510: store &scope preamble$345;
@ 511: let preamble$346 = "TypeError";
@ 512: let preamble$347 = get &scope;
@ 513: let preamble$348 = preamble$347{preamble$346 -> &TypeError};
@ 514: store &scope preamble$348;
@ 515: let preamble$349 = "AttributeError";
@ 516: let preamble$350 = get &scope;
@ 517: let preamble$351 = preamble$350{preamble$349 -> &AttributeError};
@ 518: store &scope preamble$351;
@ 519: let preamble$352 = "ValueError";
@ 520: let preamble$353 = get &scope;
@ 521: let preamble$354 = preamble$353{preamble$352 -> &ValueError};
@ 522: store &scope preamble$354;
@ 523: let preamble$355 = "StopIteration";
@ 524: let preamble$356 = get &scope;
@ 525: let preamble$357 = preamble$356{preamble$355 -> &StopIteration};
@ 526: store &scope preamble$357;
@ 527: let lamia$0 = 7;
@ 528: let &lamia$1 = alloc;
@ 529: store &lamia$1 lamia$0;
@ 530: let lamia$2 = "*value";
@ 531: let lamia$3 = {};
@ 532: let lamia$4 = lamia$3{lamia$2 -> &lamia$1};
@ 533: let &lamia$5 = alloc;
@ 534: store &lamia$5 lamia$4;
@ 535: let lamia$6 = "$norm1";
@ 536: let lamia$7 = get &scope;
@ 537: let lamia$8 = lamia$7{lamia$6 -> &lamia$5};
@ 538: store &scope lamia$8;
@ 539: let lamia$9 = "$norm1";
@ 540: let &lamia$10 = get_from_scope(lamia$9);
@ 541: let lamia$11 = get &lamia$10;
@ 542: let lamia$12 = "__pos__";
@ 543: let lamia$13 = lamia$11 haskey lamia$12;
@ 544: let &lamia$14 = if lamia$13 then {
    @ 554: let &lamia$15 = lamia$11{lamia$12};
    @ 555: ifresult &lamia$15;

} else {
    @ 545: let lamia$16 = "Object has no attribute __pos__";
    @ 546: let &lamia$17 = alloc;
    @ 547: store &lamia$17 lamia$16;
    @ 548: let lamia$18 = "*value";
    @ 549: let lamia$19 = {};
    @ 550: let lamia$20 = lamia$19{lamia$18 -> &lamia$17};
    @ 551: let &lamia$21 = alloc;
    @ 552: store &lamia$21 lamia$20;
    @ 553: raise &lamia$21;

};
@ 556: let lamia$22 = get &lamia$14;
@ 557: let lamia$23 = isfunc lamia$22;
@ 558: let &lamia$24 = if lamia$23 then {
    @ 560: let lamia$25 = def (lamia$26) {
        @ 561: let lamia$27 = [&lamia$10];
        @ 562: let lamia$28 = lamia$27 || lamia$26;
        @ 563: let &lamia$29 = lamia$22(lamia$28);
        @ 564: return &lamia$29;

    };
    @ 565: let &lamia$30 = alloc;
    @ 566: store &lamia$30 lamia$25;
    @ 567: let lamia$31 = "*value";
    @ 568: let lamia$32 = {};
    @ 569: let lamia$33 = lamia$32{lamia$31 -> &lamia$30};
    @ 570: let &lamia$34 = alloc;
    @ 571: store &lamia$34 lamia$33;
    @ 572: ifresult &lamia$34;

} else {
    @ 559: ifresult &lamia$14;

};
@ 573: let lamia$35 = "$norm2";
@ 574: let lamia$36 = get &scope;
@ 575: let lamia$37 = lamia$36{lamia$35 -> &lamia$24};
@ 576: store &scope lamia$37;
@ 577: let lamia$38 = "$norm2";
@ 578: let &lamia$39 = get_from_scope(lamia$38);
@ 579: let &lamia$40 = &lamia$39;
@ 580: let lamia$42 = get &lamia$40;
@ 581: let lamia$44 = "*value";
@ 582: let lamia$45 = lamia$42 haskey lamia$44;
@ 583: let &lamia$46 = if lamia$45 then {
    @ 593: let &lamia$47 = lamia$42{lamia$44};
    @ 594: ifresult &lamia$47;

} else {
    @ 584: let lamia$48 = "Object has no attribute *value";
    @ 585: let &lamia$49 = alloc;
    @ 586: store &lamia$49 lamia$48;
    @ 587: let lamia$50 = "*value";
    @ 588: let lamia$51 = {};
    @ 589: let lamia$52 = lamia$51{lamia$50 -> &lamia$49};
    @ 590: let &lamia$53 = alloc;
    @ 591: store &lamia$53 lamia$52;
    @ 592: raise &lamia$53;

};
@ 595: let lamia$43 = get &lamia$46;
@ 596: let lamia$54 = isfunc lamia$43;
@ 597: let lamia$55 = not lamia$54;
@ 598: let &lamia$41 = alloc;
@ 599: store &lamia$41 lamia$55;
@ 600: while &lamia$41 {
    @ 601: let lamia$56 = "__call__";
    @ 602: let lamia$57 = lamia$42 haskey lamia$56;
    @ 603: let &lamia$58 = if lamia$57 then {
        @ 613: let &lamia$59 = lamia$42{lamia$56};
        @ 614: ifresult &lamia$59;

    } else {
        @ 604: let lamia$60 = "Object is not callable";
        @ 605: let &lamia$61 = alloc;
        @ 606: store &lamia$61 lamia$60;
        @ 607: let lamia$62 = "*value";
        @ 608: let lamia$63 = {};
        @ 609: let lamia$64 = lamia$63{lamia$62 -> &lamia$61};
        @ 610: let &lamia$65 = alloc;
        @ 611: store &lamia$65 lamia$64;
        @ 612: raise &lamia$65;

    };
    @ 615: let &lamia$40 = &lamia$58;
    @ 616: let lamia$42 = get &lamia$40;
    @ 617: let lamia$44 = "*value";
    @ 618: let lamia$45 = lamia$42 haskey lamia$44;
    @ 619: let &lamia$46 = if lamia$45 then {
        @ 629: let &lamia$47 = lamia$42{lamia$44};
        @ 630: ifresult &lamia$47;

    } else {
        @ 620: let lamia$48 = "Object has no attribute *value";
        @ 621: let &lamia$49 = alloc;
        @ 622: store &lamia$49 lamia$48;
        @ 623: let lamia$50 = "*value";
        @ 624: let lamia$51 = {};
        @ 625: let lamia$52 = lamia$51{lamia$50 -> &lamia$49};
        @ 626: let &lamia$53 = alloc;
        @ 627: store &lamia$53 lamia$52;
        @ 628: raise &lamia$53;

    };
    @ 631: let lamia$43 = get &lamia$46;
    @ 632: let lamia$54 = isfunc lamia$43;
    @ 633: let lamia$55 = not lamia$54;
    @ 634: let &lamia$41 = alloc;
    @ 635: store &lamia$41 lamia$55;

};
@ 636: let lamia$66 = [];
@ 637: let &lamia$67 = lamia$43(lamia$66);
@ 638: let lamia$68 = "$norm3";
@ 639: let lamia$69 = get &scope;
@ 640: let lamia$70 = lamia$69{lamia$68 -> &lamia$67};
@ 641: store &scope lamia$70;
@ 642: let lamia$71 = "$norm3";
@ 643: let &lamia$72 = get_from_scope(lamia$71);
@ 644: let lamia$73 = get &lamia$72;
@ 645: let lamia$74 = "__add__";
@ 646: let lamia$75 = lamia$73 haskey lamia$74;
@ 647: let &lamia$76 = if lamia$75 then {
    @ 657: let &lamia$77 = lamia$73{lamia$74};
    @ 658: ifresult &lamia$77;

} else {
    @ 648: let lamia$78 = "Object has no attribute __add__";
    @ 649: let &lamia$79 = alloc;
    @ 650: store &lamia$79 lamia$78;
    @ 651: let lamia$80 = "*value";
    @ 652: let lamia$81 = {};
    @ 653: let lamia$82 = lamia$81{lamia$80 -> &lamia$79};
    @ 654: let &lamia$83 = alloc;
    @ 655: store &lamia$83 lamia$82;
    @ 656: raise &lamia$83;

};
@ 659: let lamia$84 = get &lamia$76;
@ 660: let lamia$85 = isfunc lamia$84;
@ 661: let &lamia$86 = if lamia$85 then {
    @ 663: let lamia$87 = def (lamia$88) {
        @ 664: let lamia$89 = [&lamia$72];
        @ 665: let lamia$90 = lamia$89 || lamia$88;
        @ 666: let &lamia$91 = lamia$84(lamia$90);
        @ 667: return &lamia$91;

    };
    @ 668: let &lamia$92 = alloc;
    @ 669: store &lamia$92 lamia$87;
    @ 670: let lamia$93 = "*value";
    @ 671: let lamia$94 = {};
    @ 672: let lamia$95 = lamia$94{lamia$93 -> &lamia$92};
    @ 673: let &lamia$96 = alloc;
    @ 674: store &lamia$96 lamia$95;
    @ 675: ifresult &lamia$96;

} else {
    @ 662: ifresult &lamia$76;

};
@ 676: let lamia$97 = "$norm4";
@ 677: let lamia$98 = get &scope;
@ 678: let lamia$99 = lamia$98{lamia$97 -> &lamia$86};
@ 679: store &scope lamia$99;
@ 680: let lamia$100 = 7;
@ 681: let &lamia$101 = alloc;
@ 682: store &lamia$101 lamia$100;
@ 683: let lamia$102 = "*value";
@ 684: let lamia$103 = {};
@ 685: let lamia$104 = lamia$103{lamia$102 -> &lamia$101};
@ 686: let &lamia$105 = alloc;
@ 687: store &lamia$105 lamia$104;
@ 688: let lamia$106 = "$norm5";
@ 689: let lamia$107 = get &scope;
@ 690: let lamia$108 = lamia$107{lamia$106 -> &lamia$105};
@ 691: store &scope lamia$108;
@ 692: let lamia$109 = "$norm4";
@ 693: let &lamia$110 = get_from_scope(lamia$109);
@ 694: let lamia$111 = "$norm5";
@ 695: let &lamia$112 = get_from_scope(lamia$111);
@ 696: let &lamia$113 = &lamia$110;
@ 697: let lamia$115 = get &lamia$113;
@ 698: let lamia$117 = "*value";
@ 699: let lamia$118 = lamia$115 haskey lamia$117;
@ 700: let &lamia$119 = if lamia$118 then {
    @ 710: let &lamia$120 = lamia$115{lamia$117};
    @ 711: ifresult &lamia$120;

} else {
    @ 701: let lamia$121 = "Object has no attribute *value";
    @ 702: let &lamia$122 = alloc;
    @ 703: store &lamia$122 lamia$121;
    @ 704: let lamia$123 = "*value";
    @ 705: let lamia$124 = {};
    @ 706: let lamia$125 = lamia$124{lamia$123 -> &lamia$122};
    @ 707: let &lamia$126 = alloc;
    @ 708: store &lamia$126 lamia$125;
    @ 709: raise &lamia$126;

};
@ 712: let lamia$116 = get &lamia$119;
@ 713: let lamia$127 = isfunc lamia$116;
@ 714: let lamia$128 = not lamia$127;
@ 715: let &lamia$114 = alloc;
@ 716: store &lamia$114 lamia$128;
@ 717: while &lamia$114 {
    @ 718: let lamia$129 = "__call__";
    @ 719: let lamia$130 = lamia$115 haskey lamia$129;
    @ 720: let &lamia$131 = if lamia$130 then {
        @ 730: let &lamia$132 = lamia$115{lamia$129};
        @ 731: ifresult &lamia$132;

    } else {
        @ 721: let lamia$133 = "Object is not callable";
        @ 722: let &lamia$134 = alloc;
        @ 723: store &lamia$134 lamia$133;
        @ 724: let lamia$135 = "*value";
        @ 725: let lamia$136 = {};
        @ 726: let lamia$137 = lamia$136{lamia$135 -> &lamia$134};
        @ 727: let &lamia$138 = alloc;
        @ 728: store &lamia$138 lamia$137;
        @ 729: raise &lamia$138;

    };
    @ 732: let &lamia$113 = &lamia$131;
    @ 733: let lamia$115 = get &lamia$113;
    @ 734: let lamia$117 = "*value";
    @ 735: let lamia$118 = lamia$115 haskey lamia$117;
    @ 736: let &lamia$119 = if lamia$118 then {
        @ 746: let &lamia$120 = lamia$115{lamia$117};
        @ 747: ifresult &lamia$120;

    } else {
        @ 737: let lamia$121 = "Object has no attribute *value";
        @ 738: let &lamia$122 = alloc;
        @ 739: store &lamia$122 lamia$121;
        @ 740: let lamia$123 = "*value";
        @ 741: let lamia$124 = {};
        @ 742: let lamia$125 = lamia$124{lamia$123 -> &lamia$122};
        @ 743: let &lamia$126 = alloc;
        @ 744: store &lamia$126 lamia$125;
        @ 745: raise &lamia$126;

    };
    @ 748: let lamia$116 = get &lamia$119;
    @ 749: let lamia$127 = isfunc lamia$116;
    @ 750: let lamia$128 = not lamia$127;
    @ 751: let &lamia$114 = alloc;
    @ 752: store &lamia$114 lamia$128;

};
@ 753: let lamia$139 = [&lamia$112];
@ 754: let &lamia$140 = lamia$116(lamia$139);
@ 755: let lamia$141 = "$norm6";
@ 756: let lamia$142 = get &scope;
@ 757: let lamia$143 = lamia$142{lamia$141 -> &lamia$140};
@ 758: store &scope lamia$143;
@ 759: let lamia$144 = "$norm6";
@ 760: let &lamia$145 = get_from_scope(lamia$144);
@ 761: let lamia$146 = get &lamia$145;
@ 762: let lamia$147 = "__add__";
@ 763: let lamia$148 = lamia$146 haskey lamia$147;
@ 764: let &lamia$149 = if lamia$148 then {
    @ 774: let &lamia$150 = lamia$146{lamia$147};
    @ 775: ifresult &lamia$150;

} else {
    @ 765: let lamia$151 = "Object has no attribute __add__";
    @ 766: let &lamia$152 = alloc;
    @ 767: store &lamia$152 lamia$151;
    @ 768: let lamia$153 = "*value";
    @ 769: let lamia$154 = {};
    @ 770: let lamia$155 = lamia$154{lamia$153 -> &lamia$152};
    @ 771: let &lamia$156 = alloc;
    @ 772: store &lamia$156 lamia$155;
    @ 773: raise &lamia$156;

};
@ 776: let lamia$157 = get &lamia$149;
@ 777: let lamia$158 = isfunc lamia$157;
@ 778: let &lamia$159 = if lamia$158 then {
    @ 780: let lamia$160 = def (lamia$161) {
        @ 781: let lamia$162 = [&lamia$145];
        @ 782: let lamia$163 = lamia$162 || lamia$161;
        @ 783: let &lamia$164 = lamia$157(lamia$163);
        @ 784: return &lamia$164;

    };
    @ 785: let &lamia$165 = alloc;
    @ 786: store &lamia$165 lamia$160;
    @ 787: let lamia$166 = "*value";
    @ 788: let lamia$167 = {};
    @ 789: let lamia$168 = lamia$167{lamia$166 -> &lamia$165};
    @ 790: let &lamia$169 = alloc;
    @ 791: store &lamia$169 lamia$168;
    @ 792: ifresult &lamia$169;

} else {
    @ 779: ifresult &lamia$149;

};
@ 793: let lamia$170 = "$norm7";
@ 794: let lamia$171 = get &scope;
@ 795: let lamia$172 = lamia$171{lamia$170 -> &lamia$159};
@ 796: store &scope lamia$172;
@ 797: let lamia$173 = 7;
@ 798: let &lamia$174 = alloc;
@ 799: store &lamia$174 lamia$173;
@ 800: let lamia$175 = "*value";
@ 801: let lamia$176 = {};
@ 802: let lamia$177 = lamia$176{lamia$175 -> &lamia$174};
@ 803: let &lamia$178 = alloc;
@ 804: store &lamia$178 lamia$177;
@ 805: let lamia$179 = "$norm8";
@ 806: let lamia$180 = get &scope;
@ 807: let lamia$181 = lamia$180{lamia$179 -> &lamia$178};
@ 808: store &scope lamia$181;
@ 809: let lamia$182 = "$norm7";
@ 810: let &lamia$183 = get_from_scope(lamia$182);
@ 811: let lamia$184 = "$norm8";
@ 812: let &lamia$185 = get_from_scope(lamia$184);
@ 813: let &lamia$186 = &lamia$183;
@ 814: let lamia$188 = get &lamia$186;
@ 815: let lamia$190 = "*value";
@ 816: let lamia$191 = lamia$188 haskey lamia$190;
@ 817: let &lamia$192 = if lamia$191 then {
    @ 827: let &lamia$193 = lamia$188{lamia$190};
    @ 828: ifresult &lamia$193;

} else {
    @ 818: let lamia$194 = "Object has no attribute *value";
    @ 819: let &lamia$195 = alloc;
    @ 820: store &lamia$195 lamia$194;
    @ 821: let lamia$196 = "*value";
    @ 822: let lamia$197 = {};
    @ 823: let lamia$198 = lamia$197{lamia$196 -> &lamia$195};
    @ 824: let &lamia$199 = alloc;
    @ 825: store &lamia$199 lamia$198;
    @ 826: raise &lamia$199;

};
@ 829: let lamia$189 = get &lamia$192;
@ 830: let lamia$200 = isfunc lamia$189;
@ 831: let lamia$201 = not lamia$200;
@ 832: let &lamia$187 = alloc;
@ 833: store &lamia$187 lamia$201;
@ 834: while &lamia$187 {
    @ 835: let lamia$202 = "__call__";
    @ 836: let lamia$203 = lamia$188 haskey lamia$202;
    @ 837: let &lamia$204 = if lamia$203 then {
        @ 847: let &lamia$205 = lamia$188{lamia$202};
        @ 848: ifresult &lamia$205;

    } else {
        @ 838: let lamia$206 = "Object is not callable";
        @ 839: let &lamia$207 = alloc;
        @ 840: store &lamia$207 lamia$206;
        @ 841: let lamia$208 = "*value";
        @ 842: let lamia$209 = {};
        @ 843: let lamia$210 = lamia$209{lamia$208 -> &lamia$207};
        @ 844: let &lamia$211 = alloc;
        @ 845: store &lamia$211 lamia$210;
        @ 846: raise &lamia$211;

    };
    @ 849: let &lamia$186 = &lamia$204;
    @ 850: let lamia$188 = get &lamia$186;
    @ 851: let lamia$190 = "*value";
    @ 852: let lamia$191 = lamia$188 haskey lamia$190;
    @ 853: let &lamia$192 = if lamia$191 then {
        @ 863: let &lamia$193 = lamia$188{lamia$190};
        @ 864: ifresult &lamia$193;

    } else {
        @ 854: let lamia$194 = "Object has no attribute *value";
        @ 855: let &lamia$195 = alloc;
        @ 856: store &lamia$195 lamia$194;
        @ 857: let lamia$196 = "*value";
        @ 858: let lamia$197 = {};
        @ 859: let lamia$198 = lamia$197{lamia$196 -> &lamia$195};
        @ 860: let &lamia$199 = alloc;
        @ 861: store &lamia$199 lamia$198;
        @ 862: raise &lamia$199;

    };
    @ 865: let lamia$189 = get &lamia$192;
    @ 866: let lamia$200 = isfunc lamia$189;
    @ 867: let lamia$201 = not lamia$200;
    @ 868: let &lamia$187 = alloc;
    @ 869: store &lamia$187 lamia$201;

};
@ 870: let lamia$212 = [&lamia$185];
@ 871: let &lamia$213 = lamia$189(lamia$212);
@ 872: let lamia$214 = "$norm9";
@ 873: let lamia$215 = get &scope;
@ 874: let lamia$216 = lamia$215{lamia$214 -> &lamia$213};
@ 875: store &scope lamia$216;
@ 876: let lamia$217 = "$norm9";
@ 877: let &lamia$218 = get_from_scope(lamia$217);
@ 878: let lamia$219 = get &lamia$218;
@ 879: let lamia$220 = "__add__";
@ 880: let lamia$221 = lamia$219 haskey lamia$220;
@ 881: let &lamia$222 = if lamia$221 then {
    @ 891: let &lamia$223 = lamia$219{lamia$220};
    @ 892: ifresult &lamia$223;

} else {
    @ 882: let lamia$224 = "Object has no attribute __add__";
    @ 883: let &lamia$225 = alloc;
    @ 884: store &lamia$225 lamia$224;
    @ 885: let lamia$226 = "*value";
    @ 886: let lamia$227 = {};
    @ 887: let lamia$228 = lamia$227{lamia$226 -> &lamia$225};
    @ 888: let &lamia$229 = alloc;
    @ 889: store &lamia$229 lamia$228;
    @ 890: raise &lamia$229;

};
@ 893: let lamia$230 = get &lamia$222;
@ 894: let lamia$231 = isfunc lamia$230;
@ 895: let &lamia$232 = if lamia$231 then {
    @ 897: let lamia$233 = def (lamia$234) {
        @ 898: let lamia$235 = [&lamia$218];
        @ 899: let lamia$236 = lamia$235 || lamia$234;
        @ 900: let &lamia$237 = lamia$230(lamia$236);
        @ 901: return &lamia$237;

    };
    @ 902: let &lamia$238 = alloc;
    @ 903: store &lamia$238 lamia$233;
    @ 904: let lamia$239 = "*value";
    @ 905: let lamia$240 = {};
    @ 906: let lamia$241 = lamia$240{lamia$239 -> &lamia$238};
    @ 907: let &lamia$242 = alloc;
    @ 908: store &lamia$242 lamia$241;
    @ 909: ifresult &lamia$242;

} else {
    @ 896: ifresult &lamia$222;

};
@ 910: let lamia$243 = "$norm10";
@ 911: let lamia$244 = get &scope;
@ 912: let lamia$245 = lamia$244{lamia$243 -> &lamia$232};
@ 913: store &scope lamia$245;
@ 914: let lamia$246 = 7;
@ 915: let &lamia$247 = alloc;
@ 916: store &lamia$247 lamia$246;
@ 917: let lamia$248 = "*value";
@ 918: let lamia$249 = {};
@ 919: let lamia$250 = lamia$249{lamia$248 -> &lamia$247};
@ 920: let &lamia$251 = alloc;
@ 921: store &lamia$251 lamia$250;
@ 922: let lamia$252 = "$norm11";
@ 923: let lamia$253 = get &scope;
@ 924: let lamia$254 = lamia$253{lamia$252 -> &lamia$251};
@ 925: store &scope lamia$254;
@ 926: let lamia$255 = "$norm10";
@ 927: let &lamia$256 = get_from_scope(lamia$255);
@ 928: let lamia$257 = "$norm11";
@ 929: let &lamia$258 = get_from_scope(lamia$257);
@ 930: let &lamia$259 = &lamia$256;
@ 931: let lamia$261 = get &lamia$259;
@ 932: let lamia$263 = "*value";
@ 933: let lamia$264 = lamia$261 haskey lamia$263;
@ 934: let &lamia$265 = if lamia$264 then {
    @ 944: let &lamia$266 = lamia$261{lamia$263};
    @ 945: ifresult &lamia$266;

} else {
    @ 935: let lamia$267 = "Object has no attribute *value";
    @ 936: let &lamia$268 = alloc;
    @ 937: store &lamia$268 lamia$267;
    @ 938: let lamia$269 = "*value";
    @ 939: let lamia$270 = {};
    @ 940: let lamia$271 = lamia$270{lamia$269 -> &lamia$268};
    @ 941: let &lamia$272 = alloc;
    @ 942: store &lamia$272 lamia$271;
    @ 943: raise &lamia$272;

};
@ 946: let lamia$262 = get &lamia$265;
@ 947: let lamia$273 = isfunc lamia$262;
@ 948: let lamia$274 = not lamia$273;
@ 949: let &lamia$260 = alloc;
@ 950: store &lamia$260 lamia$274;
@ 951: while &lamia$260 {
    @ 952: let lamia$275 = "__call__";
    @ 953: let lamia$276 = lamia$261 haskey lamia$275;
    @ 954: let &lamia$277 = if lamia$276 then {
        @ 964: let &lamia$278 = lamia$261{lamia$275};
        @ 965: ifresult &lamia$278;

    } else {
        @ 955: let lamia$279 = "Object is not callable";
        @ 956: let &lamia$280 = alloc;
        @ 957: store &lamia$280 lamia$279;
        @ 958: let lamia$281 = "*value";
        @ 959: let lamia$282 = {};
        @ 960: let lamia$283 = lamia$282{lamia$281 -> &lamia$280};
        @ 961: let &lamia$284 = alloc;
        @ 962: store &lamia$284 lamia$283;
        @ 963: raise &lamia$284;

    };
    @ 966: let &lamia$259 = &lamia$277;
    @ 967: let lamia$261 = get &lamia$259;
    @ 968: let lamia$263 = "*value";
    @ 969: let lamia$264 = lamia$261 haskey lamia$263;
    @ 970: let &lamia$265 = if lamia$264 then {
        @ 980: let &lamia$266 = lamia$261{lamia$263};
        @ 981: ifresult &lamia$266;

    } else {
        @ 971: let lamia$267 = "Object has no attribute *value";
        @ 972: let &lamia$268 = alloc;
        @ 973: store &lamia$268 lamia$267;
        @ 974: let lamia$269 = "*value";
        @ 975: let lamia$270 = {};
        @ 976: let lamia$271 = lamia$270{lamia$269 -> &lamia$268};
        @ 977: let &lamia$272 = alloc;
        @ 978: store &lamia$272 lamia$271;
        @ 979: raise &lamia$272;

    };
    @ 982: let lamia$262 = get &lamia$265;
    @ 983: let lamia$273 = isfunc lamia$262;
    @ 984: let lamia$274 = not lamia$273;
    @ 985: let &lamia$260 = alloc;
    @ 986: store &lamia$260 lamia$274;

};
@ 987: let lamia$285 = [&lamia$258];
@ 988: let &lamia$286 = lamia$262(lamia$285);
@ 989: let lamia$287 = "$norm12";
@ 990: let lamia$288 = get &scope;
@ 991: let lamia$289 = lamia$288{lamia$287 -> &lamia$286};
@ 992: store &scope lamia$289;
@ 993: let lamia$290 = "$norm12";
@ 994: let &lamia$291 = get_from_scope(lamia$290);
@ 995: let lamia$292 = get &lamia$291;
@ 996: let lamia$293 = "__add__";
@ 997: let lamia$294 = lamia$292 haskey lamia$293;
@ 998: let &lamia$295 = if lamia$294 then {
    @1008: let &lamia$296 = lamia$292{lamia$293};
    @1009: ifresult &lamia$296;

} else {
    @ 999: let lamia$297 = "Object has no attribute __add__";
    @1000: let &lamia$298 = alloc;
    @1001: store &lamia$298 lamia$297;
    @1002: let lamia$299 = "*value";
    @1003: let lamia$300 = {};
    @1004: let lamia$301 = lamia$300{lamia$299 -> &lamia$298};
    @1005: let &lamia$302 = alloc;
    @1006: store &lamia$302 lamia$301;
    @1007: raise &lamia$302;

};
@1010: let lamia$303 = get &lamia$295;
@1011: let lamia$304 = isfunc lamia$303;
@1012: let &lamia$305 = if lamia$304 then {
    @1014: let lamia$306 = def (lamia$307) {
        @1015: let lamia$308 = [&lamia$291];
        @1016: let lamia$309 = lamia$308 || lamia$307;
        @1017: let &lamia$310 = lamia$303(lamia$309);
        @1018: return &lamia$310;

    };
    @1019: let &lamia$311 = alloc;
    @1020: store &lamia$311 lamia$306;
    @1021: let lamia$312 = "*value";
    @1022: let lamia$313 = {};
    @1023: let lamia$314 = lamia$313{lamia$312 -> &lamia$311};
    @1024: let &lamia$315 = alloc;
    @1025: store &lamia$315 lamia$314;
    @1026: ifresult &lamia$315;

} else {
    @1013: ifresult &lamia$295;

};
@1027: let lamia$316 = "$norm13";
@1028: let lamia$317 = get &scope;
@1029: let lamia$318 = lamia$317{lamia$316 -> &lamia$305};
@1030: store &scope lamia$318;
@1031: let lamia$319 = 7;
@1032: let &lamia$320 = alloc;
@1033: store &lamia$320 lamia$319;
@1034: let lamia$321 = "*value";
@1035: let lamia$322 = {};
@1036: let lamia$323 = lamia$322{lamia$321 -> &lamia$320};
@1037: let &lamia$324 = alloc;
@1038: store &lamia$324 lamia$323;
@1039: let lamia$325 = "$norm14";
@1040: let lamia$326 = get &scope;
@1041: let lamia$327 = lamia$326{lamia$325 -> &lamia$324};
@1042: store &scope lamia$327;
@1043: let lamia$328 = "$norm13";
@1044: let &lamia$329 = get_from_scope(lamia$328);
@1045: let lamia$330 = "$norm14";
@1046: let &lamia$331 = get_from_scope(lamia$330);
@1047: let &lamia$332 = &lamia$329;
@1048: let lamia$334 = get &lamia$332;
@1049: let lamia$336 = "*value";
@1050: let lamia$337 = lamia$334 haskey lamia$336;
@1051: let &lamia$338 = if lamia$337 then {
    @1061: let &lamia$339 = lamia$334{lamia$336};
    @1062: ifresult &lamia$339;

} else {
    @1052: let lamia$340 = "Object has no attribute *value";
    @1053: let &lamia$341 = alloc;
    @1054: store &lamia$341 lamia$340;
    @1055: let lamia$342 = "*value";
    @1056: let lamia$343 = {};
    @1057: let lamia$344 = lamia$343{lamia$342 -> &lamia$341};
    @1058: let &lamia$345 = alloc;
    @1059: store &lamia$345 lamia$344;
    @1060: raise &lamia$345;

};
@1063: let lamia$335 = get &lamia$338;
@1064: let lamia$346 = isfunc lamia$335;
@1065: let lamia$347 = not lamia$346;
@1066: let &lamia$333 = alloc;
@1067: store &lamia$333 lamia$347;
@1068: while &lamia$333 {
    @1069: let lamia$348 = "__call__";
    @1070: let lamia$349 = lamia$334 haskey lamia$348;
    @1071: let &lamia$350 = if lamia$349 then {
        @1081: let &lamia$351 = lamia$334{lamia$348};
        @1082: ifresult &lamia$351;

    } else {
        @1072: let lamia$352 = "Object is not callable";
        @1073: let &lamia$353 = alloc;
        @1074: store &lamia$353 lamia$352;
        @1075: let lamia$354 = "*value";
        @1076: let lamia$355 = {};
        @1077: let lamia$356 = lamia$355{lamia$354 -> &lamia$353};
        @1078: let &lamia$357 = alloc;
        @1079: store &lamia$357 lamia$356;
        @1080: raise &lamia$357;

    };
    @1083: let &lamia$332 = &lamia$350;
    @1084: let lamia$334 = get &lamia$332;
    @1085: let lamia$336 = "*value";
    @1086: let lamia$337 = lamia$334 haskey lamia$336;
    @1087: let &lamia$338 = if lamia$337 then {
        @1097: let &lamia$339 = lamia$334{lamia$336};
        @1098: ifresult &lamia$339;

    } else {
        @1088: let lamia$340 = "Object has no attribute *value";
        @1089: let &lamia$341 = alloc;
        @1090: store &lamia$341 lamia$340;
        @1091: let lamia$342 = "*value";
        @1092: let lamia$343 = {};
        @1093: let lamia$344 = lamia$343{lamia$342 -> &lamia$341};
        @1094: let &lamia$345 = alloc;
        @1095: store &lamia$345 lamia$344;
        @1096: raise &lamia$345;

    };
    @1099: let lamia$335 = get &lamia$338;
    @1100: let lamia$346 = isfunc lamia$335;
    @1101: let lamia$347 = not lamia$346;
    @1102: let &lamia$333 = alloc;
    @1103: store &lamia$333 lamia$347;

};
@1104: let lamia$358 = [&lamia$331];
@1105: let &lamia$359 = lamia$335(lamia$358);
@1106: let lamia$360 = "$norm15";
@1107: let lamia$361 = get &scope;
@1108: let lamia$362 = lamia$361{lamia$360 -> &lamia$359};
@1109: store &scope lamia$362;
@1110: let lamia$363 = "$norm15";
@1111: let &lamia$364 = get_from_scope(lamia$363);
@1112: let lamia$365 = get &lamia$364;
@1113: let lamia$366 = "__add__";
@1114: let lamia$367 = lamia$365 haskey lamia$366;
@1115: let &lamia$368 = if lamia$367 then {
    @1125: let &lamia$369 = lamia$365{lamia$366};
    @1126: ifresult &lamia$369;

} else {
    @1116: let lamia$370 = "Object has no attribute __add__";
    @1117: let &lamia$371 = alloc;
    @1118: store &lamia$371 lamia$370;
    @1119: let lamia$372 = "*value";
    @1120: let lamia$373 = {};
    @1121: let lamia$374 = lamia$373{lamia$372 -> &lamia$371};
    @1122: let &lamia$375 = alloc;
    @1123: store &lamia$375 lamia$374;
    @1124: raise &lamia$375;

};
@1127: let lamia$376 = get &lamia$368;
@1128: let lamia$377 = isfunc lamia$376;
@1129: let &lamia$378 = if lamia$377 then {
    @1131: let lamia$379 = def (lamia$380) {
        @1132: let lamia$381 = [&lamia$364];
        @1133: let lamia$382 = lamia$381 || lamia$380;
        @1134: let &lamia$383 = lamia$376(lamia$382);
        @1135: return &lamia$383;

    };
    @1136: let &lamia$384 = alloc;
    @1137: store &lamia$384 lamia$379;
    @1138: let lamia$385 = "*value";
    @1139: let lamia$386 = {};
    @1140: let lamia$387 = lamia$386{lamia$385 -> &lamia$384};
    @1141: let &lamia$388 = alloc;
    @1142: store &lamia$388 lamia$387;
    @1143: ifresult &lamia$388;

} else {
    @1130: ifresult &lamia$368;

};
@1144: let lamia$389 = "$norm16";
@1145: let lamia$390 = get &scope;
@1146: let lamia$391 = lamia$390{lamia$389 -> &lamia$378};
@1147: store &scope lamia$391;
@1148: let lamia$392 = 7;
@1149: let &lamia$393 = alloc;
@1150: store &lamia$393 lamia$392;
@1151: let lamia$394 = "*value";
@1152: let lamia$395 = {};
@1153: let lamia$396 = lamia$395{lamia$394 -> &lamia$393};
@1154: let &lamia$397 = alloc;
@1155: store &lamia$397 lamia$396;
@1156: let lamia$398 = "$norm17";
@1157: let lamia$399 = get &scope;
@1158: let lamia$400 = lamia$399{lamia$398 -> &lamia$397};
@1159: store &scope lamia$400;
@1160: let lamia$401 = "$norm16";
@1161: let &lamia$402 = get_from_scope(lamia$401);
@1162: let lamia$403 = "$norm17";
@1163: let &lamia$404 = get_from_scope(lamia$403);
@1164: let &lamia$405 = &lamia$402;
@1165: let lamia$407 = get &lamia$405;
@1166: let lamia$409 = "*value";
@1167: let lamia$410 = lamia$407 haskey lamia$409;
@1168: let &lamia$411 = if lamia$410 then {
    @1178: let &lamia$412 = lamia$407{lamia$409};
    @1179: ifresult &lamia$412;

} else {
    @1169: let lamia$413 = "Object has no attribute *value";
    @1170: let &lamia$414 = alloc;
    @1171: store &lamia$414 lamia$413;
    @1172: let lamia$415 = "*value";
    @1173: let lamia$416 = {};
    @1174: let lamia$417 = lamia$416{lamia$415 -> &lamia$414};
    @1175: let &lamia$418 = alloc;
    @1176: store &lamia$418 lamia$417;
    @1177: raise &lamia$418;

};
@1180: let lamia$408 = get &lamia$411;
@1181: let lamia$419 = isfunc lamia$408;
@1182: let lamia$420 = not lamia$419;
@1183: let &lamia$406 = alloc;
@1184: store &lamia$406 lamia$420;
@1185: while &lamia$406 {
    @1186: let lamia$421 = "__call__";
    @1187: let lamia$422 = lamia$407 haskey lamia$421;
    @1188: let &lamia$423 = if lamia$422 then {
        @1198: let &lamia$424 = lamia$407{lamia$421};
        @1199: ifresult &lamia$424;

    } else {
        @1189: let lamia$425 = "Object is not callable";
        @1190: let &lamia$426 = alloc;
        @1191: store &lamia$426 lamia$425;
        @1192: let lamia$427 = "*value";
        @1193: let lamia$428 = {};
        @1194: let lamia$429 = lamia$428{lamia$427 -> &lamia$426};
        @1195: let &lamia$430 = alloc;
        @1196: store &lamia$430 lamia$429;
        @1197: raise &lamia$430;

    };
    @1200: let &lamia$405 = &lamia$423;
    @1201: let lamia$407 = get &lamia$405;
    @1202: let lamia$409 = "*value";
    @1203: let lamia$410 = lamia$407 haskey lamia$409;
    @1204: let &lamia$411 = if lamia$410 then {
        @1214: let &lamia$412 = lamia$407{lamia$409};
        @1215: ifresult &lamia$412;

    } else {
        @1205: let lamia$413 = "Object has no attribute *value";
        @1206: let &lamia$414 = alloc;
        @1207: store &lamia$414 lamia$413;
        @1208: let lamia$415 = "*value";
        @1209: let lamia$416 = {};
        @1210: let lamia$417 = lamia$416{lamia$415 -> &lamia$414};
        @1211: let &lamia$418 = alloc;
        @1212: store &lamia$418 lamia$417;
        @1213: raise &lamia$418;

    };
    @1216: let lamia$408 = get &lamia$411;
    @1217: let lamia$419 = isfunc lamia$408;
    @1218: let lamia$420 = not lamia$419;
    @1219: let &lamia$406 = alloc;
    @1220: store &lamia$406 lamia$420;

};
@1221: let lamia$431 = [&lamia$404];
@1222: let &lamia$432 = lamia$408(lamia$431);
@1223: let lamia$433 = "$norm18";
@1224: let lamia$434 = get &scope;
@1225: let lamia$435 = lamia$434{lamia$433 -> &lamia$432};
@1226: store &scope lamia$435;
@1227: let lamia$436 = "$norm18";
@1228: let &lamia$437 = get_from_scope(lamia$436);
@1229: let lamia$438 = get &lamia$437;
@1230: let lamia$439 = "__add__";
@1231: let lamia$440 = lamia$438 haskey lamia$439;
@1232: let &lamia$441 = if lamia$440 then {
    @1242: let &lamia$442 = lamia$438{lamia$439};
    @1243: ifresult &lamia$442;

} else {
    @1233: let lamia$443 = "Object has no attribute __add__";
    @1234: let &lamia$444 = alloc;
    @1235: store &lamia$444 lamia$443;
    @1236: let lamia$445 = "*value";
    @1237: let lamia$446 = {};
    @1238: let lamia$447 = lamia$446{lamia$445 -> &lamia$444};
    @1239: let &lamia$448 = alloc;
    @1240: store &lamia$448 lamia$447;
    @1241: raise &lamia$448;

};
@1244: let lamia$449 = get &lamia$441;
@1245: let lamia$450 = isfunc lamia$449;
@1246: let &lamia$451 = if lamia$450 then {
    @1248: let lamia$452 = def (lamia$453) {
        @1249: let lamia$454 = [&lamia$437];
        @1250: let lamia$455 = lamia$454 || lamia$453;
        @1251: let &lamia$456 = lamia$449(lamia$455);
        @1252: return &lamia$456;

    };
    @1253: let &lamia$457 = alloc;
    @1254: store &lamia$457 lamia$452;
    @1255: let lamia$458 = "*value";
    @1256: let lamia$459 = {};
    @1257: let lamia$460 = lamia$459{lamia$458 -> &lamia$457};
    @1258: let &lamia$461 = alloc;
    @1259: store &lamia$461 lamia$460;
    @1260: ifresult &lamia$461;

} else {
    @1247: ifresult &lamia$441;

};
@1261: let lamia$462 = "$norm19";
@1262: let lamia$463 = get &scope;
@1263: let lamia$464 = lamia$463{lamia$462 -> &lamia$451};
@1264: store &scope lamia$464;
@1265: let lamia$465 = 7;
@1266: let &lamia$466 = alloc;
@1267: store &lamia$466 lamia$465;
@1268: let lamia$467 = "*value";
@1269: let lamia$468 = {};
@1270: let lamia$469 = lamia$468{lamia$467 -> &lamia$466};
@1271: let &lamia$470 = alloc;
@1272: store &lamia$470 lamia$469;
@1273: let lamia$471 = "$norm20";
@1274: let lamia$472 = get &scope;
@1275: let lamia$473 = lamia$472{lamia$471 -> &lamia$470};
@1276: store &scope lamia$473;
@1277: let lamia$474 = "$norm19";
@1278: let &lamia$475 = get_from_scope(lamia$474);
@1279: let lamia$476 = "$norm20";
@1280: let &lamia$477 = get_from_scope(lamia$476);
@1281: let &lamia$478 = &lamia$475;
@1282: let lamia$480 = get &lamia$478;
@1283: let lamia$482 = "*value";
@1284: let lamia$483 = lamia$480 haskey lamia$482;
@1285: let &lamia$484 = if lamia$483 then {
    @1295: let &lamia$485 = lamia$480{lamia$482};
    @1296: ifresult &lamia$485;

} else {
    @1286: let lamia$486 = "Object has no attribute *value";
    @1287: let &lamia$487 = alloc;
    @1288: store &lamia$487 lamia$486;
    @1289: let lamia$488 = "*value";
    @1290: let lamia$489 = {};
    @1291: let lamia$490 = lamia$489{lamia$488 -> &lamia$487};
    @1292: let &lamia$491 = alloc;
    @1293: store &lamia$491 lamia$490;
    @1294: raise &lamia$491;

};
@1297: let lamia$481 = get &lamia$484;
@1298: let lamia$492 = isfunc lamia$481;
@1299: let lamia$493 = not lamia$492;
@1300: let &lamia$479 = alloc;
@1301: store &lamia$479 lamia$493;
@1302: while &lamia$479 {
    @1303: let lamia$494 = "__call__";
    @1304: let lamia$495 = lamia$480 haskey lamia$494;
    @1305: let &lamia$496 = if lamia$495 then {
        @1315: let &lamia$497 = lamia$480{lamia$494};
        @1316: ifresult &lamia$497;

    } else {
        @1306: let lamia$498 = "Object is not callable";
        @1307: let &lamia$499 = alloc;
        @1308: store &lamia$499 lamia$498;
        @1309: let lamia$500 = "*value";
        @1310: let lamia$501 = {};
        @1311: let lamia$502 = lamia$501{lamia$500 -> &lamia$499};
        @1312: let &lamia$503 = alloc;
        @1313: store &lamia$503 lamia$502;
        @1314: raise &lamia$503;

    };
    @1317: let &lamia$478 = &lamia$496;
    @1318: let lamia$480 = get &lamia$478;
    @1319: let lamia$482 = "*value";
    @1320: let lamia$483 = lamia$480 haskey lamia$482;
    @1321: let &lamia$484 = if lamia$483 then {
        @1331: let &lamia$485 = lamia$480{lamia$482};
        @1332: ifresult &lamia$485;

    } else {
        @1322: let lamia$486 = "Object has no attribute *value";
        @1323: let &lamia$487 = alloc;
        @1324: store &lamia$487 lamia$486;
        @1325: let lamia$488 = "*value";
        @1326: let lamia$489 = {};
        @1327: let lamia$490 = lamia$489{lamia$488 -> &lamia$487};
        @1328: let &lamia$491 = alloc;
        @1329: store &lamia$491 lamia$490;
        @1330: raise &lamia$491;

    };
    @1333: let lamia$481 = get &lamia$484;
    @1334: let lamia$492 = isfunc lamia$481;
    @1335: let lamia$493 = not lamia$492;
    @1336: let &lamia$479 = alloc;
    @1337: store &lamia$479 lamia$493;

};
@1338: let lamia$504 = [&lamia$477];
@1339: let &lamia$505 = lamia$481(lamia$504);
@1340: let lamia$506 = "$norm21";
@1341: let lamia$507 = get &scope;
@1342: let lamia$508 = lamia$507{lamia$506 -> &lamia$505};
@1343: store &scope lamia$508;
