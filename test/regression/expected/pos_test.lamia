@   0: let preamble$0 = {};
@   1: let &scope = alloc;
@   2: store &scope preamble$0;
@   3: let get_from_parent_scope = def (preamble$1) {
    @   4: let preamble$2 = "name is not defined";
    @   5: let &preamble$3 = alloc;
    @   6: store &preamble$3 preamble$2;
    @   7: let preamble$4 = "*value";
    @   8: let preamble$5 = {};
    @   9: let preamble$6 = preamble$5{preamble$4 -> &preamble$3};
    @  10: let &preamble$7 = alloc;
    @  11: store &preamble$7 preamble$6;
    @  12: raise &preamble$7;

};
@  13: let get_from_scope = def (preamble$8) {
    @  14: let preamble$9 = get &scope;
    @  15: let preamble$10 = preamble$9 haskey preamble$8;
    @  16: let &preamble$11 = if preamble$10 then {
        @  19: let &preamble$12 = preamble$9{preamble$8};
        @  20: ifresult &preamble$12;

    } else {
        @  17: let &preamble$13 = get_from_parent_scope(preamble$8);
        @  18: ifresult &preamble$13;

    };
    @  21: return &preamble$11;

};
@  22: let &preamble$15 = alloc;
@  23: let preamble$14 = 1;
@  24: store &preamble$15 preamble$14;
@  25: let preamble$16 = {};
@  26: let preamble$17 = "*value";
@  27: let preamble$18 = preamble$16{preamble$17 -> &preamble$15};
@  28: let &True = alloc;
@  29: store &True preamble$18;
@  30: let &preamble$20 = alloc;
@  31: let preamble$19 = 0;
@  32: store &preamble$20 preamble$19;
@  33: let preamble$21 = {};
@  34: let preamble$22 = "*value";
@  35: let preamble$23 = preamble$21{preamble$22 -> &preamble$20};
@  36: let &False = alloc;
@  37: store &False preamble$23;
@  38: let &preamble$25 = alloc;
@  39: let preamble$24 = None;
@  40: store &preamble$25 preamble$24;
@  41: let preamble$26 = {};
@  42: let preamble$27 = "*value";
@  43: let preamble$28 = preamble$26{preamble$27 -> &preamble$25};
@  44: let &None = alloc;
@  45: store &None preamble$28;
@  46: let &preamble$30 = alloc;
@  47: let preamble$29 = NotImplemented;
@  48: store &preamble$30 preamble$29;
@  49: let preamble$31 = {};
@  50: let preamble$32 = "*value";
@  51: let preamble$33 = preamble$31{preamble$32 -> &preamble$30};
@  52: let &NotImplemented = alloc;
@  53: store &NotImplemented preamble$33;
@  54: let preamble$54 = def (preamble$34) {
    @  55: let preamble$35 = 0;
    @  56: let &preamble$36 = preamble$34[preamble$35];
    @  57: let preamble$37 = get &preamble$36;
    @  58: let preamble$38 = "*value";
    @  59: let preamble$39 = preamble$37 haskey preamble$38;
    @  60: let &preamble$40 = if preamble$39 then {
        @  70: let &preamble$41 = preamble$37{preamble$38};
        @  71: ifresult &preamble$41;

    } else {
        @  61: let preamble$42 = "Object has no attribute *value";
        @  62: let &preamble$43 = alloc;
        @  63: store &preamble$43 preamble$42;
        @  64: let preamble$44 = "*value";
        @  65: let preamble$45 = {};
        @  66: let preamble$46 = preamble$45{preamble$44 -> &preamble$43};
        @  67: let &preamble$47 = alloc;
        @  68: store &preamble$47 preamble$46;
        @  69: raise &preamble$47;

    };
    @  72: let preamble$48 = get &preamble$40;
    @  73: let &preamble$49 = alloc;
    @  74: store &preamble$49 preamble$48;
    @  75: let preamble$50 = "*value";
    @  76: let preamble$51 = {};
    @  77: let preamble$52 = preamble$51{preamble$50 -> &preamble$49};
    @  78: let &preamble$53 = alloc;
    @  79: store &preamble$53 preamble$52;

};
@  80: let &preamble$55 = alloc;
@  81: store &preamble$55 preamble$54;
@  82: let preamble$56 = "*value";
@  83: let preamble$57 = {};
@  84: let preamble$58 = preamble$57{preamble$56 -> &preamble$55};
@  85: let &preamble$59 = alloc;
@  86: store &preamble$59 preamble$58;
@  87: let &AttributeError = &preamble$59;
@  88: let preamble$80 = def (preamble$60) {
    @  89: let preamble$61 = 0;
    @  90: let &preamble$62 = preamble$60[preamble$61];
    @  91: let preamble$63 = get &preamble$62;
    @  92: let preamble$64 = "*value";
    @  93: let preamble$65 = preamble$63 haskey preamble$64;
    @  94: let &preamble$66 = if preamble$65 then {
        @ 104: let &preamble$67 = preamble$63{preamble$64};
        @ 105: ifresult &preamble$67;

    } else {
        @  95: let preamble$68 = "Object has no attribute *value";
        @  96: let &preamble$69 = alloc;
        @  97: store &preamble$69 preamble$68;
        @  98: let preamble$70 = "*value";
        @  99: let preamble$71 = {};
        @ 100: let preamble$72 = preamble$71{preamble$70 -> &preamble$69};
        @ 101: let &preamble$73 = alloc;
        @ 102: store &preamble$73 preamble$72;
        @ 103: raise &preamble$73;

    };
    @ 106: let preamble$74 = get &preamble$66;
    @ 107: let &preamble$75 = alloc;
    @ 108: store &preamble$75 preamble$74;
    @ 109: let preamble$76 = "*value";
    @ 110: let preamble$77 = {};
    @ 111: let preamble$78 = preamble$77{preamble$76 -> &preamble$75};
    @ 112: let &preamble$79 = alloc;
    @ 113: store &preamble$79 preamble$78;

};
@ 114: let &preamble$81 = alloc;
@ 115: store &preamble$81 preamble$80;
@ 116: let preamble$82 = "*value";
@ 117: let preamble$83 = {};
@ 118: let preamble$84 = preamble$83{preamble$82 -> &preamble$81};
@ 119: let &preamble$85 = alloc;
@ 120: store &preamble$85 preamble$84;
@ 121: let &TypeError = &preamble$85;
@ 122: let preamble$106 = def (preamble$86) {
    @ 123: let preamble$87 = 0;
    @ 124: let &preamble$88 = preamble$86[preamble$87];
    @ 125: let preamble$89 = get &preamble$88;
    @ 126: let preamble$90 = "*value";
    @ 127: let preamble$91 = preamble$89 haskey preamble$90;
    @ 128: let &preamble$92 = if preamble$91 then {
        @ 138: let &preamble$93 = preamble$89{preamble$90};
        @ 139: ifresult &preamble$93;

    } else {
        @ 129: let preamble$94 = "Object has no attribute *value";
        @ 130: let &preamble$95 = alloc;
        @ 131: store &preamble$95 preamble$94;
        @ 132: let preamble$96 = "*value";
        @ 133: let preamble$97 = {};
        @ 134: let preamble$98 = preamble$97{preamble$96 -> &preamble$95};
        @ 135: let &preamble$99 = alloc;
        @ 136: store &preamble$99 preamble$98;
        @ 137: raise &preamble$99;

    };
    @ 140: let preamble$100 = get &preamble$92;
    @ 141: let &preamble$101 = alloc;
    @ 142: store &preamble$101 preamble$100;
    @ 143: let preamble$102 = "*value";
    @ 144: let preamble$103 = {};
    @ 145: let preamble$104 = preamble$103{preamble$102 -> &preamble$101};
    @ 146: let &preamble$105 = alloc;
    @ 147: store &preamble$105 preamble$104;

};
@ 148: let &preamble$107 = alloc;
@ 149: store &preamble$107 preamble$106;
@ 150: let preamble$108 = "*value";
@ 151: let preamble$109 = {};
@ 152: let preamble$110 = preamble$109{preamble$108 -> &preamble$107};
@ 153: let &preamble$111 = alloc;
@ 154: store &preamble$111 preamble$110;
@ 155: let &NameError = &preamble$111;
@ 156: let preamble$132 = def (preamble$112) {
    @ 157: let preamble$113 = 0;
    @ 158: let &preamble$114 = preamble$112[preamble$113];
    @ 159: let preamble$115 = get &preamble$114;
    @ 160: let preamble$116 = "*value";
    @ 161: let preamble$117 = preamble$115 haskey preamble$116;
    @ 162: let &preamble$118 = if preamble$117 then {
        @ 172: let &preamble$119 = preamble$115{preamble$116};
        @ 173: ifresult &preamble$119;

    } else {
        @ 163: let preamble$120 = "Object has no attribute *value";
        @ 164: let &preamble$121 = alloc;
        @ 165: store &preamble$121 preamble$120;
        @ 166: let preamble$122 = "*value";
        @ 167: let preamble$123 = {};
        @ 168: let preamble$124 = preamble$123{preamble$122 -> &preamble$121};
        @ 169: let &preamble$125 = alloc;
        @ 170: store &preamble$125 preamble$124;
        @ 171: raise &preamble$125;

    };
    @ 174: let preamble$126 = get &preamble$118;
    @ 175: let &preamble$127 = alloc;
    @ 176: store &preamble$127 preamble$126;
    @ 177: let preamble$128 = "*value";
    @ 178: let preamble$129 = {};
    @ 179: let preamble$130 = preamble$129{preamble$128 -> &preamble$127};
    @ 180: let &preamble$131 = alloc;
    @ 181: store &preamble$131 preamble$130;

};
@ 182: let &preamble$133 = alloc;
@ 183: store &preamble$133 preamble$132;
@ 184: let preamble$134 = "*value";
@ 185: let preamble$135 = {};
@ 186: let preamble$136 = preamble$135{preamble$134 -> &preamble$133};
@ 187: let &preamble$137 = alloc;
@ 188: store &preamble$137 preamble$136;
@ 189: let &StopIteration = &preamble$137;
@ 190: let preamble$263 = def (preamble$138) {
    @ 191: let preamble$139 = 0;
    @ 192: let &preamble$140 = preamble$138[preamble$139];
    @ 193: let preamble$141 = get &preamble$140;
    @ 194: let preamble$142 = "*value";
    @ 195: let preamble$143 = preamble$141 haskey preamble$142;
    @ 196: let &preamble$144 = if preamble$143 then {
        @ 206: let &preamble$145 = preamble$141{preamble$142};
        @ 207: ifresult &preamble$145;

    } else {
        @ 197: let preamble$146 = "Object has no attribute *value";
        @ 198: let &preamble$147 = alloc;
        @ 199: store &preamble$147 preamble$146;
        @ 200: let preamble$148 = "*value";
        @ 201: let preamble$149 = {};
        @ 202: let preamble$150 = preamble$149{preamble$148 -> &preamble$147};
        @ 203: let &preamble$151 = alloc;
        @ 204: store &preamble$151 preamble$150;
        @ 205: raise &preamble$151;

    };
    @ 208: let preamble$152 = get &preamble$144;
    @ 209: let preamble$259 = None;
    @ 210: let preamble$258 = preamble$259 == preamble$152;
    @ 211: let preamble$260 = if preamble$258 then {
        @ 395: let preamble$261 = False;
        @ 396: ifresult preamble$261;

    } else {
        @ 212: let preamble$255 = False;
        @ 213: let preamble$254 = preamble$255 == preamble$152;
        @ 214: let preamble$256 = if preamble$254 then {
            @ 393: let preamble$257 = False;
            @ 394: ifresult preamble$257;

        } else {
            @ 215: let preamble$251 = 0;
            @ 216: let preamble$250 = preamble$251 == preamble$152;
            @ 217: let preamble$252 = if preamble$250 then {
                @ 391: let preamble$253 = False;
                @ 392: ifresult preamble$253;

            } else {
                @ 218: let preamble$247 = "";
                @ 219: let preamble$246 = preamble$247 == preamble$152;
                @ 220: let preamble$248 = if preamble$246 then {
                    @ 389: let preamble$249 = False;
                    @ 390: ifresult preamble$249;

                } else {
                    @ 221: let preamble$243 = [];
                    @ 222: let preamble$242 = preamble$243 == preamble$152;
                    @ 223: let preamble$244 = if preamble$242 then {
                        @ 387: let preamble$245 = False;
                        @ 388: ifresult preamble$245;

                    } else {
                        @ 224: let preamble$239 = {};
                        @ 225: let preamble$238 = preamble$239 == preamble$152;
                        @ 226: let preamble$240 = if preamble$238 then {
                            @ 385: let preamble$241 = False;
                            @ 386: ifresult preamble$241;

                        } else {
                            @ 227: let preamble$153 = "__bool__";
                            @ 228: let preamble$236 = preamble$141 haskey preamble$153;
                            @ 229: let preamble$237 = if preamble$236 then {
                                @ 322: let &preamble$155 = preamble$141{preamble$153};
                                @ 323: let &preamble$156 = &preamble$155;
                                @ 324: let preamble$158 = get &preamble$156;
                                @ 325: let preamble$160 = "*value";
                                @ 326: let preamble$161 = preamble$158 haskey preamble$160;
                                @ 327: let &preamble$162 = if preamble$161 then {
                                    @ 337: let &preamble$163 = preamble$158{preamble$160};
                                    @ 338: ifresult &preamble$163;

                                } else {
                                    @ 328: let preamble$164 = "Object has no attribute *value";
                                    @ 329: let &preamble$165 = alloc;
                                    @ 330: store &preamble$165 preamble$164;
                                    @ 331: let preamble$166 = "*value";
                                    @ 332: let preamble$167 = {};
                                    @ 333: let preamble$168 = preamble$167{preamble$166 -> &preamble$165};
                                    @ 334: let &preamble$169 = alloc;
                                    @ 335: store &preamble$169 preamble$168;
                                    @ 336: raise &preamble$169;

                                };
                                @ 339: let preamble$159 = get &preamble$162;
                                @ 340: let preamble$170 = isfunc preamble$159;
                                @ 341: let preamble$171 = not preamble$170;
                                @ 342: let &preamble$157 = alloc;
                                @ 343: store &preamble$157 preamble$171;
                                @ 344: while &preamble$157 {
                                    @ 345: let preamble$172 = "__call__";
                                    @ 346: let preamble$173 = preamble$158 haskey preamble$172;
                                    @ 347: let &preamble$174 = if preamble$173 then {
                                        @ 357: let &preamble$175 = preamble$158{preamble$172};
                                        @ 358: ifresult &preamble$175;

                                    } else {
                                        @ 348: let preamble$176 = "Object is not callable";
                                        @ 349: let &preamble$177 = alloc;
                                        @ 350: store &preamble$177 preamble$176;
                                        @ 351: let preamble$178 = "*value";
                                        @ 352: let preamble$179 = {};
                                        @ 353: let preamble$180 = preamble$179{preamble$178 -> &preamble$177};
                                        @ 354: let &preamble$181 = alloc;
                                        @ 355: store &preamble$181 preamble$180;
                                        @ 356: raise &preamble$181;

                                    };
                                    @ 359: let &preamble$156 = &preamble$174;
                                    @ 360: let preamble$158 = get &preamble$156;
                                    @ 361: let preamble$160 = "*value";
                                    @ 362: let preamble$161 = preamble$158 haskey preamble$160;
                                    @ 363: let &preamble$162 = if preamble$161 then {
                                        @ 373: let &preamble$163 = preamble$158{preamble$160};
                                        @ 374: ifresult &preamble$163;

                                    } else {
                                        @ 364: let preamble$164 = "Object has no attribute *value";
                                        @ 365: let &preamble$165 = alloc;
                                        @ 366: store &preamble$165 preamble$164;
                                        @ 367: let preamble$166 = "*value";
                                        @ 368: let preamble$167 = {};
                                        @ 369: let preamble$168 = preamble$167{preamble$166 -> &preamble$165};
                                        @ 370: let &preamble$169 = alloc;
                                        @ 371: store &preamble$169 preamble$168;
                                        @ 372: raise &preamble$169;

                                    };
                                    @ 375: let preamble$159 = get &preamble$162;
                                    @ 376: let preamble$170 = isfunc preamble$159;
                                    @ 377: let preamble$171 = not preamble$170;
                                    @ 378: let &preamble$157 = alloc;
                                    @ 379: store &preamble$157 preamble$171;

                                };
                                @ 380: let preamble$183 = [&preamble$140];
                                @ 381: let &preamble$182 = preamble$159(preamble$183);
                                @ 382: let preamble$184 = get &preamble$182;
                                @ 383: ifresult preamble$184;

                            } else {
                                @ 230: let preamble$154 = "__len__";
                                @ 231: let preamble$234 = preamble$141 haskey preamble$154;
                                @ 232: let preamble$235 = if preamble$234 then {
                                    @ 235: let &preamble$185 = preamble$141{preamble$154};
                                    @ 236: let &preamble$186 = &preamble$185;
                                    @ 237: let preamble$188 = get &preamble$186;
                                    @ 238: let preamble$190 = "*value";
                                    @ 239: let preamble$191 = preamble$188 haskey preamble$190;
                                    @ 240: let &preamble$192 = if preamble$191 then {
                                        @ 250: let &preamble$193 = preamble$188{preamble$190};
                                        @ 251: ifresult &preamble$193;

                                    } else {
                                        @ 241: let preamble$194 = "Object has no attribute *value";
                                        @ 242: let &preamble$195 = alloc;
                                        @ 243: store &preamble$195 preamble$194;
                                        @ 244: let preamble$196 = "*value";
                                        @ 245: let preamble$197 = {};
                                        @ 246: let preamble$198 = preamble$197{preamble$196 -> &preamble$195};
                                        @ 247: let &preamble$199 = alloc;
                                        @ 248: store &preamble$199 preamble$198;
                                        @ 249: raise &preamble$199;

                                    };
                                    @ 252: let preamble$189 = get &preamble$192;
                                    @ 253: let preamble$200 = isfunc preamble$189;
                                    @ 254: let preamble$201 = not preamble$200;
                                    @ 255: let &preamble$187 = alloc;
                                    @ 256: store &preamble$187 preamble$201;
                                    @ 257: while &preamble$187 {
                                        @ 258: let preamble$202 = "__call__";
                                        @ 259: let preamble$203 = preamble$188 haskey preamble$202;
                                        @ 260: let &preamble$204 = if preamble$203 then {
                                            @ 270: let &preamble$205 = preamble$188{preamble$202};
                                            @ 271: ifresult &preamble$205;

                                        } else {
                                            @ 261: let preamble$206 = "Object is not callable";
                                            @ 262: let &preamble$207 = alloc;
                                            @ 263: store &preamble$207 preamble$206;
                                            @ 264: let preamble$208 = "*value";
                                            @ 265: let preamble$209 = {};
                                            @ 266: let preamble$210 = preamble$209{preamble$208 -> &preamble$207};
                                            @ 267: let &preamble$211 = alloc;
                                            @ 268: store &preamble$211 preamble$210;
                                            @ 269: raise &preamble$211;

                                        };
                                        @ 272: let &preamble$186 = &preamble$204;
                                        @ 273: let preamble$188 = get &preamble$186;
                                        @ 274: let preamble$190 = "*value";
                                        @ 275: let preamble$191 = preamble$188 haskey preamble$190;
                                        @ 276: let &preamble$192 = if preamble$191 then {
                                            @ 286: let &preamble$193 = preamble$188{preamble$190};
                                            @ 287: ifresult &preamble$193;

                                        } else {
                                            @ 277: let preamble$194 = "Object has no attribute *value";
                                            @ 278: let &preamble$195 = alloc;
                                            @ 279: store &preamble$195 preamble$194;
                                            @ 280: let preamble$196 = "*value";
                                            @ 281: let preamble$197 = {};
                                            @ 282: let preamble$198 = preamble$197{preamble$196 -> &preamble$195};
                                            @ 283: let &preamble$199 = alloc;
                                            @ 284: store &preamble$199 preamble$198;
                                            @ 285: raise &preamble$199;

                                        };
                                        @ 288: let preamble$189 = get &preamble$192;
                                        @ 289: let preamble$200 = isfunc preamble$189;
                                        @ 290: let preamble$201 = not preamble$200;
                                        @ 291: let &preamble$187 = alloc;
                                        @ 292: store &preamble$187 preamble$201;

                                    };
                                    @ 293: let preamble$213 = [&preamble$140];
                                    @ 294: let &preamble$212 = preamble$189(preamble$213);
                                    @ 295: let preamble$214 = get &preamble$212;
                                    @ 296: let preamble$215 = "*value";
                                    @ 297: let preamble$216 = preamble$214 haskey preamble$215;
                                    @ 298: let &preamble$217 = if preamble$216 then {
                                        @ 308: let &preamble$218 = preamble$214{preamble$215};
                                        @ 309: ifresult &preamble$218;

                                    } else {
                                        @ 299: let preamble$219 = "Object has no attribute *value";
                                        @ 300: let &preamble$220 = alloc;
                                        @ 301: store &preamble$220 preamble$219;
                                        @ 302: let preamble$221 = "*value";
                                        @ 303: let preamble$222 = {};
                                        @ 304: let preamble$223 = preamble$222{preamble$221 -> &preamble$220};
                                        @ 305: let &preamble$224 = alloc;
                                        @ 306: store &preamble$224 preamble$223;
                                        @ 307: raise &preamble$224;

                                    };
                                    @ 310: let preamble$225 = get &preamble$217;
                                    @ 311: let preamble$227 = isint preamble$225;
                                    @ 312: let preamble$226 = if preamble$227 then {
                                        @ 313: let preamble$230 = 0;
                                        @ 314: let preamble$229 = preamble$230 == preamble$225;
                                        @ 315: let preamble$231 = if preamble$229 then {
                                            @ 318: let preamble$232 = False;
                                            @ 319: ifresult preamble$232;

                                        } else {
                                            @ 316: let preamble$228 = True;
                                            @ 317: ifresult preamble$228;

                                        };

                                    } else {

                                    };
                                    @ 320: ifresult preamble$226;

                                } else {
                                    @ 233: let preamble$233 = True;
                                    @ 234: ifresult preamble$233;

                                };
                                @ 321: ifresult preamble$235;

                            };
                            @ 384: ifresult preamble$237;

                        };

                    };

                };

            };

        };

    };
    @ 397: ifresult preamble$260;
    @ 398: let &preamble$262 = if preamble$260 then {
        @ 400: ifresult &True;

    } else {
        @ 399: ifresult &False;

    };
    @ 401: return &preamble$262;

};
@ 402: let &preamble$264 = alloc;
@ 403: store &preamble$264 preamble$263;
@ 404: let preamble$265 = "*value";
@ 405: let preamble$266 = {};
@ 406: let preamble$267 = preamble$266{preamble$265 -> &preamble$264};
@ 407: let &preamble$268 = alloc;
@ 408: store &preamble$268 preamble$267;
@ 409: let &bool = &preamble$268;
@ 410: let &int_add = alloc;
@ 411: let preamble$304 = def (preamble$269) {
    @ 412: let preamble$270 = 0;
    @ 413: let &preamble$271 = preamble$269[preamble$270];
    @ 414: let preamble$272 = get &preamble$271;
    @ 415: let preamble$273 = "*value";
    @ 416: let preamble$274 = preamble$272 haskey preamble$273;
    @ 417: let &preamble$275 = if preamble$274 then {
        @ 427: let &preamble$276 = preamble$272{preamble$273};
        @ 428: ifresult &preamble$276;

    } else {
        @ 418: let preamble$277 = "Object has no attribute *value";
        @ 419: let &preamble$278 = alloc;
        @ 420: store &preamble$278 preamble$277;
        @ 421: let preamble$279 = "*value";
        @ 422: let preamble$280 = {};
        @ 423: let preamble$281 = preamble$280{preamble$279 -> &preamble$278};
        @ 424: let &preamble$282 = alloc;
        @ 425: store &preamble$282 preamble$281;
        @ 426: raise &preamble$282;

    };
    @ 429: let preamble$283 = get &preamble$275;
    @ 430: let preamble$284 = 1;
    @ 431: let &preamble$285 = preamble$269[preamble$284];
    @ 432: let preamble$286 = get &preamble$285;
    @ 433: let preamble$287 = "*value";
    @ 434: let preamble$288 = preamble$286 haskey preamble$287;
    @ 435: let &preamble$289 = if preamble$288 then {
        @ 445: let &preamble$290 = preamble$286{preamble$287};
        @ 446: ifresult &preamble$290;

    } else {
        @ 436: let preamble$291 = "Object has no attribute *value";
        @ 437: let &preamble$292 = alloc;
        @ 438: store &preamble$292 preamble$291;
        @ 439: let preamble$293 = "*value";
        @ 440: let preamble$294 = {};
        @ 441: let preamble$295 = preamble$294{preamble$293 -> &preamble$292};
        @ 442: let &preamble$296 = alloc;
        @ 443: store &preamble$296 preamble$295;
        @ 444: raise &preamble$296;

    };
    @ 447: let preamble$297 = get &preamble$289;
    @ 448: let preamble$298 = preamble$283 int+ preamble$297;
    @ 449: let &preamble$299 = alloc;
    @ 450: store &preamble$299 preamble$298;
    @ 451: let preamble$300 = "*value";
    @ 452: let preamble$301 = {};
    @ 453: let preamble$302 = preamble$301{preamble$300 -> &preamble$299};
    @ 454: let &preamble$303 = alloc;
    @ 455: store &preamble$303 preamble$302;
    @ 456: return &preamble$303;

};
@ 457: store &int_add preamble$304;
@ 458: let &method_call = alloc;
@ 459: let preamble$335 = def (preamble$305) {
    @ 460: let preamble$306 = 0;
    @ 461: let &preamble$307 = preamble$305[preamble$306];
    @ 462: let preamble$308 = get &preamble$307;
    @ 463: let preamble$309 = "*value";
    @ 464: let preamble$310 = preamble$308 haskey preamble$309;
    @ 465: let &preamble$311 = if preamble$310 then {
        @ 475: let &preamble$312 = preamble$308{preamble$309};
        @ 476: ifresult &preamble$312;

    } else {
        @ 466: let preamble$313 = "Object has no attribute *value";
        @ 467: let &preamble$314 = alloc;
        @ 468: store &preamble$314 preamble$313;
        @ 469: let preamble$315 = "*value";
        @ 470: let preamble$316 = {};
        @ 471: let preamble$317 = preamble$316{preamble$315 -> &preamble$314};
        @ 472: let &preamble$318 = alloc;
        @ 473: store &preamble$318 preamble$317;
        @ 474: raise &preamble$318;

    };
    @ 477: let preamble$319 = get &preamble$311;
    @ 478: let preamble$320 = "*value";
    @ 479: let preamble$321 = preamble$319 haskey preamble$320;
    @ 480: let &preamble$322 = if preamble$321 then {
        @ 490: let &preamble$323 = preamble$319{preamble$320};
        @ 491: ifresult &preamble$323;

    } else {
        @ 481: let preamble$324 = "Object has no attribute *value";
        @ 482: let &preamble$325 = alloc;
        @ 483: store &preamble$325 preamble$324;
        @ 484: let preamble$326 = "*value";
        @ 485: let preamble$327 = {};
        @ 486: let preamble$328 = preamble$327{preamble$326 -> &preamble$325};
        @ 487: let &preamble$329 = alloc;
        @ 488: store &preamble$329 preamble$328;
        @ 489: raise &preamble$329;

    };
    @ 492: let preamble$330 = get &preamble$322;
    @ 493: let preamble$331 = 1;
    @ 494: let preamble$332 = None;
    @ 495: let preamble$333 = preamble$305[preamble$331:preamble$332];
    @ 496: let &preamble$334 = preamble$330(preamble$333);
    @ 497: return &preamble$334;

};
@ 498: store &method_call preamble$335;
@ 499: let preamble$336 = "True";
@ 500: let preamble$337 = get &scope;
@ 501: let preamble$338 = preamble$337{preamble$336 -> &True};
@ 502: store &scope preamble$338;
@ 503: let preamble$339 = "False";
@ 504: let preamble$340 = get &scope;
@ 505: let preamble$341 = preamble$340{preamble$339 -> &False};
@ 506: store &scope preamble$341;
@ 507: let preamble$342 = "NotImplemented";
@ 508: let preamble$343 = get &scope;
@ 509: let preamble$344 = preamble$343{preamble$342 -> &NotImplemented};
@ 510: store &scope preamble$344;
@ 511: let preamble$345 = "*None";
@ 512: let preamble$346 = get &scope;
@ 513: let preamble$347 = preamble$346{preamble$345 -> &None};
@ 514: store &scope preamble$347;
@ 515: let preamble$348 = "bool";
@ 516: let preamble$349 = get &scope;
@ 517: let preamble$350 = preamble$349{preamble$348 -> &bool};
@ 518: store &scope preamble$350;
@ 519: let preamble$351 = "NameError";
@ 520: let preamble$352 = get &scope;
@ 521: let preamble$353 = preamble$352{preamble$351 -> &NameError};
@ 522: store &scope preamble$353;
@ 523: let preamble$354 = "TypeError";
@ 524: let preamble$355 = get &scope;
@ 525: let preamble$356 = preamble$355{preamble$354 -> &TypeError};
@ 526: store &scope preamble$356;
@ 527: let preamble$357 = "AttributeError";
@ 528: let preamble$358 = get &scope;
@ 529: let preamble$359 = preamble$358{preamble$357 -> &AttributeError};
@ 530: store &scope preamble$359;
@ 531: let preamble$360 = "ValueError";
@ 532: let preamble$361 = get &scope;
@ 533: let preamble$362 = preamble$361{preamble$360 -> &ValueError};
@ 534: store &scope preamble$362;
@ 535: let preamble$363 = "StopIteration";
@ 536: let preamble$364 = get &scope;
@ 537: let preamble$365 = preamble$364{preamble$363 -> &StopIteration};
@ 538: store &scope preamble$365;
@ 539: let lamia$0 = 7;
@ 540: let &lamia$1 = alloc;
@ 541: store &lamia$1 lamia$0;
@ 542: let lamia$2 = "*value";
@ 543: let lamia$3 = {};
@ 544: let lamia$4 = lamia$3{lamia$2 -> &lamia$1};
@ 545: let &lamia$5 = alloc;
@ 546: store &lamia$5 lamia$4;
@ 547: let lamia$6 = "$norm1";
@ 548: let lamia$7 = get &scope;
@ 549: let lamia$8 = lamia$7{lamia$6 -> &lamia$5};
@ 550: store &scope lamia$8;
@ 551: let lamia$9 = "$norm1";
@ 552: let &lamia$10 = get_from_scope(lamia$9);
@ 553: let lamia$11 = get &lamia$10;
@ 554: let lamia$12 = "__pos__";
@ 555: let lamia$13 = lamia$11 haskey lamia$12;
@ 556: let &lamia$14 = if lamia$13 then {
    @ 566: let &lamia$15 = lamia$11{lamia$12};
    @ 567: ifresult &lamia$15;

} else {
    @ 557: let lamia$16 = "Object has no attribute __pos__";
    @ 558: let &lamia$17 = alloc;
    @ 559: store &lamia$17 lamia$16;
    @ 560: let lamia$18 = "*value";
    @ 561: let lamia$19 = {};
    @ 562: let lamia$20 = lamia$19{lamia$18 -> &lamia$17};
    @ 563: let &lamia$21 = alloc;
    @ 564: store &lamia$21 lamia$20;
    @ 565: raise &lamia$21;

};
@ 568: let lamia$22 = get &lamia$14;
@ 569: let lamia$23 = isfunc lamia$22;
@ 570: let &lamia$24 = if lamia$23 then {
    @ 572: let lamia$25 = def (lamia$26) {
        @ 573: let lamia$27 = [&lamia$10];
        @ 574: let lamia$28 = lamia$27 || lamia$26;
        @ 575: let &lamia$29 = lamia$22(lamia$28);
        @ 576: return &lamia$29;

    };
    @ 577: let &lamia$30 = alloc;
    @ 578: store &lamia$30 lamia$25;
    @ 579: let lamia$31 = "*value";
    @ 580: let lamia$32 = {};
    @ 581: let lamia$33 = lamia$32{lamia$31 -> &lamia$30};
    @ 582: let &lamia$34 = alloc;
    @ 583: store &lamia$34 lamia$33;
    @ 584: ifresult &lamia$34;

} else {
    @ 571: ifresult &lamia$14;

};
@ 585: let lamia$35 = "$norm2";
@ 586: let lamia$36 = get &scope;
@ 587: let lamia$37 = lamia$36{lamia$35 -> &lamia$24};
@ 588: store &scope lamia$37;
@ 589: let lamia$38 = "$norm2";
@ 590: let &lamia$39 = get_from_scope(lamia$38);
@ 591: let &lamia$40 = &lamia$39;
@ 592: let lamia$42 = get &lamia$40;
@ 593: let lamia$44 = "*value";
@ 594: let lamia$45 = lamia$42 haskey lamia$44;
@ 595: let &lamia$46 = if lamia$45 then {
    @ 605: let &lamia$47 = lamia$42{lamia$44};
    @ 606: ifresult &lamia$47;

} else {
    @ 596: let lamia$48 = "Object has no attribute *value";
    @ 597: let &lamia$49 = alloc;
    @ 598: store &lamia$49 lamia$48;
    @ 599: let lamia$50 = "*value";
    @ 600: let lamia$51 = {};
    @ 601: let lamia$52 = lamia$51{lamia$50 -> &lamia$49};
    @ 602: let &lamia$53 = alloc;
    @ 603: store &lamia$53 lamia$52;
    @ 604: raise &lamia$53;

};
@ 607: let lamia$43 = get &lamia$46;
@ 608: let lamia$54 = isfunc lamia$43;
@ 609: let lamia$55 = not lamia$54;
@ 610: let &lamia$41 = alloc;
@ 611: store &lamia$41 lamia$55;
@ 612: while &lamia$41 {
    @ 613: let lamia$56 = "__call__";
    @ 614: let lamia$57 = lamia$42 haskey lamia$56;
    @ 615: let &lamia$58 = if lamia$57 then {
        @ 625: let &lamia$59 = lamia$42{lamia$56};
        @ 626: ifresult &lamia$59;

    } else {
        @ 616: let lamia$60 = "Object is not callable";
        @ 617: let &lamia$61 = alloc;
        @ 618: store &lamia$61 lamia$60;
        @ 619: let lamia$62 = "*value";
        @ 620: let lamia$63 = {};
        @ 621: let lamia$64 = lamia$63{lamia$62 -> &lamia$61};
        @ 622: let &lamia$65 = alloc;
        @ 623: store &lamia$65 lamia$64;
        @ 624: raise &lamia$65;

    };
    @ 627: let &lamia$40 = &lamia$58;
    @ 628: let lamia$42 = get &lamia$40;
    @ 629: let lamia$44 = "*value";
    @ 630: let lamia$45 = lamia$42 haskey lamia$44;
    @ 631: let &lamia$46 = if lamia$45 then {
        @ 641: let &lamia$47 = lamia$42{lamia$44};
        @ 642: ifresult &lamia$47;

    } else {
        @ 632: let lamia$48 = "Object has no attribute *value";
        @ 633: let &lamia$49 = alloc;
        @ 634: store &lamia$49 lamia$48;
        @ 635: let lamia$50 = "*value";
        @ 636: let lamia$51 = {};
        @ 637: let lamia$52 = lamia$51{lamia$50 -> &lamia$49};
        @ 638: let &lamia$53 = alloc;
        @ 639: store &lamia$53 lamia$52;
        @ 640: raise &lamia$53;

    };
    @ 643: let lamia$43 = get &lamia$46;
    @ 644: let lamia$54 = isfunc lamia$43;
    @ 645: let lamia$55 = not lamia$54;
    @ 646: let &lamia$41 = alloc;
    @ 647: store &lamia$41 lamia$55;

};
@ 648: let lamia$66 = [];
@ 649: let &lamia$67 = lamia$43(lamia$66);
@ 650: let lamia$68 = "$norm3";
@ 651: let lamia$69 = get &scope;
@ 652: let lamia$70 = lamia$69{lamia$68 -> &lamia$67};
@ 653: store &scope lamia$70;
@ 654: let lamia$71 = "$norm3";
@ 655: let &lamia$72 = get_from_scope(lamia$71);
@ 656: let lamia$73 = get &lamia$72;
@ 657: let lamia$74 = "__add__";
@ 658: let lamia$75 = lamia$73 haskey lamia$74;
@ 659: let &lamia$76 = if lamia$75 then {
    @ 669: let &lamia$77 = lamia$73{lamia$74};
    @ 670: ifresult &lamia$77;

} else {
    @ 660: let lamia$78 = "Object has no attribute __add__";
    @ 661: let &lamia$79 = alloc;
    @ 662: store &lamia$79 lamia$78;
    @ 663: let lamia$80 = "*value";
    @ 664: let lamia$81 = {};
    @ 665: let lamia$82 = lamia$81{lamia$80 -> &lamia$79};
    @ 666: let &lamia$83 = alloc;
    @ 667: store &lamia$83 lamia$82;
    @ 668: raise &lamia$83;

};
@ 671: let lamia$84 = get &lamia$76;
@ 672: let lamia$85 = isfunc lamia$84;
@ 673: let &lamia$86 = if lamia$85 then {
    @ 675: let lamia$87 = def (lamia$88) {
        @ 676: let lamia$89 = [&lamia$72];
        @ 677: let lamia$90 = lamia$89 || lamia$88;
        @ 678: let &lamia$91 = lamia$84(lamia$90);
        @ 679: return &lamia$91;

    };
    @ 680: let &lamia$92 = alloc;
    @ 681: store &lamia$92 lamia$87;
    @ 682: let lamia$93 = "*value";
    @ 683: let lamia$94 = {};
    @ 684: let lamia$95 = lamia$94{lamia$93 -> &lamia$92};
    @ 685: let &lamia$96 = alloc;
    @ 686: store &lamia$96 lamia$95;
    @ 687: ifresult &lamia$96;

} else {
    @ 674: ifresult &lamia$76;

};
@ 688: let lamia$97 = "$norm4";
@ 689: let lamia$98 = get &scope;
@ 690: let lamia$99 = lamia$98{lamia$97 -> &lamia$86};
@ 691: store &scope lamia$99;
@ 692: let lamia$100 = 7;
@ 693: let &lamia$101 = alloc;
@ 694: store &lamia$101 lamia$100;
@ 695: let lamia$102 = "*value";
@ 696: let lamia$103 = {};
@ 697: let lamia$104 = lamia$103{lamia$102 -> &lamia$101};
@ 698: let &lamia$105 = alloc;
@ 699: store &lamia$105 lamia$104;
@ 700: let lamia$106 = "$norm5";
@ 701: let lamia$107 = get &scope;
@ 702: let lamia$108 = lamia$107{lamia$106 -> &lamia$105};
@ 703: store &scope lamia$108;
@ 704: let lamia$109 = "$norm4";
@ 705: let &lamia$110 = get_from_scope(lamia$109);
@ 706: let lamia$111 = "$norm5";
@ 707: let &lamia$112 = get_from_scope(lamia$111);
@ 708: let &lamia$113 = &lamia$110;
@ 709: let lamia$115 = get &lamia$113;
@ 710: let lamia$117 = "*value";
@ 711: let lamia$118 = lamia$115 haskey lamia$117;
@ 712: let &lamia$119 = if lamia$118 then {
    @ 722: let &lamia$120 = lamia$115{lamia$117};
    @ 723: ifresult &lamia$120;

} else {
    @ 713: let lamia$121 = "Object has no attribute *value";
    @ 714: let &lamia$122 = alloc;
    @ 715: store &lamia$122 lamia$121;
    @ 716: let lamia$123 = "*value";
    @ 717: let lamia$124 = {};
    @ 718: let lamia$125 = lamia$124{lamia$123 -> &lamia$122};
    @ 719: let &lamia$126 = alloc;
    @ 720: store &lamia$126 lamia$125;
    @ 721: raise &lamia$126;

};
@ 724: let lamia$116 = get &lamia$119;
@ 725: let lamia$127 = isfunc lamia$116;
@ 726: let lamia$128 = not lamia$127;
@ 727: let &lamia$114 = alloc;
@ 728: store &lamia$114 lamia$128;
@ 729: while &lamia$114 {
    @ 730: let lamia$129 = "__call__";
    @ 731: let lamia$130 = lamia$115 haskey lamia$129;
    @ 732: let &lamia$131 = if lamia$130 then {
        @ 742: let &lamia$132 = lamia$115{lamia$129};
        @ 743: ifresult &lamia$132;

    } else {
        @ 733: let lamia$133 = "Object is not callable";
        @ 734: let &lamia$134 = alloc;
        @ 735: store &lamia$134 lamia$133;
        @ 736: let lamia$135 = "*value";
        @ 737: let lamia$136 = {};
        @ 738: let lamia$137 = lamia$136{lamia$135 -> &lamia$134};
        @ 739: let &lamia$138 = alloc;
        @ 740: store &lamia$138 lamia$137;
        @ 741: raise &lamia$138;

    };
    @ 744: let &lamia$113 = &lamia$131;
    @ 745: let lamia$115 = get &lamia$113;
    @ 746: let lamia$117 = "*value";
    @ 747: let lamia$118 = lamia$115 haskey lamia$117;
    @ 748: let &lamia$119 = if lamia$118 then {
        @ 758: let &lamia$120 = lamia$115{lamia$117};
        @ 759: ifresult &lamia$120;

    } else {
        @ 749: let lamia$121 = "Object has no attribute *value";
        @ 750: let &lamia$122 = alloc;
        @ 751: store &lamia$122 lamia$121;
        @ 752: let lamia$123 = "*value";
        @ 753: let lamia$124 = {};
        @ 754: let lamia$125 = lamia$124{lamia$123 -> &lamia$122};
        @ 755: let &lamia$126 = alloc;
        @ 756: store &lamia$126 lamia$125;
        @ 757: raise &lamia$126;

    };
    @ 760: let lamia$116 = get &lamia$119;
    @ 761: let lamia$127 = isfunc lamia$116;
    @ 762: let lamia$128 = not lamia$127;
    @ 763: let &lamia$114 = alloc;
    @ 764: store &lamia$114 lamia$128;

};
@ 765: let lamia$139 = [&lamia$112];
@ 766: let &lamia$140 = lamia$116(lamia$139);
@ 767: let lamia$141 = "$norm6";
@ 768: let lamia$142 = get &scope;
@ 769: let lamia$143 = lamia$142{lamia$141 -> &lamia$140};
@ 770: store &scope lamia$143;
@ 771: let lamia$144 = "$norm6";
@ 772: let &lamia$145 = get_from_scope(lamia$144);
@ 773: let lamia$146 = get &lamia$145;
@ 774: let lamia$147 = "__add__";
@ 775: let lamia$148 = lamia$146 haskey lamia$147;
@ 776: let &lamia$149 = if lamia$148 then {
    @ 786: let &lamia$150 = lamia$146{lamia$147};
    @ 787: ifresult &lamia$150;

} else {
    @ 777: let lamia$151 = "Object has no attribute __add__";
    @ 778: let &lamia$152 = alloc;
    @ 779: store &lamia$152 lamia$151;
    @ 780: let lamia$153 = "*value";
    @ 781: let lamia$154 = {};
    @ 782: let lamia$155 = lamia$154{lamia$153 -> &lamia$152};
    @ 783: let &lamia$156 = alloc;
    @ 784: store &lamia$156 lamia$155;
    @ 785: raise &lamia$156;

};
@ 788: let lamia$157 = get &lamia$149;
@ 789: let lamia$158 = isfunc lamia$157;
@ 790: let &lamia$159 = if lamia$158 then {
    @ 792: let lamia$160 = def (lamia$161) {
        @ 793: let lamia$162 = [&lamia$145];
        @ 794: let lamia$163 = lamia$162 || lamia$161;
        @ 795: let &lamia$164 = lamia$157(lamia$163);
        @ 796: return &lamia$164;

    };
    @ 797: let &lamia$165 = alloc;
    @ 798: store &lamia$165 lamia$160;
    @ 799: let lamia$166 = "*value";
    @ 800: let lamia$167 = {};
    @ 801: let lamia$168 = lamia$167{lamia$166 -> &lamia$165};
    @ 802: let &lamia$169 = alloc;
    @ 803: store &lamia$169 lamia$168;
    @ 804: ifresult &lamia$169;

} else {
    @ 791: ifresult &lamia$149;

};
@ 805: let lamia$170 = "$norm7";
@ 806: let lamia$171 = get &scope;
@ 807: let lamia$172 = lamia$171{lamia$170 -> &lamia$159};
@ 808: store &scope lamia$172;
@ 809: let lamia$173 = 7;
@ 810: let &lamia$174 = alloc;
@ 811: store &lamia$174 lamia$173;
@ 812: let lamia$175 = "*value";
@ 813: let lamia$176 = {};
@ 814: let lamia$177 = lamia$176{lamia$175 -> &lamia$174};
@ 815: let &lamia$178 = alloc;
@ 816: store &lamia$178 lamia$177;
@ 817: let lamia$179 = "$norm8";
@ 818: let lamia$180 = get &scope;
@ 819: let lamia$181 = lamia$180{lamia$179 -> &lamia$178};
@ 820: store &scope lamia$181;
@ 821: let lamia$182 = "$norm7";
@ 822: let &lamia$183 = get_from_scope(lamia$182);
@ 823: let lamia$184 = "$norm8";
@ 824: let &lamia$185 = get_from_scope(lamia$184);
@ 825: let &lamia$186 = &lamia$183;
@ 826: let lamia$188 = get &lamia$186;
@ 827: let lamia$190 = "*value";
@ 828: let lamia$191 = lamia$188 haskey lamia$190;
@ 829: let &lamia$192 = if lamia$191 then {
    @ 839: let &lamia$193 = lamia$188{lamia$190};
    @ 840: ifresult &lamia$193;

} else {
    @ 830: let lamia$194 = "Object has no attribute *value";
    @ 831: let &lamia$195 = alloc;
    @ 832: store &lamia$195 lamia$194;
    @ 833: let lamia$196 = "*value";
    @ 834: let lamia$197 = {};
    @ 835: let lamia$198 = lamia$197{lamia$196 -> &lamia$195};
    @ 836: let &lamia$199 = alloc;
    @ 837: store &lamia$199 lamia$198;
    @ 838: raise &lamia$199;

};
@ 841: let lamia$189 = get &lamia$192;
@ 842: let lamia$200 = isfunc lamia$189;
@ 843: let lamia$201 = not lamia$200;
@ 844: let &lamia$187 = alloc;
@ 845: store &lamia$187 lamia$201;
@ 846: while &lamia$187 {
    @ 847: let lamia$202 = "__call__";
    @ 848: let lamia$203 = lamia$188 haskey lamia$202;
    @ 849: let &lamia$204 = if lamia$203 then {
        @ 859: let &lamia$205 = lamia$188{lamia$202};
        @ 860: ifresult &lamia$205;

    } else {
        @ 850: let lamia$206 = "Object is not callable";
        @ 851: let &lamia$207 = alloc;
        @ 852: store &lamia$207 lamia$206;
        @ 853: let lamia$208 = "*value";
        @ 854: let lamia$209 = {};
        @ 855: let lamia$210 = lamia$209{lamia$208 -> &lamia$207};
        @ 856: let &lamia$211 = alloc;
        @ 857: store &lamia$211 lamia$210;
        @ 858: raise &lamia$211;

    };
    @ 861: let &lamia$186 = &lamia$204;
    @ 862: let lamia$188 = get &lamia$186;
    @ 863: let lamia$190 = "*value";
    @ 864: let lamia$191 = lamia$188 haskey lamia$190;
    @ 865: let &lamia$192 = if lamia$191 then {
        @ 875: let &lamia$193 = lamia$188{lamia$190};
        @ 876: ifresult &lamia$193;

    } else {
        @ 866: let lamia$194 = "Object has no attribute *value";
        @ 867: let &lamia$195 = alloc;
        @ 868: store &lamia$195 lamia$194;
        @ 869: let lamia$196 = "*value";
        @ 870: let lamia$197 = {};
        @ 871: let lamia$198 = lamia$197{lamia$196 -> &lamia$195};
        @ 872: let &lamia$199 = alloc;
        @ 873: store &lamia$199 lamia$198;
        @ 874: raise &lamia$199;

    };
    @ 877: let lamia$189 = get &lamia$192;
    @ 878: let lamia$200 = isfunc lamia$189;
    @ 879: let lamia$201 = not lamia$200;
    @ 880: let &lamia$187 = alloc;
    @ 881: store &lamia$187 lamia$201;

};
@ 882: let lamia$212 = [&lamia$185];
@ 883: let &lamia$213 = lamia$189(lamia$212);
@ 884: let lamia$214 = "$norm9";
@ 885: let lamia$215 = get &scope;
@ 886: let lamia$216 = lamia$215{lamia$214 -> &lamia$213};
@ 887: store &scope lamia$216;
@ 888: let lamia$217 = "$norm9";
@ 889: let &lamia$218 = get_from_scope(lamia$217);
@ 890: let lamia$219 = get &lamia$218;
@ 891: let lamia$220 = "__add__";
@ 892: let lamia$221 = lamia$219 haskey lamia$220;
@ 893: let &lamia$222 = if lamia$221 then {
    @ 903: let &lamia$223 = lamia$219{lamia$220};
    @ 904: ifresult &lamia$223;

} else {
    @ 894: let lamia$224 = "Object has no attribute __add__";
    @ 895: let &lamia$225 = alloc;
    @ 896: store &lamia$225 lamia$224;
    @ 897: let lamia$226 = "*value";
    @ 898: let lamia$227 = {};
    @ 899: let lamia$228 = lamia$227{lamia$226 -> &lamia$225};
    @ 900: let &lamia$229 = alloc;
    @ 901: store &lamia$229 lamia$228;
    @ 902: raise &lamia$229;

};
@ 905: let lamia$230 = get &lamia$222;
@ 906: let lamia$231 = isfunc lamia$230;
@ 907: let &lamia$232 = if lamia$231 then {
    @ 909: let lamia$233 = def (lamia$234) {
        @ 910: let lamia$235 = [&lamia$218];
        @ 911: let lamia$236 = lamia$235 || lamia$234;
        @ 912: let &lamia$237 = lamia$230(lamia$236);
        @ 913: return &lamia$237;

    };
    @ 914: let &lamia$238 = alloc;
    @ 915: store &lamia$238 lamia$233;
    @ 916: let lamia$239 = "*value";
    @ 917: let lamia$240 = {};
    @ 918: let lamia$241 = lamia$240{lamia$239 -> &lamia$238};
    @ 919: let &lamia$242 = alloc;
    @ 920: store &lamia$242 lamia$241;
    @ 921: ifresult &lamia$242;

} else {
    @ 908: ifresult &lamia$222;

};
@ 922: let lamia$243 = "$norm10";
@ 923: let lamia$244 = get &scope;
@ 924: let lamia$245 = lamia$244{lamia$243 -> &lamia$232};
@ 925: store &scope lamia$245;
@ 926: let lamia$246 = 7;
@ 927: let &lamia$247 = alloc;
@ 928: store &lamia$247 lamia$246;
@ 929: let lamia$248 = "*value";
@ 930: let lamia$249 = {};
@ 931: let lamia$250 = lamia$249{lamia$248 -> &lamia$247};
@ 932: let &lamia$251 = alloc;
@ 933: store &lamia$251 lamia$250;
@ 934: let lamia$252 = "$norm11";
@ 935: let lamia$253 = get &scope;
@ 936: let lamia$254 = lamia$253{lamia$252 -> &lamia$251};
@ 937: store &scope lamia$254;
@ 938: let lamia$255 = "$norm10";
@ 939: let &lamia$256 = get_from_scope(lamia$255);
@ 940: let lamia$257 = "$norm11";
@ 941: let &lamia$258 = get_from_scope(lamia$257);
@ 942: let &lamia$259 = &lamia$256;
@ 943: let lamia$261 = get &lamia$259;
@ 944: let lamia$263 = "*value";
@ 945: let lamia$264 = lamia$261 haskey lamia$263;
@ 946: let &lamia$265 = if lamia$264 then {
    @ 956: let &lamia$266 = lamia$261{lamia$263};
    @ 957: ifresult &lamia$266;

} else {
    @ 947: let lamia$267 = "Object has no attribute *value";
    @ 948: let &lamia$268 = alloc;
    @ 949: store &lamia$268 lamia$267;
    @ 950: let lamia$269 = "*value";
    @ 951: let lamia$270 = {};
    @ 952: let lamia$271 = lamia$270{lamia$269 -> &lamia$268};
    @ 953: let &lamia$272 = alloc;
    @ 954: store &lamia$272 lamia$271;
    @ 955: raise &lamia$272;

};
@ 958: let lamia$262 = get &lamia$265;
@ 959: let lamia$273 = isfunc lamia$262;
@ 960: let lamia$274 = not lamia$273;
@ 961: let &lamia$260 = alloc;
@ 962: store &lamia$260 lamia$274;
@ 963: while &lamia$260 {
    @ 964: let lamia$275 = "__call__";
    @ 965: let lamia$276 = lamia$261 haskey lamia$275;
    @ 966: let &lamia$277 = if lamia$276 then {
        @ 976: let &lamia$278 = lamia$261{lamia$275};
        @ 977: ifresult &lamia$278;

    } else {
        @ 967: let lamia$279 = "Object is not callable";
        @ 968: let &lamia$280 = alloc;
        @ 969: store &lamia$280 lamia$279;
        @ 970: let lamia$281 = "*value";
        @ 971: let lamia$282 = {};
        @ 972: let lamia$283 = lamia$282{lamia$281 -> &lamia$280};
        @ 973: let &lamia$284 = alloc;
        @ 974: store &lamia$284 lamia$283;
        @ 975: raise &lamia$284;

    };
    @ 978: let &lamia$259 = &lamia$277;
    @ 979: let lamia$261 = get &lamia$259;
    @ 980: let lamia$263 = "*value";
    @ 981: let lamia$264 = lamia$261 haskey lamia$263;
    @ 982: let &lamia$265 = if lamia$264 then {
        @ 992: let &lamia$266 = lamia$261{lamia$263};
        @ 993: ifresult &lamia$266;

    } else {
        @ 983: let lamia$267 = "Object has no attribute *value";
        @ 984: let &lamia$268 = alloc;
        @ 985: store &lamia$268 lamia$267;
        @ 986: let lamia$269 = "*value";
        @ 987: let lamia$270 = {};
        @ 988: let lamia$271 = lamia$270{lamia$269 -> &lamia$268};
        @ 989: let &lamia$272 = alloc;
        @ 990: store &lamia$272 lamia$271;
        @ 991: raise &lamia$272;

    };
    @ 994: let lamia$262 = get &lamia$265;
    @ 995: let lamia$273 = isfunc lamia$262;
    @ 996: let lamia$274 = not lamia$273;
    @ 997: let &lamia$260 = alloc;
    @ 998: store &lamia$260 lamia$274;

};
@ 999: let lamia$285 = [&lamia$258];
@1000: let &lamia$286 = lamia$262(lamia$285);
@1001: let lamia$287 = "$norm12";
@1002: let lamia$288 = get &scope;
@1003: let lamia$289 = lamia$288{lamia$287 -> &lamia$286};
@1004: store &scope lamia$289;
@1005: let lamia$290 = "$norm12";
@1006: let &lamia$291 = get_from_scope(lamia$290);
@1007: let lamia$292 = get &lamia$291;
@1008: let lamia$293 = "__add__";
@1009: let lamia$294 = lamia$292 haskey lamia$293;
@1010: let &lamia$295 = if lamia$294 then {
    @1020: let &lamia$296 = lamia$292{lamia$293};
    @1021: ifresult &lamia$296;

} else {
    @1011: let lamia$297 = "Object has no attribute __add__";
    @1012: let &lamia$298 = alloc;
    @1013: store &lamia$298 lamia$297;
    @1014: let lamia$299 = "*value";
    @1015: let lamia$300 = {};
    @1016: let lamia$301 = lamia$300{lamia$299 -> &lamia$298};
    @1017: let &lamia$302 = alloc;
    @1018: store &lamia$302 lamia$301;
    @1019: raise &lamia$302;

};
@1022: let lamia$303 = get &lamia$295;
@1023: let lamia$304 = isfunc lamia$303;
@1024: let &lamia$305 = if lamia$304 then {
    @1026: let lamia$306 = def (lamia$307) {
        @1027: let lamia$308 = [&lamia$291];
        @1028: let lamia$309 = lamia$308 || lamia$307;
        @1029: let &lamia$310 = lamia$303(lamia$309);
        @1030: return &lamia$310;

    };
    @1031: let &lamia$311 = alloc;
    @1032: store &lamia$311 lamia$306;
    @1033: let lamia$312 = "*value";
    @1034: let lamia$313 = {};
    @1035: let lamia$314 = lamia$313{lamia$312 -> &lamia$311};
    @1036: let &lamia$315 = alloc;
    @1037: store &lamia$315 lamia$314;
    @1038: ifresult &lamia$315;

} else {
    @1025: ifresult &lamia$295;

};
@1039: let lamia$316 = "$norm13";
@1040: let lamia$317 = get &scope;
@1041: let lamia$318 = lamia$317{lamia$316 -> &lamia$305};
@1042: store &scope lamia$318;
@1043: let lamia$319 = 7;
@1044: let &lamia$320 = alloc;
@1045: store &lamia$320 lamia$319;
@1046: let lamia$321 = "*value";
@1047: let lamia$322 = {};
@1048: let lamia$323 = lamia$322{lamia$321 -> &lamia$320};
@1049: let &lamia$324 = alloc;
@1050: store &lamia$324 lamia$323;
@1051: let lamia$325 = "$norm14";
@1052: let lamia$326 = get &scope;
@1053: let lamia$327 = lamia$326{lamia$325 -> &lamia$324};
@1054: store &scope lamia$327;
@1055: let lamia$328 = "$norm13";
@1056: let &lamia$329 = get_from_scope(lamia$328);
@1057: let lamia$330 = "$norm14";
@1058: let &lamia$331 = get_from_scope(lamia$330);
@1059: let &lamia$332 = &lamia$329;
@1060: let lamia$334 = get &lamia$332;
@1061: let lamia$336 = "*value";
@1062: let lamia$337 = lamia$334 haskey lamia$336;
@1063: let &lamia$338 = if lamia$337 then {
    @1073: let &lamia$339 = lamia$334{lamia$336};
    @1074: ifresult &lamia$339;

} else {
    @1064: let lamia$340 = "Object has no attribute *value";
    @1065: let &lamia$341 = alloc;
    @1066: store &lamia$341 lamia$340;
    @1067: let lamia$342 = "*value";
    @1068: let lamia$343 = {};
    @1069: let lamia$344 = lamia$343{lamia$342 -> &lamia$341};
    @1070: let &lamia$345 = alloc;
    @1071: store &lamia$345 lamia$344;
    @1072: raise &lamia$345;

};
@1075: let lamia$335 = get &lamia$338;
@1076: let lamia$346 = isfunc lamia$335;
@1077: let lamia$347 = not lamia$346;
@1078: let &lamia$333 = alloc;
@1079: store &lamia$333 lamia$347;
@1080: while &lamia$333 {
    @1081: let lamia$348 = "__call__";
    @1082: let lamia$349 = lamia$334 haskey lamia$348;
    @1083: let &lamia$350 = if lamia$349 then {
        @1093: let &lamia$351 = lamia$334{lamia$348};
        @1094: ifresult &lamia$351;

    } else {
        @1084: let lamia$352 = "Object is not callable";
        @1085: let &lamia$353 = alloc;
        @1086: store &lamia$353 lamia$352;
        @1087: let lamia$354 = "*value";
        @1088: let lamia$355 = {};
        @1089: let lamia$356 = lamia$355{lamia$354 -> &lamia$353};
        @1090: let &lamia$357 = alloc;
        @1091: store &lamia$357 lamia$356;
        @1092: raise &lamia$357;

    };
    @1095: let &lamia$332 = &lamia$350;
    @1096: let lamia$334 = get &lamia$332;
    @1097: let lamia$336 = "*value";
    @1098: let lamia$337 = lamia$334 haskey lamia$336;
    @1099: let &lamia$338 = if lamia$337 then {
        @1109: let &lamia$339 = lamia$334{lamia$336};
        @1110: ifresult &lamia$339;

    } else {
        @1100: let lamia$340 = "Object has no attribute *value";
        @1101: let &lamia$341 = alloc;
        @1102: store &lamia$341 lamia$340;
        @1103: let lamia$342 = "*value";
        @1104: let lamia$343 = {};
        @1105: let lamia$344 = lamia$343{lamia$342 -> &lamia$341};
        @1106: let &lamia$345 = alloc;
        @1107: store &lamia$345 lamia$344;
        @1108: raise &lamia$345;

    };
    @1111: let lamia$335 = get &lamia$338;
    @1112: let lamia$346 = isfunc lamia$335;
    @1113: let lamia$347 = not lamia$346;
    @1114: let &lamia$333 = alloc;
    @1115: store &lamia$333 lamia$347;

};
@1116: let lamia$358 = [&lamia$331];
@1117: let &lamia$359 = lamia$335(lamia$358);
@1118: let lamia$360 = "$norm15";
@1119: let lamia$361 = get &scope;
@1120: let lamia$362 = lamia$361{lamia$360 -> &lamia$359};
@1121: store &scope lamia$362;
@1122: let lamia$363 = "$norm15";
@1123: let &lamia$364 = get_from_scope(lamia$363);
@1124: let lamia$365 = get &lamia$364;
@1125: let lamia$366 = "__add__";
@1126: let lamia$367 = lamia$365 haskey lamia$366;
@1127: let &lamia$368 = if lamia$367 then {
    @1137: let &lamia$369 = lamia$365{lamia$366};
    @1138: ifresult &lamia$369;

} else {
    @1128: let lamia$370 = "Object has no attribute __add__";
    @1129: let &lamia$371 = alloc;
    @1130: store &lamia$371 lamia$370;
    @1131: let lamia$372 = "*value";
    @1132: let lamia$373 = {};
    @1133: let lamia$374 = lamia$373{lamia$372 -> &lamia$371};
    @1134: let &lamia$375 = alloc;
    @1135: store &lamia$375 lamia$374;
    @1136: raise &lamia$375;

};
@1139: let lamia$376 = get &lamia$368;
@1140: let lamia$377 = isfunc lamia$376;
@1141: let &lamia$378 = if lamia$377 then {
    @1143: let lamia$379 = def (lamia$380) {
        @1144: let lamia$381 = [&lamia$364];
        @1145: let lamia$382 = lamia$381 || lamia$380;
        @1146: let &lamia$383 = lamia$376(lamia$382);
        @1147: return &lamia$383;

    };
    @1148: let &lamia$384 = alloc;
    @1149: store &lamia$384 lamia$379;
    @1150: let lamia$385 = "*value";
    @1151: let lamia$386 = {};
    @1152: let lamia$387 = lamia$386{lamia$385 -> &lamia$384};
    @1153: let &lamia$388 = alloc;
    @1154: store &lamia$388 lamia$387;
    @1155: ifresult &lamia$388;

} else {
    @1142: ifresult &lamia$368;

};
@1156: let lamia$389 = "$norm16";
@1157: let lamia$390 = get &scope;
@1158: let lamia$391 = lamia$390{lamia$389 -> &lamia$378};
@1159: store &scope lamia$391;
@1160: let lamia$392 = 7;
@1161: let &lamia$393 = alloc;
@1162: store &lamia$393 lamia$392;
@1163: let lamia$394 = "*value";
@1164: let lamia$395 = {};
@1165: let lamia$396 = lamia$395{lamia$394 -> &lamia$393};
@1166: let &lamia$397 = alloc;
@1167: store &lamia$397 lamia$396;
@1168: let lamia$398 = "$norm17";
@1169: let lamia$399 = get &scope;
@1170: let lamia$400 = lamia$399{lamia$398 -> &lamia$397};
@1171: store &scope lamia$400;
@1172: let lamia$401 = "$norm16";
@1173: let &lamia$402 = get_from_scope(lamia$401);
@1174: let lamia$403 = "$norm17";
@1175: let &lamia$404 = get_from_scope(lamia$403);
@1176: let &lamia$405 = &lamia$402;
@1177: let lamia$407 = get &lamia$405;
@1178: let lamia$409 = "*value";
@1179: let lamia$410 = lamia$407 haskey lamia$409;
@1180: let &lamia$411 = if lamia$410 then {
    @1190: let &lamia$412 = lamia$407{lamia$409};
    @1191: ifresult &lamia$412;

} else {
    @1181: let lamia$413 = "Object has no attribute *value";
    @1182: let &lamia$414 = alloc;
    @1183: store &lamia$414 lamia$413;
    @1184: let lamia$415 = "*value";
    @1185: let lamia$416 = {};
    @1186: let lamia$417 = lamia$416{lamia$415 -> &lamia$414};
    @1187: let &lamia$418 = alloc;
    @1188: store &lamia$418 lamia$417;
    @1189: raise &lamia$418;

};
@1192: let lamia$408 = get &lamia$411;
@1193: let lamia$419 = isfunc lamia$408;
@1194: let lamia$420 = not lamia$419;
@1195: let &lamia$406 = alloc;
@1196: store &lamia$406 lamia$420;
@1197: while &lamia$406 {
    @1198: let lamia$421 = "__call__";
    @1199: let lamia$422 = lamia$407 haskey lamia$421;
    @1200: let &lamia$423 = if lamia$422 then {
        @1210: let &lamia$424 = lamia$407{lamia$421};
        @1211: ifresult &lamia$424;

    } else {
        @1201: let lamia$425 = "Object is not callable";
        @1202: let &lamia$426 = alloc;
        @1203: store &lamia$426 lamia$425;
        @1204: let lamia$427 = "*value";
        @1205: let lamia$428 = {};
        @1206: let lamia$429 = lamia$428{lamia$427 -> &lamia$426};
        @1207: let &lamia$430 = alloc;
        @1208: store &lamia$430 lamia$429;
        @1209: raise &lamia$430;

    };
    @1212: let &lamia$405 = &lamia$423;
    @1213: let lamia$407 = get &lamia$405;
    @1214: let lamia$409 = "*value";
    @1215: let lamia$410 = lamia$407 haskey lamia$409;
    @1216: let &lamia$411 = if lamia$410 then {
        @1226: let &lamia$412 = lamia$407{lamia$409};
        @1227: ifresult &lamia$412;

    } else {
        @1217: let lamia$413 = "Object has no attribute *value";
        @1218: let &lamia$414 = alloc;
        @1219: store &lamia$414 lamia$413;
        @1220: let lamia$415 = "*value";
        @1221: let lamia$416 = {};
        @1222: let lamia$417 = lamia$416{lamia$415 -> &lamia$414};
        @1223: let &lamia$418 = alloc;
        @1224: store &lamia$418 lamia$417;
        @1225: raise &lamia$418;

    };
    @1228: let lamia$408 = get &lamia$411;
    @1229: let lamia$419 = isfunc lamia$408;
    @1230: let lamia$420 = not lamia$419;
    @1231: let &lamia$406 = alloc;
    @1232: store &lamia$406 lamia$420;

};
@1233: let lamia$431 = [&lamia$404];
@1234: let &lamia$432 = lamia$408(lamia$431);
@1235: let lamia$433 = "$norm18";
@1236: let lamia$434 = get &scope;
@1237: let lamia$435 = lamia$434{lamia$433 -> &lamia$432};
@1238: store &scope lamia$435;
@1239: let lamia$436 = "$norm18";
@1240: let &lamia$437 = get_from_scope(lamia$436);
@1241: let lamia$438 = get &lamia$437;
@1242: let lamia$439 = "__add__";
@1243: let lamia$440 = lamia$438 haskey lamia$439;
@1244: let &lamia$441 = if lamia$440 then {
    @1254: let &lamia$442 = lamia$438{lamia$439};
    @1255: ifresult &lamia$442;

} else {
    @1245: let lamia$443 = "Object has no attribute __add__";
    @1246: let &lamia$444 = alloc;
    @1247: store &lamia$444 lamia$443;
    @1248: let lamia$445 = "*value";
    @1249: let lamia$446 = {};
    @1250: let lamia$447 = lamia$446{lamia$445 -> &lamia$444};
    @1251: let &lamia$448 = alloc;
    @1252: store &lamia$448 lamia$447;
    @1253: raise &lamia$448;

};
@1256: let lamia$449 = get &lamia$441;
@1257: let lamia$450 = isfunc lamia$449;
@1258: let &lamia$451 = if lamia$450 then {
    @1260: let lamia$452 = def (lamia$453) {
        @1261: let lamia$454 = [&lamia$437];
        @1262: let lamia$455 = lamia$454 || lamia$453;
        @1263: let &lamia$456 = lamia$449(lamia$455);
        @1264: return &lamia$456;

    };
    @1265: let &lamia$457 = alloc;
    @1266: store &lamia$457 lamia$452;
    @1267: let lamia$458 = "*value";
    @1268: let lamia$459 = {};
    @1269: let lamia$460 = lamia$459{lamia$458 -> &lamia$457};
    @1270: let &lamia$461 = alloc;
    @1271: store &lamia$461 lamia$460;
    @1272: ifresult &lamia$461;

} else {
    @1259: ifresult &lamia$441;

};
@1273: let lamia$462 = "$norm19";
@1274: let lamia$463 = get &scope;
@1275: let lamia$464 = lamia$463{lamia$462 -> &lamia$451};
@1276: store &scope lamia$464;
@1277: let lamia$465 = 7;
@1278: let &lamia$466 = alloc;
@1279: store &lamia$466 lamia$465;
@1280: let lamia$467 = "*value";
@1281: let lamia$468 = {};
@1282: let lamia$469 = lamia$468{lamia$467 -> &lamia$466};
@1283: let &lamia$470 = alloc;
@1284: store &lamia$470 lamia$469;
@1285: let lamia$471 = "$norm20";
@1286: let lamia$472 = get &scope;
@1287: let lamia$473 = lamia$472{lamia$471 -> &lamia$470};
@1288: store &scope lamia$473;
@1289: let lamia$474 = "$norm19";
@1290: let &lamia$475 = get_from_scope(lamia$474);
@1291: let lamia$476 = "$norm20";
@1292: let &lamia$477 = get_from_scope(lamia$476);
@1293: let &lamia$478 = &lamia$475;
@1294: let lamia$480 = get &lamia$478;
@1295: let lamia$482 = "*value";
@1296: let lamia$483 = lamia$480 haskey lamia$482;
@1297: let &lamia$484 = if lamia$483 then {
    @1307: let &lamia$485 = lamia$480{lamia$482};
    @1308: ifresult &lamia$485;

} else {
    @1298: let lamia$486 = "Object has no attribute *value";
    @1299: let &lamia$487 = alloc;
    @1300: store &lamia$487 lamia$486;
    @1301: let lamia$488 = "*value";
    @1302: let lamia$489 = {};
    @1303: let lamia$490 = lamia$489{lamia$488 -> &lamia$487};
    @1304: let &lamia$491 = alloc;
    @1305: store &lamia$491 lamia$490;
    @1306: raise &lamia$491;

};
@1309: let lamia$481 = get &lamia$484;
@1310: let lamia$492 = isfunc lamia$481;
@1311: let lamia$493 = not lamia$492;
@1312: let &lamia$479 = alloc;
@1313: store &lamia$479 lamia$493;
@1314: while &lamia$479 {
    @1315: let lamia$494 = "__call__";
    @1316: let lamia$495 = lamia$480 haskey lamia$494;
    @1317: let &lamia$496 = if lamia$495 then {
        @1327: let &lamia$497 = lamia$480{lamia$494};
        @1328: ifresult &lamia$497;

    } else {
        @1318: let lamia$498 = "Object is not callable";
        @1319: let &lamia$499 = alloc;
        @1320: store &lamia$499 lamia$498;
        @1321: let lamia$500 = "*value";
        @1322: let lamia$501 = {};
        @1323: let lamia$502 = lamia$501{lamia$500 -> &lamia$499};
        @1324: let &lamia$503 = alloc;
        @1325: store &lamia$503 lamia$502;
        @1326: raise &lamia$503;

    };
    @1329: let &lamia$478 = &lamia$496;
    @1330: let lamia$480 = get &lamia$478;
    @1331: let lamia$482 = "*value";
    @1332: let lamia$483 = lamia$480 haskey lamia$482;
    @1333: let &lamia$484 = if lamia$483 then {
        @1343: let &lamia$485 = lamia$480{lamia$482};
        @1344: ifresult &lamia$485;

    } else {
        @1334: let lamia$486 = "Object has no attribute *value";
        @1335: let &lamia$487 = alloc;
        @1336: store &lamia$487 lamia$486;
        @1337: let lamia$488 = "*value";
        @1338: let lamia$489 = {};
        @1339: let lamia$490 = lamia$489{lamia$488 -> &lamia$487};
        @1340: let &lamia$491 = alloc;
        @1341: store &lamia$491 lamia$490;
        @1342: raise &lamia$491;

    };
    @1345: let lamia$481 = get &lamia$484;
    @1346: let lamia$492 = isfunc lamia$481;
    @1347: let lamia$493 = not lamia$492;
    @1348: let &lamia$479 = alloc;
    @1349: store &lamia$479 lamia$493;

};
@1350: let lamia$504 = [&lamia$477];
@1351: let &lamia$505 = lamia$481(lamia$504);
@1352: let lamia$506 = "$norm21";
@1353: let lamia$507 = get &scope;
@1354: let lamia$508 = lamia$507{lamia$506 -> &lamia$505};
@1355: store &scope lamia$508;
